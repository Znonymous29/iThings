// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: proto/ud.proto

package ud

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WithID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *WithID) Reset() {
	*x = WithID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithID) ProtoMessage() {}

func (x *WithID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithID.ProtoReflect.Descriptor instead.
func (*WithID) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{0}
}

func (x *WithID) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{1}
}

type PageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *PageInfo) Reset() {
	*x = PageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfo) ProtoMessage() {}

func (x *PageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfo.ProtoReflect.Descriptor instead.
func (*PageInfo) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{2}
}

func (x *PageInfo) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type TimeRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start int64 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End   int64 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *TimeRange) Reset() {
	*x = TimeRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRange) ProtoMessage() {}

func (x *TimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeRange.ProtoReflect.Descriptor instead.
func (*TimeRange) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{3}
}

func (x *TimeRange) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *TimeRange) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

type DeviceCore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID  string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`   //产品id
	DeviceName string `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"` //设备名称
}

func (x *DeviceCore) Reset() {
	*x = DeviceCore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceCore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceCore) ProtoMessage() {}

func (x *DeviceCore) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceCore.ProtoReflect.Descriptor instead.
func (*DeviceCore) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{4}
}

func (x *DeviceCore) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *DeviceCore) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

type DeviceTimerIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`               //分页信息 只获取一个则不填
	Status      int64     `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`          //状态: 1启用 2禁用
	TriggerType string    `protobuf:"bytes,3,opt,name=triggerType,proto3" json:"triggerType,omitempty"` //触发类型 device: 设备触发 timer: 定时触发 manual:手动触发
}

func (x *DeviceTimerIndexReq) Reset() {
	*x = DeviceTimerIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceTimerIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceTimerIndexReq) ProtoMessage() {}

func (x *DeviceTimerIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceTimerIndexReq.ProtoReflect.Descriptor instead.
func (*DeviceTimerIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{5}
}

func (x *DeviceTimerIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *DeviceTimerIndexReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DeviceTimerIndexReq) GetTriggerType() string {
	if x != nil {
		return x.TriggerType
	}
	return ""
}

type DeviceTimerIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*DeviceTimerInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`    //设备信息
	Total int64              `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总数(只有分页的时候会返回)
}

func (x *DeviceTimerIndexResp) Reset() {
	*x = DeviceTimerIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceTimerIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceTimerIndexResp) ProtoMessage() {}

func (x *DeviceTimerIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceTimerIndexResp.ProtoReflect.Descriptor instead.
func (*DeviceTimerIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{6}
}

func (x *DeviceTimerIndexResp) GetList() []*DeviceTimerInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *DeviceTimerIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type DeviceTimerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`    //场景id
	Name        string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` //名称
	Device      *DeviceCore `protobuf:"bytes,3,opt,name=device,proto3" json:"device,omitempty"`
	CreatedTime int64       `protobuf:"varint,5,opt,name=createdTime,proto3" json:"createdTime,omitempty"`  //创建时间 秒级时间戳 只读
	TriggerType string      `protobuf:"bytes,6,opt,name=triggerType,proto3" json:"triggerType,omitempty"`   //触发类型 timer: 定时触发 delay: 延迟触发(延迟触发同时只能存在一个)
	ExecAt      int64       `protobuf:"varint,7,opt,name=execAt,proto3" json:"execAt,omitempty"`            //执行时间 从0点加起来的秒数 如 1点就是 1*60*60
	ExecRepeat  int64       `protobuf:"varint,8,opt,name=execRepeat,proto3" json:"execRepeat,omitempty"`    //重复 二进制周一到周日 11111111 这个参数只有定时触发才有
	ActionType  string      `protobuf:"bytes,9,opt,name=actionType,proto3" json:"actionType,omitempty"`     //云端向设备发起属性控制: propertyControl  应用调用设备行为:action
	DataID      string      `protobuf:"bytes,10,opt,name=dataID,proto3" json:"dataID,omitempty"`            //属性的id及行为的id
	Value       string      `protobuf:"bytes,11,opt,name=value,proto3" json:"value,omitempty"`              //传的值
	Status      int64       `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`           // 状态（1启用 2禁用）
	LastRunTime int64       `protobuf:"varint,13,opt,name=lastRunTime,proto3" json:"lastRunTime,omitempty"` //最后一次执行时间 秒级时间戳 只读
}

func (x *DeviceTimerInfo) Reset() {
	*x = DeviceTimerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceTimerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceTimerInfo) ProtoMessage() {}

func (x *DeviceTimerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceTimerInfo.ProtoReflect.Descriptor instead.
func (*DeviceTimerInfo) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{7}
}

func (x *DeviceTimerInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeviceTimerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeviceTimerInfo) GetDevice() *DeviceCore {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *DeviceTimerInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *DeviceTimerInfo) GetTriggerType() string {
	if x != nil {
		return x.TriggerType
	}
	return ""
}

func (x *DeviceTimerInfo) GetExecAt() int64 {
	if x != nil {
		return x.ExecAt
	}
	return 0
}

func (x *DeviceTimerInfo) GetExecRepeat() int64 {
	if x != nil {
		return x.ExecRepeat
	}
	return 0
}

func (x *DeviceTimerInfo) GetActionType() string {
	if x != nil {
		return x.ActionType
	}
	return ""
}

func (x *DeviceTimerInfo) GetDataID() string {
	if x != nil {
		return x.DataID
	}
	return ""
}

func (x *DeviceTimerInfo) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *DeviceTimerInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DeviceTimerInfo) GetLastRunTime() int64 {
	if x != nil {
		return x.LastRunTime
	}
	return 0
}

type SceneInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`              //分页信息 只获取一个则不填
	AreaID     int64     `protobuf:"varint,6,opt,name=areaID,proto3" json:"areaID,omitempty"`         //所属区域
	Tag        string    `protobuf:"bytes,7,opt,name=tag,proto3" json:"tag,omitempty"`                //标签 admin: 管理员 normal: 普通
	Name       string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`              //场景名 模糊查询
	Status     int64     `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`         //状态: 1启用 2禁用
	Type       string    `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`              //auto:自动化 manual:手动触发
	AlarmID    int64     `protobuf:"varint,5,opt,name=alarmID,proto3" json:"alarmID,omitempty"`       //告警配置ID过滤
	DeviceMode string    `protobuf:"bytes,10,opt,name=deviceMode,proto3" json:"deviceMode,omitempty"` //设备模式 single:单设备 multi:多设备
	ProductID  string    `protobuf:"bytes,8,opt,name=productID,proto3" json:"productID,omitempty"`    //产品id
	DeviceName string    `protobuf:"bytes,9,opt,name=deviceName,proto3" json:"deviceName,omitempty"`  //设备名称
}

func (x *SceneInfoIndexReq) Reset() {
	*x = SceneInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneInfoIndexReq) ProtoMessage() {}

func (x *SceneInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneInfoIndexReq.ProtoReflect.Descriptor instead.
func (*SceneInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{8}
}

func (x *SceneInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *SceneInfoIndexReq) GetAreaID() int64 {
	if x != nil {
		return x.AreaID
	}
	return 0
}

func (x *SceneInfoIndexReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *SceneInfoIndexReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SceneInfoIndexReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SceneInfoIndexReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SceneInfoIndexReq) GetAlarmID() int64 {
	if x != nil {
		return x.AlarmID
	}
	return 0
}

func (x *SceneInfoIndexReq) GetDeviceMode() string {
	if x != nil {
		return x.DeviceMode
	}
	return ""
}

func (x *SceneInfoIndexReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *SceneInfoIndexReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

type SceneInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*SceneInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`    //设备信息
	Total int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总数(只有分页的时候会返回)
}

func (x *SceneInfoIndexResp) Reset() {
	*x = SceneInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneInfoIndexResp) ProtoMessage() {}

func (x *SceneInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneInfoIndexResp.ProtoReflect.Descriptor instead.
func (*SceneInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{9}
}

func (x *SceneInfoIndexResp) GetList() []*SceneInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *SceneInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SceneFlowInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`       //if then
	SubType string `protobuf:"bytes,2,opt,name=subType,proto3" json:"subType,omitempty"` //timer:定时触发 notify: 通知 delay:延迟  device:设备输出或设备触发
	Info    string `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`       //内容
}

func (x *SceneFlowInfo) Reset() {
	*x = SceneFlowInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneFlowInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneFlowInfo) ProtoMessage() {}

func (x *SceneFlowInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneFlowInfo.ProtoReflect.Descriptor instead.
func (*SceneFlowInfo) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{10}
}

func (x *SceneFlowInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SceneFlowInfo) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *SceneFlowInfo) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type SceneInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                   //场景id
	Name            string           `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                //场景名
	Desc            string           `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`                //描述
	AreaID          int64            `protobuf:"varint,21,opt,name=areaID,proto3" json:"areaID,omitempty"`          //区域id
	FlowPath        []*SceneFlowInfo `protobuf:"bytes,15,rep,name=FlowPath,proto3" json:"FlowPath,omitempty"`       //执行的流程
	Tag             string           `protobuf:"bytes,12,opt,name=tag,proto3" json:"tag,omitempty"`                 //标签 admin: 管理员 normal: 普通
	CreatedTime     int64            `protobuf:"varint,5,opt,name=createdTime,proto3" json:"createdTime,omitempty"` //创建时间 秒级时间戳 只读
	Type            string           `protobuf:"bytes,14,opt,name=type,proto3" json:"type,omitempty"`               //auto:自动化 manual:手动触发
	If              string           `protobuf:"bytes,6,opt,name=if,proto3" json:"if,omitempty"`                    //多种触发方式
	When            string           `protobuf:"bytes,7,opt,name=when,proto3" json:"when,omitempty"`                //手动触发模式不生效
	Then            string           `protobuf:"bytes,8,opt,name=then,proto3" json:"then,omitempty"`                //触发后执行的动作
	Status          int64            `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`           // 状态（1启用 2禁用）
	HeadImg         string           `protobuf:"bytes,10,opt,name=headImg,proto3" json:"headImg,omitempty"`
	IsUpdateHeadImg bool             `protobuf:"varint,11,opt,name=isUpdateHeadImg,proto3" json:"isUpdateHeadImg,omitempty"` //只有这个参数为true的时候才会更新图片,传参为图片的file path
	LastRunTime     int64            `protobuf:"varint,13,opt,name=lastRunTime,proto3" json:"lastRunTime,omitempty"`         //最后一次执行时间 秒级时间戳 只读
	ProductID       string           `protobuf:"bytes,16,opt,name=productID,proto3" json:"productID,omitempty"`              //产品id
	DeviceName      string           `protobuf:"bytes,17,opt,name=deviceName,proto3" json:"deviceName,omitempty"`            //设备名称
	DeviceAlias     string           `protobuf:"bytes,18,opt,name=deviceAlias,proto3" json:"deviceAlias,omitempty"`          //设备别名(只读)
	DeviceMode      string           `protobuf:"bytes,19,opt,name=deviceMode,proto3" json:"deviceMode,omitempty"`            //设备模式 single:单设备 multi:多设备
	Body            string           `protobuf:"bytes,20,opt,name=body,proto3" json:"body,omitempty"`                        //自定义字段
}

func (x *SceneInfo) Reset() {
	*x = SceneInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ud_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneInfo) ProtoMessage() {}

func (x *SceneInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ud_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneInfo.ProtoReflect.Descriptor instead.
func (*SceneInfo) Descriptor() ([]byte, []int) {
	return file_proto_ud_proto_rawDescGZIP(), []int{11}
}

func (x *SceneInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SceneInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SceneInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SceneInfo) GetAreaID() int64 {
	if x != nil {
		return x.AreaID
	}
	return 0
}

func (x *SceneInfo) GetFlowPath() []*SceneFlowInfo {
	if x != nil {
		return x.FlowPath
	}
	return nil
}

func (x *SceneInfo) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *SceneInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *SceneInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SceneInfo) GetIf() string {
	if x != nil {
		return x.If
	}
	return ""
}

func (x *SceneInfo) GetWhen() string {
	if x != nil {
		return x.When
	}
	return ""
}

func (x *SceneInfo) GetThen() string {
	if x != nil {
		return x.Then
	}
	return ""
}

func (x *SceneInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SceneInfo) GetHeadImg() string {
	if x != nil {
		return x.HeadImg
	}
	return ""
}

func (x *SceneInfo) GetIsUpdateHeadImg() bool {
	if x != nil {
		return x.IsUpdateHeadImg
	}
	return false
}

func (x *SceneInfo) GetLastRunTime() int64 {
	if x != nil {
		return x.LastRunTime
	}
	return 0
}

func (x *SceneInfo) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *SceneInfo) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *SceneInfo) GetDeviceAlias() string {
	if x != nil {
		return x.DeviceAlias
	}
	return ""
}

func (x *SceneInfo) GetDeviceMode() string {
	if x != nil {
		return x.DeviceMode
	}
	return ""
}

func (x *SceneInfo) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

var File_proto_ud_proto protoreflect.FileDescriptor

var file_proto_ud_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x75, 0x64, 0x22, 0x18, 0x0a, 0x06, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x07,
	0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x32, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x33, 0x0a, 0x09, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64,
	0x22, 0x4a, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x71, 0x0a, 0x13,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x64, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x55, 0x0a, 0x14, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x64, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xe1, 0x02, 0x0a, 0x0f, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26,
	0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x75, 0x64, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x52, 0x06,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78,
	0x65, 0x63, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65, 0x78, 0x65, 0x63,
	0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x52, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74,
	0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c,
	0x61, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x97, 0x02, 0x0a, 0x11, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x75, 0x64, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61,
	0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4d, 0x0a, 0x12, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x64, 0x2e, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0x51, 0x0a, 0x0d, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x46, 0x6c, 0x6f, 0x77,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x9c, 0x04, 0x0a, 0x09, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x72,
	0x65, 0x61, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x08, 0x46, 0x6c, 0x6f, 0x77, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x46, 0x6c, 0x6f, 0x77, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x77,
	0x68, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x68, 0x65, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x68, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x68, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x68,
	0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x65,
	0x61, 0x64, 0x49, 0x6d, 0x67, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x48, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x12,
	0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12,
	0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6c, 0x69, 0x61,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x32, 0xb9, 0x04, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x12, 0x2c,
	0x0a, 0x0f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x0d, 0x2e, 0x75, 0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x0a, 0x2e, 0x75, 0x64, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x0f,
	0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x0d, 0x2e, 0x75, 0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x09,
	0x2e, 0x75, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x63, 0x65,
	0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0a, 0x2e, 0x75,
	0x64, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x09, 0x2e, 0x75, 0x64, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x3f, 0x0a, 0x0e, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x15, 0x2e, 0x75, 0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x75,
	0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x0d, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x61, 0x64, 0x12, 0x0a, 0x2e, 0x75, 0x64, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49,
	0x44, 0x1a, 0x0d, 0x2e, 0x75, 0x64, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x2d, 0x0a, 0x14, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x6c,
	0x79, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x0a, 0x2e, 0x75, 0x64, 0x2e, 0x57, 0x69,
	0x74, 0x68, 0x49, 0x44, 0x1a, 0x09, 0x2e, 0x75, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x34, 0x0a, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x75, 0x64, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0a, 0x2e, 0x75, 0x64, 0x2e, 0x57,
	0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x33, 0x0a, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x75, 0x64, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x09, 0x2e, 0x75, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x0a, 0x2e, 0x75, 0x64, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x09, 0x2e, 0x75, 0x64,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x0f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x12, 0x0a, 0x2e, 0x75, 0x64, 0x2e, 0x57,
	0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x13, 0x2e, 0x75, 0x64, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a, 0x10, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17,
	0x2e, 0x75, 0x64, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x75, 0x64, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x42, 0x07, 0x5a, 0x05, 0x70, 0x62, 0x2f, 0x75, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_ud_proto_rawDescOnce sync.Once
	file_proto_ud_proto_rawDescData = file_proto_ud_proto_rawDesc
)

func file_proto_ud_proto_rawDescGZIP() []byte {
	file_proto_ud_proto_rawDescOnce.Do(func() {
		file_proto_ud_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_ud_proto_rawDescData)
	})
	return file_proto_ud_proto_rawDescData
}

var file_proto_ud_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_ud_proto_goTypes = []interface{}{
	(*WithID)(nil),               // 0: ud.WithID
	(*Empty)(nil),                // 1: ud.Empty
	(*PageInfo)(nil),             // 2: ud.PageInfo
	(*TimeRange)(nil),            // 3: ud.TimeRange
	(*DeviceCore)(nil),           // 4: ud.DeviceCore
	(*DeviceTimerIndexReq)(nil),  // 5: ud.DeviceTimerIndexReq
	(*DeviceTimerIndexResp)(nil), // 6: ud.DeviceTimerIndexResp
	(*DeviceTimerInfo)(nil),      // 7: ud.DeviceTimerInfo
	(*SceneInfoIndexReq)(nil),    // 8: ud.SceneInfoIndexReq
	(*SceneInfoIndexResp)(nil),   // 9: ud.SceneInfoIndexResp
	(*SceneFlowInfo)(nil),        // 10: ud.SceneFlowInfo
	(*SceneInfo)(nil),            // 11: ud.SceneInfo
}
var file_proto_ud_proto_depIdxs = []int32{
	2,  // 0: ud.DeviceTimerIndexReq.page:type_name -> ud.PageInfo
	7,  // 1: ud.DeviceTimerIndexResp.list:type_name -> ud.DeviceTimerInfo
	4,  // 2: ud.DeviceTimerInfo.device:type_name -> ud.DeviceCore
	2,  // 3: ud.SceneInfoIndexReq.page:type_name -> ud.PageInfo
	11, // 4: ud.SceneInfoIndexResp.list:type_name -> ud.SceneInfo
	10, // 5: ud.SceneInfo.FlowPath:type_name -> ud.SceneFlowInfo
	11, // 6: ud.rule.sceneInfoCreate:input_type -> ud.SceneInfo
	11, // 7: ud.rule.sceneInfoUpdate:input_type -> ud.SceneInfo
	0,  // 8: ud.rule.sceneInfoDelete:input_type -> ud.WithID
	8,  // 9: ud.rule.sceneInfoIndex:input_type -> ud.SceneInfoIndexReq
	0,  // 10: ud.rule.sceneInfoRead:input_type -> ud.WithID
	0,  // 11: ud.rule.sceneManuallyTrigger:input_type -> ud.WithID
	7,  // 12: ud.rule.deviceTimerCreate:input_type -> ud.DeviceTimerInfo
	7,  // 13: ud.rule.deviceTimerUpdate:input_type -> ud.DeviceTimerInfo
	0,  // 14: ud.rule.deviceTimerDelete:input_type -> ud.WithID
	0,  // 15: ud.rule.deviceTimerRead:input_type -> ud.WithID
	5,  // 16: ud.rule.deviceTimerIndex:input_type -> ud.DeviceTimerIndexReq
	0,  // 17: ud.rule.sceneInfoCreate:output_type -> ud.WithID
	1,  // 18: ud.rule.sceneInfoUpdate:output_type -> ud.Empty
	1,  // 19: ud.rule.sceneInfoDelete:output_type -> ud.Empty
	9,  // 20: ud.rule.sceneInfoIndex:output_type -> ud.SceneInfoIndexResp
	11, // 21: ud.rule.sceneInfoRead:output_type -> ud.SceneInfo
	1,  // 22: ud.rule.sceneManuallyTrigger:output_type -> ud.Empty
	0,  // 23: ud.rule.deviceTimerCreate:output_type -> ud.WithID
	1,  // 24: ud.rule.deviceTimerUpdate:output_type -> ud.Empty
	1,  // 25: ud.rule.deviceTimerDelete:output_type -> ud.Empty
	7,  // 26: ud.rule.deviceTimerRead:output_type -> ud.DeviceTimerInfo
	6,  // 27: ud.rule.deviceTimerIndex:output_type -> ud.DeviceTimerIndexResp
	17, // [17:28] is the sub-list for method output_type
	6,  // [6:17] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_ud_proto_init() }
func file_proto_ud_proto_init() {
	if File_proto_ud_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_ud_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceCore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceTimerIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceTimerIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceTimerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneFlowInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ud_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_ud_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_ud_proto_goTypes,
		DependencyIndexes: file_proto_ud_proto_depIdxs,
		MessageInfos:      file_proto_ud_proto_msgTypes,
	}.Build()
	File_proto_ud_proto = out.File
	file_proto_ud_proto_rawDesc = nil
	file_proto_ud_proto_goTypes = nil
	file_proto_ud_proto_depIdxs = nil
}
