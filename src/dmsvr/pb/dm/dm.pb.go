// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: proto/dm.proto

package dm

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{0}
}

type PageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *PageInfo) Reset() {
	*x = PageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfo) ProtoMessage() {}

func (x *PageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfo.ProtoReflect.Descriptor instead.
func (*PageInfo) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{1}
}

func (x *PageInfo) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type DeviceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID   string                  `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`                                                                                //产品id 只读
	DeviceName  string                  `protobuf:"bytes,3,opt,name=deviceName,proto3" json:"deviceName,omitempty"`                                                                              //设备名称 读写
	CreatedTime int64                   `protobuf:"varint,4,opt,name=createdTime,proto3" json:"createdTime,omitempty"`                                                                           //创建时间 只读
	Secret      string                  `protobuf:"bytes,5,opt,name=secret,proto3" json:"secret,omitempty"`                                                                                      //设备秘钥 只读
	FirstLogin  int64                   `protobuf:"varint,6,opt,name=firstLogin,proto3" json:"firstLogin,omitempty"`                                                                             //激活时间 只读
	LastLogin   int64                   `protobuf:"varint,7,opt,name=lastLogin,proto3" json:"lastLogin,omitempty"`                                                                               //最后上线时间 只读
	Version     *wrapperspb.StringValue `protobuf:"bytes,8,opt,name=version,proto3" json:"version,omitempty"`                                                                                    // 固件版本  读写
	LogLevel    int64                   `protobuf:"varint,9,opt,name=logLevel,proto3" json:"logLevel,omitempty"`                                                                                 // 日志级别:1)关闭 2)错误 3)告警 4)信息 5)调试  读写
	Cert        string                  `protobuf:"bytes,10,opt,name=cert,proto3" json:"cert,omitempty"`                                                                                         // 设备证书  只读
	IsOnline    bool                    `protobuf:"varint,11,opt,name=isOnline,proto3" json:"isOnline,omitempty"`                                                                                //在线状态 0离线1在线 只读
	Tags        map[string]string       `protobuf:"bytes,12,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //设备标签
}

func (x *DeviceInfo) Reset() {
	*x = DeviceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfo) ProtoMessage() {}

func (x *DeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfo.ProtoReflect.Descriptor instead.
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{2}
}

func (x *DeviceInfo) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *DeviceInfo) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *DeviceInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *DeviceInfo) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *DeviceInfo) GetFirstLogin() int64 {
	if x != nil {
		return x.FirstLogin
	}
	return 0
}

func (x *DeviceInfo) GetLastLogin() int64 {
	if x != nil {
		return x.LastLogin
	}
	return 0
}

func (x *DeviceInfo) GetVersion() *wrapperspb.StringValue {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *DeviceInfo) GetLogLevel() int64 {
	if x != nil {
		return x.LogLevel
	}
	return 0
}

func (x *DeviceInfo) GetCert() string {
	if x != nil {
		return x.Cert
	}
	return ""
}

func (x *DeviceInfo) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *DeviceInfo) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type ProductInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedTime  int64                   `protobuf:"varint,1,opt,name=createdTime,proto3" json:"createdTime,omitempty"`   //创建时间 只读
	ProductID    string                  `protobuf:"bytes,2,opt,name=productID,proto3" json:"productID,omitempty"`        //产品id 只读
	ProductName  string                  `protobuf:"bytes,3,opt,name=productName,proto3" json:"productName,omitempty"`    //产品名称
	AuthMode     int64                   `protobuf:"varint,4,opt,name=authMode,proto3" json:"authMode,omitempty"`         //认证方式:1:账密认证,2:秘钥认证
	DeviceType   int64                   `protobuf:"varint,5,opt,name=deviceType,proto3" json:"deviceType,omitempty"`     //设备类型:1:设备,2:网关,3:子设备
	CategoryID   int64                   `protobuf:"varint,6,opt,name=categoryID,proto3" json:"categoryID,omitempty"`     //产品品类
	NetType      int64                   `protobuf:"varint,7,opt,name=netType,proto3" json:"netType,omitempty"`           //通讯方式:1:其他,2:wi-fi,3:2G/3G/4G,4:5G,5:BLE,6:LoRaWAN
	DataProto    int64                   `protobuf:"varint,8,opt,name=dataProto,proto3" json:"dataProto,omitempty"`       //数据协议:1:自定义,2:数据模板
	AutoRegister int64                   `protobuf:"varint,9,opt,name=autoRegister,proto3" json:"autoRegister,omitempty"` //动态注册:1:关闭,2:打开,3:打开并自动创建设备
	Secret       string                  `protobuf:"bytes,10,opt,name=secret,proto3" json:"secret,omitempty"`             //动态注册产品秘钥 只读
	Description  *wrapperspb.StringValue `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"`   //描述
	DevStatus    *wrapperspb.StringValue `protobuf:"bytes,12,opt,name=devStatus,proto3" json:"devStatus,omitempty"`       // 产品状态
}

func (x *ProductInfo) Reset() {
	*x = ProductInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInfo) ProtoMessage() {}

func (x *ProductInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInfo.ProtoReflect.Descriptor instead.
func (*ProductInfo) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{3}
}

func (x *ProductInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *ProductInfo) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *ProductInfo) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *ProductInfo) GetAuthMode() int64 {
	if x != nil {
		return x.AuthMode
	}
	return 0
}

func (x *ProductInfo) GetDeviceType() int64 {
	if x != nil {
		return x.DeviceType
	}
	return 0
}

func (x *ProductInfo) GetCategoryID() int64 {
	if x != nil {
		return x.CategoryID
	}
	return 0
}

func (x *ProductInfo) GetNetType() int64 {
	if x != nil {
		return x.NetType
	}
	return 0
}

func (x *ProductInfo) GetDataProto() int64 {
	if x != nil {
		return x.DataProto
	}
	return 0
}

func (x *ProductInfo) GetAutoRegister() int64 {
	if x != nil {
		return x.AutoRegister
	}
	return 0
}

func (x *ProductInfo) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *ProductInfo) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *ProductInfo) GetDevStatus() *wrapperspb.StringValue {
	if x != nil {
		return x.DevStatus
	}
	return nil
}

type ProductInfoDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"` //产品id
}

func (x *ProductInfoDeleteReq) Reset() {
	*x = ProductInfoDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInfoDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInfoDeleteReq) ProtoMessage() {}

func (x *ProductInfoDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInfoDeleteReq.ProtoReflect.Descriptor instead.
func (*ProductInfoDeleteReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{4}
}

func (x *ProductInfoDeleteReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

type ProductInfoReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"` //产品id
}

func (x *ProductInfoReadReq) Reset() {
	*x = ProductInfoReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInfoReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInfoReadReq) ProtoMessage() {}

func (x *ProductInfoReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInfoReadReq.ProtoReflect.Descriptor instead.
func (*ProductInfoReadReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{5}
}

func (x *ProductInfoReadReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

type ProductSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedTime int64  `protobuf:"varint,1,opt,name=createdTime,proto3" json:"createdTime,omitempty"` //创建时间 只读
	ProductID   string `protobuf:"bytes,2,opt,name=productID,proto3" json:"productID,omitempty"`      //产品id 只读
	Schema      string `protobuf:"bytes,3,opt,name=schema,proto3" json:"schema,omitempty"`            //数据模板
}

func (x *ProductSchema) Reset() {
	*x = ProductSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSchema) ProtoMessage() {}

func (x *ProductSchema) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSchema.ProtoReflect.Descriptor instead.
func (*ProductSchema) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{6}
}

func (x *ProductSchema) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *ProductSchema) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *ProductSchema) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

type ProductSchemaUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ProductSchema `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"` //产品信息
}

func (x *ProductSchemaUpdateReq) Reset() {
	*x = ProductSchemaUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductSchemaUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSchemaUpdateReq) ProtoMessage() {}

func (x *ProductSchemaUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSchemaUpdateReq.ProtoReflect.Descriptor instead.
func (*ProductSchemaUpdateReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{7}
}

func (x *ProductSchemaUpdateReq) GetInfo() *ProductSchema {
	if x != nil {
		return x.Info
	}
	return nil
}

type ProductSchemaReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"` //产品id  如果为空返回所有产品的信息
}

func (x *ProductSchemaReadReq) Reset() {
	*x = ProductSchemaReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductSchemaReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSchemaReadReq) ProtoMessage() {}

func (x *ProductSchemaReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSchemaReadReq.ProtoReflect.Descriptor instead.
func (*ProductSchemaReadReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{8}
}

func (x *ProductSchemaReadReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

type DeviceInfoDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID  string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`   //产品id
	DeviceName string `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"` //设备名称
}

func (x *DeviceInfoDeleteReq) Reset() {
	*x = DeviceInfoDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfoDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfoDeleteReq) ProtoMessage() {}

func (x *DeviceInfoDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfoDeleteReq.ProtoReflect.Descriptor instead.
func (*DeviceInfoDeleteReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{9}
}

func (x *DeviceInfoDeleteReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *DeviceInfoDeleteReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

type DeviceInfoReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID  string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`   //产品id
	DeviceName string `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"` //设备名称
}

func (x *DeviceInfoReadReq) Reset() {
	*x = DeviceInfoReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfoReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfoReadReq) ProtoMessage() {}

func (x *DeviceInfoReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfoReadReq.ProtoReflect.Descriptor instead.
func (*DeviceInfoReadReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{10}
}

func (x *DeviceInfoReadReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *DeviceInfoReadReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

type DeviceInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       *PageInfo         `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`                                                                                         //分页信息 只获取一个则不填
	ProductID  string            `protobuf:"bytes,2,opt,name=productID,proto3" json:"productID,omitempty"`                                                                               //过滤条件: 产品id
	DeviceName string            `protobuf:"bytes,3,opt,name=deviceName,proto3" json:"deviceName,omitempty"`                                                                             //过滤条件:模糊查询 设备名
	Tags       map[string]string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //key tag过滤查询,非模糊查询 为tag的名,value为tag对应的值
}

func (x *DeviceInfoIndexReq) Reset() {
	*x = DeviceInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfoIndexReq) ProtoMessage() {}

func (x *DeviceInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfoIndexReq.ProtoReflect.Descriptor instead.
func (*DeviceInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{11}
}

func (x *DeviceInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *DeviceInfoIndexReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *DeviceInfoIndexReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *DeviceInfoIndexReq) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type DeviceInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*DeviceInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`    //设备信息
	Total int64         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总数(只有分页的时候会返回)
}

func (x *DeviceInfoIndexResp) Reset() {
	*x = DeviceInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfoIndexResp) ProtoMessage() {}

func (x *DeviceInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfoIndexResp.ProtoReflect.Descriptor instead.
func (*DeviceInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{12}
}

func (x *DeviceInfoIndexResp) GetList() []*DeviceInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *DeviceInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ProductInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`               //分页信息 只获取一个则不填
	DeviceType  int64     `protobuf:"varint,2,opt,name=deviceType,proto3" json:"deviceType,omitempty"`  //过滤设备类型:0:全部,1:设备,2:网关,3:子设备
	ProductName string    `protobuf:"bytes,3,opt,name=productName,proto3" json:"productName,omitempty"` //过滤条件: 产品名称
}

func (x *ProductInfoIndexReq) Reset() {
	*x = ProductInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInfoIndexReq) ProtoMessage() {}

func (x *ProductInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInfoIndexReq.ProtoReflect.Descriptor instead.
func (*ProductInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{13}
}

func (x *ProductInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ProductInfoIndexReq) GetDeviceType() int64 {
	if x != nil {
		return x.DeviceType
	}
	return 0
}

func (x *ProductInfoIndexReq) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

type ProductInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*ProductInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`    //产品信息
	Total int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总数(只有分页的时候会返回)
}

func (x *ProductInfoIndexResp) Reset() {
	*x = ProductInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInfoIndexResp) ProtoMessage() {}

func (x *ProductInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInfoIndexResp.ProtoReflect.Descriptor instead.
func (*ProductInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{14}
}

func (x *ProductInfoIndexResp) GetList() []*ProductInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ProductInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

//获取对应日志信息
type DataSchemaLogIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`             //使用了聚合函数及间隔的时候无效
	Method     string    `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`         //获取的类型   property 属性 event事件 action 请求
	DeviceName string    `protobuf:"bytes,3,opt,name=deviceName,proto3" json:"deviceName,omitempty"` //设备名(必填)
	ProductID  string    `protobuf:"bytes,4,opt,name=productID,proto3" json:"productID,omitempty"`   //产品id (必填)
	DataID     string    `protobuf:"bytes,5,opt,name=dataID,proto3" json:"dataID,omitempty"`         //获取的具体标识符的数据 如果不指定则获取所有属性数据,一个属性一条,如果没有获取到的不会返回值
	TimeStart  int64     `protobuf:"varint,6,opt,name=timeStart,proto3" json:"timeStart,omitempty"`  //获取时间的开始(毫秒时间戳)
	TimeEnd    int64     `protobuf:"varint,7,opt,name=timeEnd,proto3" json:"timeEnd,omitempty"`      //时间的结束(毫秒时间戳)
	Interval   int64     `protobuf:"varint,8,opt,name=interval,proto3" json:"interval,omitempty"`    //间隔(单位毫秒) 如果这个值不为零值 则时间的开始和结束必须有效及聚合函数不应该为空
	ArgFunc    string    `protobuf:"bytes,9,opt,name=argFunc,proto3" json:"argFunc,omitempty"`       //聚合函数 avg:平均值 first:第一个参数 last:最后一个参数 count:总数 twa: 时间加权平均函数 参考:https://docs.taosdata.com/taos-sql/function
}

func (x *DataSchemaLogIndexReq) Reset() {
	*x = DataSchemaLogIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataSchemaLogIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSchemaLogIndexReq) ProtoMessage() {}

func (x *DataSchemaLogIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSchemaLogIndexReq.ProtoReflect.Descriptor instead.
func (*DataSchemaLogIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{15}
}

func (x *DataSchemaLogIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *DataSchemaLogIndexReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *DataSchemaLogIndexReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *DataSchemaLogIndexReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *DataSchemaLogIndexReq) GetDataID() string {
	if x != nil {
		return x.DataID
	}
	return ""
}

func (x *DataSchemaLogIndexReq) GetTimeStart() int64 {
	if x != nil {
		return x.TimeStart
	}
	return 0
}

func (x *DataSchemaLogIndexReq) GetTimeEnd() int64 {
	if x != nil {
		return x.TimeEnd
	}
	return 0
}

func (x *DataSchemaLogIndexReq) GetInterval() int64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *DataSchemaLogIndexReq) GetArgFunc() string {
	if x != nil {
		return x.ArgFunc
	}
	return ""
}

//获取对应日志信息
type DataSchemaLatestIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method     string   `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`         //获取的类型   property 属性 event事件 action 请求
	DeviceName string   `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"` //设备名(必填)
	ProductID  string   `protobuf:"bytes,3,opt,name=productID,proto3" json:"productID,omitempty"`   //产品id (必填)
	DataID     []string `protobuf:"bytes,4,rep,name=dataID,proto3" json:"dataID,omitempty"`         //获取的具体标识符的数据 如果不指定则获取所有属性数据,一个属性一条,如果没有获取到的不会返回值
}

func (x *DataSchemaLatestIndexReq) Reset() {
	*x = DataSchemaLatestIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataSchemaLatestIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSchemaLatestIndexReq) ProtoMessage() {}

func (x *DataSchemaLatestIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSchemaLatestIndexReq.ProtoReflect.Descriptor instead.
func (*DataSchemaLatestIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{16}
}

func (x *DataSchemaLatestIndexReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *DataSchemaLatestIndexReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *DataSchemaLatestIndexReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *DataSchemaLatestIndexReq) GetDataID() []string {
	if x != nil {
		return x.DataID
	}
	return nil
}

//设备的日志数据
type DataSchemaIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"` //发生时间戳(毫秒时间戳)
	Type      string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`            //类型 事件类型: 信息:info  告警alert  故障:fault
	DataID    string `protobuf:"bytes,3,opt,name=dataID,proto3" json:"dataID,omitempty"`        //属性id
	GetValue  string `protobuf:"bytes,4,opt,name=getValue,proto3" json:"getValue,omitempty"`    //获取到的值
	SendValue string `protobuf:"bytes,5,opt,name=sendValue,proto3" json:"sendValue,omitempty"`  //发送过去的参数(action限定)
}

func (x *DataSchemaIndex) Reset() {
	*x = DataSchemaIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataSchemaIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSchemaIndex) ProtoMessage() {}

func (x *DataSchemaIndex) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSchemaIndex.ProtoReflect.Descriptor instead.
func (*DataSchemaIndex) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{17}
}

func (x *DataSchemaIndex) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *DataSchemaIndex) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DataSchemaIndex) GetDataID() string {
	if x != nil {
		return x.DataID
	}
	return ""
}

func (x *DataSchemaIndex) GetGetValue() string {
	if x != nil {
		return x.GetValue
	}
	return ""
}

func (x *DataSchemaIndex) GetSendValue() string {
	if x != nil {
		return x.SendValue
	}
	return ""
}

//获取对应日志信息
type DataSchemaIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` //总数
	List  []*DataSchemaIndex `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *DataSchemaIndexResp) Reset() {
	*x = DataSchemaIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataSchemaIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSchemaIndexResp) ProtoMessage() {}

func (x *DataSchemaIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSchemaIndexResp.ProtoReflect.Descriptor instead.
func (*DataSchemaIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{18}
}

func (x *DataSchemaIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DataSchemaIndexResp) GetList() []*DataSchemaIndex {
	if x != nil {
		return x.List
	}
	return nil
}

//设备的日志数据
type DataHubLogIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp  int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`   //发生时间戳(毫秒时间戳)
	Action     string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`          //操作类型;显示相应的操作名称、API名称、服务的method
	RequestID  string `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`    //请求ID
	TranceID   string `protobuf:"bytes,4,opt,name=tranceID,proto3" json:"tranceID,omitempty"`      //服务器端事务id
	Topic      string `protobuf:"bytes,5,opt,name=topic,proto3" json:"topic,omitempty"`            //主题
	Content    string `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`        //具体内容
	ResultType int64  `protobuf:"varint,7,opt,name=resultType,proto3" json:"resultType,omitempty"` //请求结果状态
}

func (x *DataHubLogIndex) Reset() {
	*x = DataHubLogIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataHubLogIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataHubLogIndex) ProtoMessage() {}

func (x *DataHubLogIndex) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataHubLogIndex.ProtoReflect.Descriptor instead.
func (*DataHubLogIndex) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{19}
}

func (x *DataHubLogIndex) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *DataHubLogIndex) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *DataHubLogIndex) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *DataHubLogIndex) GetTranceID() string {
	if x != nil {
		return x.TranceID
	}
	return ""
}

func (x *DataHubLogIndex) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *DataHubLogIndex) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *DataHubLogIndex) GetResultType() int64 {
	if x != nil {
		return x.ResultType
	}
	return 0
}

//实时获取对应信息
type DataHubLogIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID  string    `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`   //产品id
	DeviceName string    `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"` //设备名
	TimeStart  int64     `protobuf:"varint,3,opt,name=timeStart,proto3" json:"timeStart,omitempty"`  //获取时间的开始(毫秒时间戳)
	TimeEnd    int64     `protobuf:"varint,4,opt,name=timeEnd,proto3" json:"timeEnd,omitempty"`      //时间的结束(毫秒时间戳)
	Page       *PageInfo `protobuf:"bytes,5,opt,name=page,proto3" json:"page,omitempty"`             //分页信息
}

func (x *DataHubLogIndexReq) Reset() {
	*x = DataHubLogIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataHubLogIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataHubLogIndexReq) ProtoMessage() {}

func (x *DataHubLogIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataHubLogIndexReq.ProtoReflect.Descriptor instead.
func (*DataHubLogIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{20}
}

func (x *DataHubLogIndexReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *DataHubLogIndexReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *DataHubLogIndexReq) GetTimeStart() int64 {
	if x != nil {
		return x.TimeStart
	}
	return 0
}

func (x *DataHubLogIndexReq) GetTimeEnd() int64 {
	if x != nil {
		return x.TimeEnd
	}
	return 0
}

func (x *DataHubLogIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

//实时获取对应信息
type DataHubLogIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` //总数
	List  []*DataHubLogIndex `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *DataHubLogIndexResp) Reset() {
	*x = DataHubLogIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataHubLogIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataHubLogIndexResp) ProtoMessage() {}

func (x *DataHubLogIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataHubLogIndexResp.ProtoReflect.Descriptor instead.
func (*DataHubLogIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{21}
}

func (x *DataHubLogIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DataHubLogIndexResp) GetList() []*DataHubLogIndex {
	if x != nil {
		return x.List
	}
	return nil
}

type SendActionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID   string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`     //产品id 获取产品id下的所有设备信息
	DeviceName  string `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"`   //设备名
	ActionId    string `protobuf:"bytes,3,opt,name=actionId,proto3" json:"actionId,omitempty"`       //产品数据模板中行为功能的标识符，由开发者自行根据设备的应用场景定义
	InputParams string `protobuf:"bytes,4,opt,name=inputParams,proto3" json:"inputParams,omitempty"` //输入参数
}

func (x *SendActionReq) Reset() {
	*x = SendActionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendActionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendActionReq) ProtoMessage() {}

func (x *SendActionReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendActionReq.ProtoReflect.Descriptor instead.
func (*SendActionReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{22}
}

func (x *SendActionReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *SendActionReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *SendActionReq) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *SendActionReq) GetInputParams() string {
	if x != nil {
		return x.InputParams
	}
	return ""
}

type SendActionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientToken  string `protobuf:"bytes,1,opt,name=clientToken,proto3" json:"clientToken,omitempty"`   //调用id
	OutputParams string `protobuf:"bytes,2,opt,name=outputParams,proto3" json:"outputParams,omitempty"` //输出参数 注意：此字段可能返回 null，表示取不到有效值。
	Status       string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`             //返回状态
	Code         int64  `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`                //设备返回状态码
}

func (x *SendActionResp) Reset() {
	*x = SendActionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendActionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendActionResp) ProtoMessage() {}

func (x *SendActionResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendActionResp.ProtoReflect.Descriptor instead.
func (*SendActionResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{23}
}

func (x *SendActionResp) GetClientToken() string {
	if x != nil {
		return x.ClientToken
	}
	return ""
}

func (x *SendActionResp) GetOutputParams() string {
	if x != nil {
		return x.OutputParams
	}
	return ""
}

func (x *SendActionResp) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SendActionResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

type SendPropertyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID     string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`          //产品id 获取产品id下的所有设备信息
	DeviceName    string `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"`        //设备名
	Data          string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`                    //属性数据, JSON格式字符串, 注意字段需要在物模型属性里定义
	DataTimestamp int64  `protobuf:"varint,4,opt,name=dataTimestamp,proto3" json:"dataTimestamp,omitempty"` //上报数据UNIX时间戳, 仅对Method:reported有效
	Method        string `protobuf:"bytes,5,opt,name=method,proto3" json:"method,omitempty"`                //请求类型 , 不填该参数或者 desired 表示下发属性给设备, reported 表示模拟设备上报属性
}

func (x *SendPropertyReq) Reset() {
	*x = SendPropertyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPropertyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPropertyReq) ProtoMessage() {}

func (x *SendPropertyReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPropertyReq.ProtoReflect.Descriptor instead.
func (*SendPropertyReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{24}
}

func (x *SendPropertyReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *SendPropertyReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *SendPropertyReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *SendPropertyReq) GetDataTimestamp() int64 {
	if x != nil {
		return x.DataTimestamp
	}
	return 0
}

func (x *SendPropertyReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type SendPropertyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`              //设备返回状态码
	Status      string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`           //返回状态
	ClientToken string `protobuf:"bytes,3,opt,name=clientToken,proto3" json:"clientToken,omitempty"` //调用id
	Data        string `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`               //返回信息
}

func (x *SendPropertyResp) Reset() {
	*x = SendPropertyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPropertyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPropertyResp) ProtoMessage() {}

func (x *SendPropertyResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPropertyResp.ProtoReflect.Descriptor instead.
func (*SendPropertyResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{25}
}

func (x *SendPropertyResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SendPropertyResp) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SendPropertyResp) GetClientToken() string {
	if x != nil {
		return x.ClientToken
	}
	return ""
}

func (x *SendPropertyResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

//获取sdk调试日志信息
type DataSdkLogIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID  string    `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`   //产品id
	DeviceName string    `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"` //设备名
	TimeStart  int64     `protobuf:"varint,3,opt,name=timeStart,proto3" json:"timeStart,omitempty"`  //获取时间的开始
	TimeEnd    int64     `protobuf:"varint,4,opt,name=timeEnd,proto3" json:"timeEnd,omitempty"`      //时间的结束
	Page       *PageInfo `protobuf:"bytes,5,opt,name=page,proto3" json:"page,omitempty"`             //分页信息 只获取一个则不填
}

func (x *DataSdkLogIndexReq) Reset() {
	*x = DataSdkLogIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataSdkLogIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSdkLogIndexReq) ProtoMessage() {}

func (x *DataSdkLogIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSdkLogIndexReq.ProtoReflect.Descriptor instead.
func (*DataSdkLogIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{26}
}

func (x *DataSdkLogIndexReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *DataSdkLogIndexReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *DataSdkLogIndexReq) GetTimeStart() int64 {
	if x != nil {
		return x.TimeStart
	}
	return 0
}

func (x *DataSdkLogIndexReq) GetTimeEnd() int64 {
	if x != nil {
		return x.TimeEnd
	}
	return 0
}

func (x *DataSdkLogIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

//sdk调试日志信息
type DataSdkLogIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` //总数
	List  []*DataSdkLogIndex `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *DataSdkLogIndexResp) Reset() {
	*x = DataSdkLogIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataSdkLogIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSdkLogIndexResp) ProtoMessage() {}

func (x *DataSdkLogIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSdkLogIndexResp.ProtoReflect.Descriptor instead.
func (*DataSdkLogIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{27}
}

func (x *DataSdkLogIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DataSdkLogIndexResp) GetList() []*DataSdkLogIndex {
	if x != nil {
		return x.List
	}
	return nil
}

type DataSdkLogIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"` //发生时间戳(毫秒时间戳)
	Loglevel  int64  `protobuf:"varint,2,opt,name=loglevel,proto3" json:"loglevel,omitempty"`   //操作类型;显示相应的操作名称、API名称、服务的method
	Content   string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`      //具体内容
}

func (x *DataSdkLogIndex) Reset() {
	*x = DataSdkLogIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataSdkLogIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSdkLogIndex) ProtoMessage() {}

func (x *DataSdkLogIndex) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSdkLogIndex.ProtoReflect.Descriptor instead.
func (*DataSdkLogIndex) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{28}
}

func (x *DataSdkLogIndex) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *DataSdkLogIndex) GetLoglevel() int64 {
	if x != nil {
		return x.Loglevel
	}
	return 0
}

func (x *DataSdkLogIndex) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

//
//下面是设备管理模块的消息
type LoginAuthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username    string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`       //用户名
	Password    string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`       //密码
	ClientID    string `protobuf:"bytes,3,opt,name=clientID,proto3" json:"clientID,omitempty"`       //clientID
	Ip          string `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`                   //访问的ip地址
	Certificate []byte `protobuf:"bytes,5,opt,name=certificate,proto3" json:"certificate,omitempty"` //客户端证书
}

func (x *LoginAuthReq) Reset() {
	*x = LoginAuthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginAuthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginAuthReq) ProtoMessage() {}

func (x *LoginAuthReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginAuthReq.ProtoReflect.Descriptor instead.
func (*LoginAuthReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{29}
}

func (x *LoginAuthReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginAuthReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginAuthReq) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *LoginAuthReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *LoginAuthReq) GetCertificate() []byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

type AccessAuthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` //用户名
	Topic    string `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`       //主题
	ClientID string `protobuf:"bytes,3,opt,name=clientID,proto3" json:"clientID,omitempty"` //clientID
	Access   string `protobuf:"bytes,4,opt,name=access,proto3" json:"access,omitempty"`     //操作
	Ip       string `protobuf:"bytes,5,opt,name=ip,proto3" json:"ip,omitempty"`             //访问的ip地址
}

func (x *AccessAuthReq) Reset() {
	*x = AccessAuthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessAuthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessAuthReq) ProtoMessage() {}

func (x *AccessAuthReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessAuthReq.ProtoReflect.Descriptor instead.
func (*AccessAuthReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{30}
}

func (x *AccessAuthReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AccessAuthReq) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *AccessAuthReq) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *AccessAuthReq) GetAccess() string {
	if x != nil {
		return x.Access
	}
	return ""
}

func (x *AccessAuthReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type RootCheckReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username    string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`       //用户名
	Password    string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`       //密码
	ClientID    string `protobuf:"bytes,3,opt,name=clientID,proto3" json:"clientID,omitempty"`       //clientID
	Ip          string `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`                   //访问的ip地址
	Certificate []byte `protobuf:"bytes,5,opt,name=certificate,proto3" json:"certificate,omitempty"` //客户端证书
}

func (x *RootCheckReq) Reset() {
	*x = RootCheckReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RootCheckReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RootCheckReq) ProtoMessage() {}

func (x *RootCheckReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RootCheckReq.ProtoReflect.Descriptor instead.
func (*RootCheckReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{31}
}

func (x *RootCheckReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RootCheckReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RootCheckReq) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *RootCheckReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *RootCheckReq) GetCertificate() []byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

type ManageFirmwareReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opt  int64         `protobuf:"varint,1,opt,name=opt,proto3" json:"opt,omitempty"`  //操作 0:新增 1:修改 2:删除
	Info *FirmwareInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"` //设备信息
}

func (x *ManageFirmwareReq) Reset() {
	*x = ManageFirmwareReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageFirmwareReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageFirmwareReq) ProtoMessage() {}

func (x *ManageFirmwareReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageFirmwareReq.ProtoReflect.Descriptor instead.
func (*ManageFirmwareReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{32}
}

func (x *ManageFirmwareReq) GetOpt() int64 {
	if x != nil {
		return x.Opt
	}
	return 0
}

func (x *ManageFirmwareReq) GetInfo() *FirmwareInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type FirmwareInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID   string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`     //产品ID 只读
	Version     string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`         //固件版本 只读 产品下唯一
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`               //固件名
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"` //固件描述
	Dir         string `protobuf:"bytes,5,opt,name=dir,proto3" json:"dir,omitempty"`                 //固件标识,拿来下载文件 只读
	Size        int64  `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`              //固件大小 只读
}

func (x *FirmwareInfo) Reset() {
	*x = FirmwareInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirmwareInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirmwareInfo) ProtoMessage() {}

func (x *FirmwareInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirmwareInfo.ProtoReflect.Descriptor instead.
func (*FirmwareInfo) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{33}
}

func (x *FirmwareInfo) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *FirmwareInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *FirmwareInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FirmwareInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FirmwareInfo) GetDir() string {
	if x != nil {
		return x.Dir
	}
	return ""
}

func (x *FirmwareInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type GetFirmwareInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID string    `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"` //产品id 如果不传获取所有固件
	Version   int64     `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`    //固件版本 如果不传,获取产品下或所有固件
	Page      *PageInfo `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`           //分页信息 只获取一个则不填
}

func (x *GetFirmwareInfoReq) Reset() {
	*x = GetFirmwareInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFirmwareInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFirmwareInfoReq) ProtoMessage() {}

func (x *GetFirmwareInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFirmwareInfoReq.ProtoReflect.Descriptor instead.
func (*GetFirmwareInfoReq) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{34}
}

func (x *GetFirmwareInfoReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *GetFirmwareInfoReq) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GetFirmwareInfoReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetFirmwareInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*FirmwareInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`    //设备信息
	Total int64           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总数(只有分页的时候会返回)
}

func (x *GetFirmwareInfoResp) Reset() {
	*x = GetFirmwareInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dm_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFirmwareInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFirmwareInfoResp) ProtoMessage() {}

func (x *GetFirmwareInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dm_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFirmwareInfoResp.ProtoReflect.Descriptor instead.
func (*GetFirmwareInfoResp) Descriptor() ([]byte, []int) {
	return file_proto_dm_proto_rawDescGZIP(), []int{35}
}

func (x *GetFirmwareInfoResp) GetList() []*FirmwareInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetFirmwareInfoResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_proto_dm_proto protoreflect.FileDescriptor

var file_proto_dm_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x64, 0x6d, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x32, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x22, 0xad, 0x03, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x36, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x65, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x65, 0x72,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x2c, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x6d,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x61, 0x67, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x54,
	0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xbb, 0x03, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x4d, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x64, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x75,
	0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x64, 0x65, 0x76, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x34, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x22, 0x32, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x22, 0x67, 0x0a, 0x0d,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x3f, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x25, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x34, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x22, 0x53, 0x0a, 0x13,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x51, 0x0a, 0x11, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xe3, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x6d, 0x2e, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x71, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4f, 0x0a, 0x13, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x79, 0x0a, 0x13, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x71, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x51, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64,
	0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x95, 0x02, 0x0a, 0x15, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x61, 0x74, 0x61, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74,
	0x61, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x67, 0x46, 0x75,
	0x6e, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x72, 0x67, 0x46, 0x75, 0x6e,
	0x63, 0x22, 0x88, 0x01, 0x0a, 0x18, 0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x44, 0x22, 0x95, 0x01, 0x0a,
	0x0f, 0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x65,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x65,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x54, 0x0a, 0x13, 0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x27, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xd1, 0x01, 0x0a, 0x0f, 0x44,
	0x61, 0x74, 0x61, 0x48, 0x75, 0x62, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xac,
	0x01, 0x0a, 0x12, 0x44, 0x61, 0x74, 0x61, 0x48, 0x75, 0x62, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x54, 0x0a,
	0x13, 0x44, 0x61, 0x74, 0x61, 0x48, 0x75, 0x62, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x27, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x48, 0x75, 0x62, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x8b, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x22, 0x82, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d,
	0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x74, 0x0a, 0x10, 0x53, 0x65,
	0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xac, 0x01, 0x0a, 0x12, 0x44, 0x61, 0x74, 0x61, 0x53, 0x64, 0x6b, 0x4c, 0x6f, 0x67, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x20, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x6d,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22,
	0x54, 0x0a, 0x13, 0x44, 0x61, 0x74, 0x61, 0x53, 0x64, 0x6b, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x27, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x6d, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x64, 0x6b, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x65, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x53, 0x64, 0x6b,
	0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x94, 0x01, 0x0a,
	0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x70, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41, 0x75,
	0x74, 0x68, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x94, 0x01, 0x0a, 0x0c,
	0x52, 0x6f, 0x6f, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x22, 0x4b, 0x0a, 0x11, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x46, 0x69, 0x72, 0x6d,
	0x77, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x70, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x70, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x6d, 0x2e, 0x46, 0x69, 0x72,
	0x6d, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22,
	0xa2, 0x01, 0x0a, 0x0c, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x22, 0x6e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x69, 0x72, 0x6d, 0x77,
	0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x22, 0x51, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x46, 0x69, 0x72, 0x6d, 0x77,
	0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x6d, 0x2e, 0x46,
	0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x32, 0xe1, 0x0a, 0x0a, 0x02, 0x44, 0x6d, 0x12, 0x30,
	0x0a, 0x10, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x0e, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x30, 0x0a, 0x10, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x39, 0x0a, 0x10, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a,
	0x0f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x16, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x37, 0x0a, 0x0e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x61, 0x64, 0x12, 0x15, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x64, 0x6d, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x11, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x0f, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32,
	0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3b, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x45, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x17, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x64,
	0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x12, 0x16, 0x2e, 0x64, 0x6d, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x0f, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x64, 0x6d, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x61, 0x64, 0x12, 0x18, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x11, 0x2e, 0x64, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x35, 0x0a, 0x0e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x46,
	0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x12, 0x15, 0x2e, 0x64, 0x6d, 0x2e, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c,
	0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x16, 0x2e, 0x64, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x64, 0x6d, 0x2e, 0x47, 0x65, 0x74,
	0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2b, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x12, 0x10, 0x2e,
	0x64, 0x6d, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x1a,
	0x0c, 0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41, 0x75, 0x74, 0x68, 0x12, 0x11, 0x2e, 0x64, 0x6d,
	0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x0c,
	0x2e, 0x64, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x09,
	0x72, 0x6f, 0x6f, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x10, 0x2e, 0x64, 0x6d, 0x2e, 0x52,
	0x6f, 0x6f, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x64, 0x6d,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x73, 0x65, 0x6e,
	0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x11, 0x2e, 0x64, 0x6d, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x64, 0x6d, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39,
	0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x13,
	0x2e, 0x64, 0x6d, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x64, 0x6d, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0f, 0x64, 0x61, 0x74,
	0x61, 0x53, 0x64, 0x6b, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x2e, 0x64,
	0x6d, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x64, 0x6b, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x64,
	0x6b, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a,
	0x0f, 0x64, 0x61, 0x74, 0x61, 0x48, 0x75, 0x62, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x16, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x75, 0x62, 0x4c, 0x6f, 0x67,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x48, 0x75, 0x62, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4e, 0x0a, 0x15, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x2e, 0x64, 0x6d, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x48, 0x0a, 0x12, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4c,
	0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x71, 0x1a, 0x17, 0x2e, 0x64, 0x6d, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x42, 0x07, 0x5a, 0x05, 0x70,
	0x62, 0x2f, 0x64, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_dm_proto_rawDescOnce sync.Once
	file_proto_dm_proto_rawDescData = file_proto_dm_proto_rawDesc
)

func file_proto_dm_proto_rawDescGZIP() []byte {
	file_proto_dm_proto_rawDescOnce.Do(func() {
		file_proto_dm_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_dm_proto_rawDescData)
	})
	return file_proto_dm_proto_rawDescData
}

var file_proto_dm_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_proto_dm_proto_goTypes = []interface{}{
	(*Response)(nil),                 // 0: dm.Response
	(*PageInfo)(nil),                 // 1: dm.PageInfo
	(*DeviceInfo)(nil),               // 2: dm.DeviceInfo
	(*ProductInfo)(nil),              // 3: dm.ProductInfo
	(*ProductInfoDeleteReq)(nil),     // 4: dm.ProductInfoDeleteReq
	(*ProductInfoReadReq)(nil),       // 5: dm.ProductInfoReadReq
	(*ProductSchema)(nil),            // 6: dm.ProductSchema
	(*ProductSchemaUpdateReq)(nil),   // 7: dm.ProductSchemaUpdateReq
	(*ProductSchemaReadReq)(nil),     // 8: dm.ProductSchemaReadReq
	(*DeviceInfoDeleteReq)(nil),      // 9: dm.DeviceInfoDeleteReq
	(*DeviceInfoReadReq)(nil),        // 10: dm.DeviceInfoReadReq
	(*DeviceInfoIndexReq)(nil),       // 11: dm.DeviceInfoIndexReq
	(*DeviceInfoIndexResp)(nil),      // 12: dm.DeviceInfoIndexResp
	(*ProductInfoIndexReq)(nil),      // 13: dm.ProductInfoIndexReq
	(*ProductInfoIndexResp)(nil),     // 14: dm.ProductInfoIndexResp
	(*DataSchemaLogIndexReq)(nil),    // 15: dm.DataSchemaLogIndexReq
	(*DataSchemaLatestIndexReq)(nil), // 16: dm.DataSchemaLatestIndexReq
	(*DataSchemaIndex)(nil),          // 17: dm.DataSchemaIndex
	(*DataSchemaIndexResp)(nil),      // 18: dm.DataSchemaIndexResp
	(*DataHubLogIndex)(nil),          // 19: dm.DataHubLogIndex
	(*DataHubLogIndexReq)(nil),       // 20: dm.DataHubLogIndexReq
	(*DataHubLogIndexResp)(nil),      // 21: dm.DataHubLogIndexResp
	(*SendActionReq)(nil),            // 22: dm.SendActionReq
	(*SendActionResp)(nil),           // 23: dm.SendActionResp
	(*SendPropertyReq)(nil),          // 24: dm.SendPropertyReq
	(*SendPropertyResp)(nil),         // 25: dm.SendPropertyResp
	(*DataSdkLogIndexReq)(nil),       // 26: dm.DataSdkLogIndexReq
	(*DataSdkLogIndexResp)(nil),      // 27: dm.DataSdkLogIndexResp
	(*DataSdkLogIndex)(nil),          // 28: dm.DataSdkLogIndex
	(*LoginAuthReq)(nil),             // 29: dm.LoginAuthReq
	(*AccessAuthReq)(nil),            // 30: dm.AccessAuthReq
	(*RootCheckReq)(nil),             // 31: dm.RootCheckReq
	(*ManageFirmwareReq)(nil),        // 32: dm.ManageFirmwareReq
	(*FirmwareInfo)(nil),             // 33: dm.FirmwareInfo
	(*GetFirmwareInfoReq)(nil),       // 34: dm.GetFirmwareInfoReq
	(*GetFirmwareInfoResp)(nil),      // 35: dm.GetFirmwareInfoResp
	nil,                              // 36: dm.DeviceInfo.TagsEntry
	nil,                              // 37: dm.DeviceInfoIndexReq.TagsEntry
	(*wrapperspb.StringValue)(nil),   // 38: google.protobuf.StringValue
}
var file_proto_dm_proto_depIdxs = []int32{
	38, // 0: dm.DeviceInfo.version:type_name -> google.protobuf.StringValue
	36, // 1: dm.DeviceInfo.tags:type_name -> dm.DeviceInfo.TagsEntry
	38, // 2: dm.ProductInfo.description:type_name -> google.protobuf.StringValue
	38, // 3: dm.ProductInfo.devStatus:type_name -> google.protobuf.StringValue
	6,  // 4: dm.ProductSchemaUpdateReq.info:type_name -> dm.ProductSchema
	1,  // 5: dm.DeviceInfoIndexReq.page:type_name -> dm.PageInfo
	37, // 6: dm.DeviceInfoIndexReq.tags:type_name -> dm.DeviceInfoIndexReq.TagsEntry
	2,  // 7: dm.DeviceInfoIndexResp.list:type_name -> dm.DeviceInfo
	1,  // 8: dm.ProductInfoIndexReq.page:type_name -> dm.PageInfo
	3,  // 9: dm.ProductInfoIndexResp.list:type_name -> dm.ProductInfo
	1,  // 10: dm.DataSchemaLogIndexReq.page:type_name -> dm.PageInfo
	17, // 11: dm.DataSchemaIndexResp.list:type_name -> dm.DataSchemaIndex
	1,  // 12: dm.DataHubLogIndexReq.page:type_name -> dm.PageInfo
	19, // 13: dm.DataHubLogIndexResp.list:type_name -> dm.DataHubLogIndex
	1,  // 14: dm.DataSdkLogIndexReq.page:type_name -> dm.PageInfo
	28, // 15: dm.DataSdkLogIndexResp.list:type_name -> dm.DataSdkLogIndex
	33, // 16: dm.ManageFirmwareReq.info:type_name -> dm.FirmwareInfo
	1,  // 17: dm.GetFirmwareInfoReq.page:type_name -> dm.PageInfo
	33, // 18: dm.GetFirmwareInfoResp.list:type_name -> dm.FirmwareInfo
	2,  // 19: dm.Dm.DeviceInfoCreate:input_type -> dm.DeviceInfo
	2,  // 20: dm.Dm.DeviceInfoUpdate:input_type -> dm.DeviceInfo
	9,  // 21: dm.Dm.DeviceInfoDelete:input_type -> dm.DeviceInfoDeleteReq
	11, // 22: dm.Dm.DeviceInfoIndex:input_type -> dm.DeviceInfoIndexReq
	10, // 23: dm.Dm.DeviceInfoRead:input_type -> dm.DeviceInfoReadReq
	3,  // 24: dm.Dm.ProductInfoCreate:input_type -> dm.ProductInfo
	3,  // 25: dm.Dm.ProductInfoUpdate:input_type -> dm.ProductInfo
	4,  // 26: dm.Dm.ProductInfoDelete:input_type -> dm.ProductInfoDeleteReq
	13, // 27: dm.Dm.ProductInfoIndex:input_type -> dm.ProductInfoIndexReq
	5,  // 28: dm.Dm.ProductInfoRead:input_type -> dm.ProductInfoReadReq
	7,  // 29: dm.Dm.ProductSchemaUpdate:input_type -> dm.ProductSchemaUpdateReq
	8,  // 30: dm.Dm.ProductSchemaRead:input_type -> dm.ProductSchemaReadReq
	32, // 31: dm.Dm.manageFirmware:input_type -> dm.ManageFirmwareReq
	34, // 32: dm.Dm.GetFirmwareInfo:input_type -> dm.GetFirmwareInfoReq
	29, // 33: dm.Dm.loginAuth:input_type -> dm.LoginAuthReq
	30, // 34: dm.Dm.accessAuth:input_type -> dm.AccessAuthReq
	31, // 35: dm.Dm.rootCheck:input_type -> dm.RootCheckReq
	22, // 36: dm.Dm.sendAction:input_type -> dm.SendActionReq
	24, // 37: dm.Dm.sendProperty:input_type -> dm.SendPropertyReq
	26, // 38: dm.Dm.dataSdkLogIndex:input_type -> dm.DataSdkLogIndexReq
	20, // 39: dm.Dm.dataHubLogIndex:input_type -> dm.DataHubLogIndexReq
	16, // 40: dm.Dm.dataSchemaLatestIndex:input_type -> dm.DataSchemaLatestIndexReq
	15, // 41: dm.Dm.dataSchemaLogIndex:input_type -> dm.DataSchemaLogIndexReq
	0,  // 42: dm.Dm.DeviceInfoCreate:output_type -> dm.Response
	0,  // 43: dm.Dm.DeviceInfoUpdate:output_type -> dm.Response
	0,  // 44: dm.Dm.DeviceInfoDelete:output_type -> dm.Response
	12, // 45: dm.Dm.DeviceInfoIndex:output_type -> dm.DeviceInfoIndexResp
	2,  // 46: dm.Dm.DeviceInfoRead:output_type -> dm.DeviceInfo
	0,  // 47: dm.Dm.ProductInfoCreate:output_type -> dm.Response
	0,  // 48: dm.Dm.ProductInfoUpdate:output_type -> dm.Response
	0,  // 49: dm.Dm.ProductInfoDelete:output_type -> dm.Response
	14, // 50: dm.Dm.ProductInfoIndex:output_type -> dm.ProductInfoIndexResp
	3,  // 51: dm.Dm.ProductInfoRead:output_type -> dm.ProductInfo
	0,  // 52: dm.Dm.ProductSchemaUpdate:output_type -> dm.Response
	6,  // 53: dm.Dm.ProductSchemaRead:output_type -> dm.ProductSchema
	0,  // 54: dm.Dm.manageFirmware:output_type -> dm.Response
	35, // 55: dm.Dm.GetFirmwareInfo:output_type -> dm.GetFirmwareInfoResp
	0,  // 56: dm.Dm.loginAuth:output_type -> dm.Response
	0,  // 57: dm.Dm.accessAuth:output_type -> dm.Response
	0,  // 58: dm.Dm.rootCheck:output_type -> dm.Response
	23, // 59: dm.Dm.sendAction:output_type -> dm.SendActionResp
	25, // 60: dm.Dm.sendProperty:output_type -> dm.SendPropertyResp
	27, // 61: dm.Dm.dataSdkLogIndex:output_type -> dm.DataSdkLogIndexResp
	21, // 62: dm.Dm.dataHubLogIndex:output_type -> dm.DataHubLogIndexResp
	18, // 63: dm.Dm.dataSchemaLatestIndex:output_type -> dm.DataSchemaIndexResp
	18, // 64: dm.Dm.dataSchemaLogIndex:output_type -> dm.DataSchemaIndexResp
	42, // [42:65] is the sub-list for method output_type
	19, // [19:42] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_proto_dm_proto_init() }
func file_proto_dm_proto_init() {
	if File_proto_dm_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_dm_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductInfoDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductInfoReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductSchemaUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductSchemaReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfoDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfoReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataSchemaLogIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataSchemaLatestIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataSchemaIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataSchemaIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataHubLogIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataHubLogIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataHubLogIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendActionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendActionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPropertyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPropertyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataSdkLogIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataSdkLogIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataSdkLogIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginAuthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessAuthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RootCheckReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageFirmwareReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirmwareInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFirmwareInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dm_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFirmwareInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_dm_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_dm_proto_goTypes,
		DependencyIndexes: file_proto_dm_proto_depIdxs,
		MessageInfos:      file_proto_dm_proto_msgTypes,
	}.Build()
	File_proto_dm_proto = out.File
	file_proto_dm_proto_rawDesc = nil
	file_proto_dm_proto_goTypes = nil
	file_proto_dm_proto_depIdxs = nil
}
