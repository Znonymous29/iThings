// Code generated by goctl. DO NOT EDIT.
// Source: dm.proto

package server

import (
	"context"

	"github.com/i-Things/things/src/dmsvr/internal/logic/otafirmwaremanage"
	"github.com/i-Things/things/src/dmsvr/internal/svc"
	"github.com/i-Things/things/src/dmsvr/pb/dm"
)

type OTAFirmwareManageServer struct {
	svcCtx *svc.ServiceContext
	dm.UnimplementedOTAFirmwareManageServer
}

func NewOTAFirmwareManageServer(svcCtx *svc.ServiceContext) *OTAFirmwareManageServer {
	return &OTAFirmwareManageServer{
		svcCtx: svcCtx,
	}
}

// 添加升级包
func (s *OTAFirmwareManageServer) CreateOTAFirmware(ctx context.Context, in *dm.OtaFirmwareReq) (*dm.OtaFirmwareResp, error) {
	l := otafirmwaremanagelogic.NewCreateOTAFirmwareLogic(ctx, s.svcCtx)
	return l.CreateOTAFirmware(in)
}

// 修改升级包
func (s *OTAFirmwareManageServer) ModifyOTAFirmware(ctx context.Context, in *dm.ModifyOtaFirmwareReq) (*dm.OtaFirmwareResp, error) {
	l := otafirmwaremanagelogic.NewModifyOTAFirmwareLogic(ctx, s.svcCtx)
	return l.ModifyOTAFirmware(in)
}

// 删除升级包
func (s *OTAFirmwareManageServer) DeleteOTAFirmware(ctx context.Context, in *dm.DeleteOtaFirmwareReq) (*dm.Response, error) {
	l := otafirmwaremanagelogic.NewDeleteOTAFirmwareLogic(ctx, s.svcCtx)
	return l.DeleteOTAFirmware(in)
}

// 升级包列表
func (s *OTAFirmwareManageServer) ListOTAFirmware(ctx context.Context, in *dm.ListOtaFirmwareReq) (*dm.ListOtaFirmwareResp, error) {
	l := otafirmwaremanagelogic.NewListOTAFirmwareLogic(ctx, s.svcCtx)
	return l.ListOTAFirmware(in)
}

// 查询升级包
func (s *OTAFirmwareManageServer) QueryOTAFirmware(ctx context.Context, in *dm.QueryOtaFirmwareReq) (*dm.QueryOtaFirmwareResp, error) {
	l := otafirmwaremanagelogic.NewQueryOTAFirmwareLogic(ctx, s.svcCtx)
	return l.QueryOTAFirmware(in)
}
