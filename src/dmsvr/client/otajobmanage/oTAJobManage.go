// Code generated by goctl. DO NOT EDIT.
// Source: dm.proto

package otajobmanage

import (
	"context"

	"github.com/i-Things/things/src/dmsvr/internal/svc"
	"github.com/i-Things/things/src/dmsvr/pb/dm"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AccessAuthReq                     = dm.AccessAuthReq
	CancelOtaTaskByDevice             = dm.CancelOtaTaskByDevice
	CancelOtaTaskByJobReq             = dm.CancelOtaTaskByJobReq
	ConfirmOtaTaskReq                 = dm.ConfirmOtaTaskReq
	CreateOrUpdateModuleReq           = dm.CreateOrUpdateModuleReq
	DeleteModuleReq                   = dm.DeleteModuleReq
	DeviceCore                        = dm.DeviceCore
	DeviceGatewayBindDevice           = dm.DeviceGatewayBindDevice
	DeviceGatewayIndexReq             = dm.DeviceGatewayIndexReq
	DeviceGatewayIndexResp            = dm.DeviceGatewayIndexResp
	DeviceGatewayMultiCreateReq       = dm.DeviceGatewayMultiCreateReq
	DeviceGatewayMultiDeleteReq       = dm.DeviceGatewayMultiDeleteReq
	DeviceGatewaySign                 = dm.DeviceGatewaySign
	DeviceInfo                        = dm.DeviceInfo
	DeviceInfoCountReq                = dm.DeviceInfoCountReq
	DeviceInfoCountResp               = dm.DeviceInfoCountResp
	DeviceInfoDeleteReq               = dm.DeviceInfoDeleteReq
	DeviceInfoIndexReq                = dm.DeviceInfoIndexReq
	DeviceInfoIndexResp               = dm.DeviceInfoIndexResp
	DeviceInfoReadReq                 = dm.DeviceInfoReadReq
	DeviceRegisterReq                 = dm.DeviceRegisterReq
	DeviceRegisterResp                = dm.DeviceRegisterResp
	DeviceTypeCountReq                = dm.DeviceTypeCountReq
	DeviceTypeCountResp               = dm.DeviceTypeCountResp
	DynamicUpgradeJobReq              = dm.DynamicUpgradeJobReq
	EventIndex                        = dm.EventIndex
	EventIndexResp                    = dm.EventIndexResp
	EventLogIndexReq                  = dm.EventLogIndexReq
	Firmware                          = dm.Firmware
	FirmwareFile                      = dm.FirmwareFile
	FirmwareInfo                      = dm.FirmwareInfo
	FirmwareInfoDeleteReq             = dm.FirmwareInfoDeleteReq
	FirmwareInfoDeleteResp            = dm.FirmwareInfoDeleteResp
	FirmwareInfoIndexReq              = dm.FirmwareInfoIndexReq
	FirmwareInfoIndexResp             = dm.FirmwareInfoIndexResp
	FirmwareInfoReadReq               = dm.FirmwareInfoReadReq
	FirmwareInfoReadResp              = dm.FirmwareInfoReadResp
	FirmwareResp                      = dm.FirmwareResp
	GetPropertyReplyReq               = dm.GetPropertyReplyReq
	GetPropertyReplyResp              = dm.GetPropertyReplyResp
	GroupDeviceIndexReq               = dm.GroupDeviceIndexReq
	GroupDeviceIndexResp              = dm.GroupDeviceIndexResp
	GroupDeviceMultiCreateReq         = dm.GroupDeviceMultiCreateReq
	GroupDeviceMultiDeleteReq         = dm.GroupDeviceMultiDeleteReq
	GroupInfo                         = dm.GroupInfo
	GroupInfoCreateReq                = dm.GroupInfoCreateReq
	GroupInfoDeleteReq                = dm.GroupInfoDeleteReq
	GroupInfoIndexReq                 = dm.GroupInfoIndexReq
	GroupInfoIndexResp                = dm.GroupInfoIndexResp
	GroupInfoReadReq                  = dm.GroupInfoReadReq
	GroupInfoUpdateReq                = dm.GroupInfoUpdateReq
	HubLogIndex                       = dm.HubLogIndex
	HubLogIndexReq                    = dm.HubLogIndexReq
	HubLogIndexResp                   = dm.HubLogIndexResp
	JobReq                            = dm.JobReq
	ListOTAModuleByProductReq         = dm.ListOTAModuleByProductReq
	ListOTAModuleByProductResp        = dm.ListOTAModuleByProductResp
	ListOTAModuleVersionsByDeviceReq  = dm.ListOTAModuleVersionsByDeviceReq
	ListOTAModuleVersionsByDeviceResp = dm.ListOTAModuleVersionsByDeviceResp
	ListOTAUnfinishedTaskByDeviceReq  = dm.ListOTAUnfinishedTaskByDeviceReq
	ListOTAUnfinishedTaskByDeviceResp = dm.ListOTAUnfinishedTaskByDeviceResp
	ListOtaJobByDeviceReq             = dm.ListOtaJobByDeviceReq
	ListOtaJobByFirmwareReq           = dm.ListOtaJobByFirmwareReq
	ListOtaJobInfoResp                = dm.ListOtaJobInfoResp
	ListOtaTaskByJobReq               = dm.ListOtaTaskByJobReq
	ListOtaTaskByJobResp              = dm.ListOtaTaskByJobResp
	LoginAuthReq                      = dm.LoginAuthReq
	MultiSendPropertyReq              = dm.MultiSendPropertyReq
	MultiSendPropertyResp             = dm.MultiSendPropertyResp
	OTAModuleDetail                   = dm.OTAModuleDetail
	OtaCommonResp                     = dm.OtaCommonResp
	OtaFirmwareCreateReq              = dm.OtaFirmwareCreateReq
	OtaFirmwareDeleteReq              = dm.OtaFirmwareDeleteReq
	OtaFirmwareDeviceInfoReq          = dm.OtaFirmwareDeviceInfoReq
	OtaFirmwareDeviceInfoResp         = dm.OtaFirmwareDeviceInfoResp
	OtaFirmwareFile                   = dm.OtaFirmwareFile
	OtaFirmwareFileIndexReq           = dm.OtaFirmwareFileIndexReq
	OtaFirmwareFileIndexResp          = dm.OtaFirmwareFileIndexResp
	OtaFirmwareFileInfo               = dm.OtaFirmwareFileInfo
	OtaFirmwareFileReq                = dm.OtaFirmwareFileReq
	OtaFirmwareFileResp               = dm.OtaFirmwareFileResp
	OtaFirmwareIndexReq               = dm.OtaFirmwareIndexReq
	OtaFirmwareIndexResp              = dm.OtaFirmwareIndexResp
	OtaFirmwareInfo                   = dm.OtaFirmwareInfo
	OtaFirmwareReadReq                = dm.OtaFirmwareReadReq
	OtaFirmwareReadResp               = dm.OtaFirmwareReadResp
	OtaFirmwareResp                   = dm.OtaFirmwareResp
	OtaFirmwareUpdateReq              = dm.OtaFirmwareUpdateReq
	OtaJobInfo                        = dm.OtaJobInfo
	OtaModuleInfo                     = dm.OtaModuleInfo
	OtaPageInfo                       = dm.OtaPageInfo
	OtaPromptIndexReq                 = dm.OtaPromptIndexReq
	OtaPromptIndexResp                = dm.OtaPromptIndexResp
	OtaTaskBatchReq                   = dm.OtaTaskBatchReq
	OtaTaskBatchResp                  = dm.OtaTaskBatchResp
	OtaTaskCancleReq                  = dm.OtaTaskCancleReq
	OtaTaskCreatResp                  = dm.OtaTaskCreatResp
	OtaTaskCreateReq                  = dm.OtaTaskCreateReq
	OtaTaskDeviceCancleReq            = dm.OtaTaskDeviceCancleReq
	OtaTaskDeviceIndexReq             = dm.OtaTaskDeviceIndexReq
	OtaTaskDeviceIndexResp            = dm.OtaTaskDeviceIndexResp
	OtaTaskDeviceInfo                 = dm.OtaTaskDeviceInfo
	OtaTaskDeviceProcessReq           = dm.OtaTaskDeviceProcessReq
	OtaTaskDeviceReadReq              = dm.OtaTaskDeviceReadReq
	OtaTaskIndexReq                   = dm.OtaTaskIndexReq
	OtaTaskIndexResp                  = dm.OtaTaskIndexResp
	OtaTaskInfo                       = dm.OtaTaskInfo
	OtaTaskReadReq                    = dm.OtaTaskReadReq
	OtaTaskReadResp                   = dm.OtaTaskReadResp
	OtaUpTaskInfo                     = dm.OtaUpTaskInfo
	PageInfo                          = dm.PageInfo
	PageInfo_OrderBy                  = dm.PageInfo_OrderBy
	Point                             = dm.Point
	ProductCustom                     = dm.ProductCustom
	ProductCustomReadReq              = dm.ProductCustomReadReq
	ProductInfo                       = dm.ProductInfo
	ProductInfoDeleteReq              = dm.ProductInfoDeleteReq
	ProductInfoIndexReq               = dm.ProductInfoIndexReq
	ProductInfoIndexResp              = dm.ProductInfoIndexResp
	ProductInfoReadReq                = dm.ProductInfoReadReq
	ProductRemoteConfig               = dm.ProductRemoteConfig
	ProductSchemaCreateReq            = dm.ProductSchemaCreateReq
	ProductSchemaDeleteReq            = dm.ProductSchemaDeleteReq
	ProductSchemaIndexReq             = dm.ProductSchemaIndexReq
	ProductSchemaIndexResp            = dm.ProductSchemaIndexResp
	ProductSchemaInfo                 = dm.ProductSchemaInfo
	ProductSchemaTslImportReq         = dm.ProductSchemaTslImportReq
	ProductSchemaTslReadReq           = dm.ProductSchemaTslReadReq
	ProductSchemaTslReadResp          = dm.ProductSchemaTslReadResp
	ProductSchemaUpdateReq            = dm.ProductSchemaUpdateReq
	PropertyIndex                     = dm.PropertyIndex
	PropertyIndexResp                 = dm.PropertyIndexResp
	PropertyLatestIndexReq            = dm.PropertyLatestIndexReq
	PropertyLogIndexReq               = dm.PropertyLogIndexReq
	ReUpgradeOTATaskReq               = dm.ReUpgradeOTATaskReq
	RemoteConfigCreateReq             = dm.RemoteConfigCreateReq
	RemoteConfigIndexReq              = dm.RemoteConfigIndexReq
	RemoteConfigIndexResp             = dm.RemoteConfigIndexResp
	RemoteConfigLastReadReq           = dm.RemoteConfigLastReadReq
	RemoteConfigLastReadResp          = dm.RemoteConfigLastReadResp
	RemoteConfigPushAllReq            = dm.RemoteConfigPushAllReq
	RespActionReq                     = dm.RespActionReq
	RespReadReq                       = dm.RespReadReq
	Response                          = dm.Response
	RootCheckReq                      = dm.RootCheckReq
	SdkLogIndex                       = dm.SdkLogIndex
	SdkLogIndexReq                    = dm.SdkLogIndexReq
	SdkLogIndexResp                   = dm.SdkLogIndexResp
	SendActionReq                     = dm.SendActionReq
	SendActionResp                    = dm.SendActionResp
	SendMsgReq                        = dm.SendMsgReq
	SendMsgResp                       = dm.SendMsgResp
	SendOption                        = dm.SendOption
	SendPropertyMsg                   = dm.SendPropertyMsg
	SendPropertyReq                   = dm.SendPropertyReq
	SendPropertyResp                  = dm.SendPropertyResp
	ShadowIndex                       = dm.ShadowIndex
	ShadowIndexResp                   = dm.ShadowIndexResp
	StaticUpgradeJobReq               = dm.StaticUpgradeJobReq
	Tag                               = dm.Tag
	UpgradeJobResp                    = dm.UpgradeJobResp
	VerifyOtaFirmwareReq              = dm.VerifyOtaFirmwareReq

	OTAJobManage interface {
		// 验证升级包
		CreateOTAVerifyJob(ctx context.Context, in *VerifyOtaFirmwareReq, opts ...grpc.CallOption) (*UpgradeJobResp, error)
		// 创建静态升级批次
		CreateOTAStaticUpgradeJob(ctx context.Context, in *StaticUpgradeJobReq, opts ...grpc.CallOption) (*UpgradeJobResp, error)
		// 创建动态升级批次
		CreateOTADynamicUpgradeJob(ctx context.Context, in *DynamicUpgradeJobReq, opts ...grpc.CallOption) (*UpgradeJobResp, error)
		// 获取升级包下的升级任务批次列表
		ListOTAJobByFirmware(ctx context.Context, in *ListOtaJobByFirmwareReq, opts ...grpc.CallOption) (*ListOtaJobInfoResp, error)
		// 获取设备所在的升级包升级批次列表
		ListOTAJobByDevice(ctx context.Context, in *ListOtaJobByDeviceReq, opts ...grpc.CallOption) (*ListOtaJobInfoResp, error)
		// 查询指定升级批次的详情
		QueryOTAJob(ctx context.Context, in *JobReq, opts ...grpc.CallOption) (*OtaJobInfo, error)
		// 取消动态升级策略
		CancelOTAStrategyByJob(ctx context.Context, in *JobReq, opts ...grpc.CallOption) (*Response, error)
	}

	defaultOTAJobManage struct {
		cli zrpc.Client
	}

	directOTAJobManage struct {
		svcCtx *svc.ServiceContext
		svr    dm.OTAJobManageServer
	}
)

func NewOTAJobManage(cli zrpc.Client) OTAJobManage {
	return &defaultOTAJobManage{
		cli: cli,
	}
}

func NewDirectOTAJobManage(svcCtx *svc.ServiceContext, svr dm.OTAJobManageServer) OTAJobManage {
	return &directOTAJobManage{
		svr:    svr,
		svcCtx: svcCtx,
	}
}

// 验证升级包
func (m *defaultOTAJobManage) CreateOTAVerifyJob(ctx context.Context, in *VerifyOtaFirmwareReq, opts ...grpc.CallOption) (*UpgradeJobResp, error) {
	client := dm.NewOTAJobManageClient(m.cli.Conn())
	return client.CreateOTAVerifyJob(ctx, in, opts...)
}

// 验证升级包
func (d *directOTAJobManage) CreateOTAVerifyJob(ctx context.Context, in *VerifyOtaFirmwareReq, opts ...grpc.CallOption) (*UpgradeJobResp, error) {
	return d.svr.CreateOTAVerifyJob(ctx, in)
}

// 创建静态升级批次
func (m *defaultOTAJobManage) CreateOTAStaticUpgradeJob(ctx context.Context, in *StaticUpgradeJobReq, opts ...grpc.CallOption) (*UpgradeJobResp, error) {
	client := dm.NewOTAJobManageClient(m.cli.Conn())
	return client.CreateOTAStaticUpgradeJob(ctx, in, opts...)
}

// 创建静态升级批次
func (d *directOTAJobManage) CreateOTAStaticUpgradeJob(ctx context.Context, in *StaticUpgradeJobReq, opts ...grpc.CallOption) (*UpgradeJobResp, error) {
	return d.svr.CreateOTAStaticUpgradeJob(ctx, in)
}

// 创建动态升级批次
func (m *defaultOTAJobManage) CreateOTADynamicUpgradeJob(ctx context.Context, in *DynamicUpgradeJobReq, opts ...grpc.CallOption) (*UpgradeJobResp, error) {
	client := dm.NewOTAJobManageClient(m.cli.Conn())
	return client.CreateOTADynamicUpgradeJob(ctx, in, opts...)
}

// 创建动态升级批次
func (d *directOTAJobManage) CreateOTADynamicUpgradeJob(ctx context.Context, in *DynamicUpgradeJobReq, opts ...grpc.CallOption) (*UpgradeJobResp, error) {
	return d.svr.CreateOTADynamicUpgradeJob(ctx, in)
}

// 获取升级包下的升级任务批次列表
func (m *defaultOTAJobManage) ListOTAJobByFirmware(ctx context.Context, in *ListOtaJobByFirmwareReq, opts ...grpc.CallOption) (*ListOtaJobInfoResp, error) {
	client := dm.NewOTAJobManageClient(m.cli.Conn())
	return client.ListOTAJobByFirmware(ctx, in, opts...)
}

// 获取升级包下的升级任务批次列表
func (d *directOTAJobManage) ListOTAJobByFirmware(ctx context.Context, in *ListOtaJobByFirmwareReq, opts ...grpc.CallOption) (*ListOtaJobInfoResp, error) {
	return d.svr.ListOTAJobByFirmware(ctx, in)
}

// 获取设备所在的升级包升级批次列表
func (m *defaultOTAJobManage) ListOTAJobByDevice(ctx context.Context, in *ListOtaJobByDeviceReq, opts ...grpc.CallOption) (*ListOtaJobInfoResp, error) {
	client := dm.NewOTAJobManageClient(m.cli.Conn())
	return client.ListOTAJobByDevice(ctx, in, opts...)
}

// 获取设备所在的升级包升级批次列表
func (d *directOTAJobManage) ListOTAJobByDevice(ctx context.Context, in *ListOtaJobByDeviceReq, opts ...grpc.CallOption) (*ListOtaJobInfoResp, error) {
	return d.svr.ListOTAJobByDevice(ctx, in)
}

// 查询指定升级批次的详情
func (m *defaultOTAJobManage) QueryOTAJob(ctx context.Context, in *JobReq, opts ...grpc.CallOption) (*OtaJobInfo, error) {
	client := dm.NewOTAJobManageClient(m.cli.Conn())
	return client.QueryOTAJob(ctx, in, opts...)
}

// 查询指定升级批次的详情
func (d *directOTAJobManage) QueryOTAJob(ctx context.Context, in *JobReq, opts ...grpc.CallOption) (*OtaJobInfo, error) {
	return d.svr.QueryOTAJob(ctx, in)
}

// 取消动态升级策略
func (m *defaultOTAJobManage) CancelOTAStrategyByJob(ctx context.Context, in *JobReq, opts ...grpc.CallOption) (*Response, error) {
	client := dm.NewOTAJobManageClient(m.cli.Conn())
	return client.CancelOTAStrategyByJob(ctx, in, opts...)
}

// 取消动态升级策略
func (d *directOTAJobManage) CancelOTAStrategyByJob(ctx context.Context, in *JobReq, opts ...grpc.CallOption) (*Response, error) {
	return d.svr.CancelOTAStrategyByJob(ctx, in)
}
