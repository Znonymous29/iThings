// Code generated by goctl. DO NOT EDIT.
// Source: dm.proto

package otafirmwaremanage

import (
	"context"

	"github.com/i-Things/things/src/dmsvr/internal/svc"
	"github.com/i-Things/things/src/dmsvr/pb/dm"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AccessAuthReq               = dm.AccessAuthReq
	DeleteOtaFirmwareReq        = dm.DeleteOtaFirmwareReq
	DeviceCore                  = dm.DeviceCore
	DeviceGatewayBindDevice     = dm.DeviceGatewayBindDevice
	DeviceGatewayIndexReq       = dm.DeviceGatewayIndexReq
	DeviceGatewayIndexResp      = dm.DeviceGatewayIndexResp
	DeviceGatewayMultiCreateReq = dm.DeviceGatewayMultiCreateReq
	DeviceGatewayMultiDeleteReq = dm.DeviceGatewayMultiDeleteReq
	DeviceGatewaySign           = dm.DeviceGatewaySign
	DeviceInfo                  = dm.DeviceInfo
	DeviceInfoCountReq          = dm.DeviceInfoCountReq
	DeviceInfoCountResp         = dm.DeviceInfoCountResp
	DeviceInfoDeleteReq         = dm.DeviceInfoDeleteReq
	DeviceInfoIndexReq          = dm.DeviceInfoIndexReq
	DeviceInfoIndexResp         = dm.DeviceInfoIndexResp
	DeviceInfoReadReq           = dm.DeviceInfoReadReq
	DeviceRegisterReq           = dm.DeviceRegisterReq
	DeviceRegisterResp          = dm.DeviceRegisterResp
	DeviceTypeCountReq          = dm.DeviceTypeCountReq
	DeviceTypeCountResp         = dm.DeviceTypeCountResp
	EventIndex                  = dm.EventIndex
	EventIndexResp              = dm.EventIndexResp
	EventLogIndexReq            = dm.EventLogIndexReq
	Firmware                    = dm.Firmware
	FirmwareFile                = dm.FirmwareFile
	FirmwareInfo                = dm.FirmwareInfo
	FirmwareInfoDeleteReq       = dm.FirmwareInfoDeleteReq
	FirmwareInfoDeleteResp      = dm.FirmwareInfoDeleteResp
	FirmwareInfoIndexReq        = dm.FirmwareInfoIndexReq
	FirmwareInfoIndexResp       = dm.FirmwareInfoIndexResp
	FirmwareInfoReadReq         = dm.FirmwareInfoReadReq
	FirmwareInfoReadResp        = dm.FirmwareInfoReadResp
	FirmwareResp                = dm.FirmwareResp
	GetPropertyReplyReq         = dm.GetPropertyReplyReq
	GetPropertyReplyResp        = dm.GetPropertyReplyResp
	GroupDeviceIndexReq         = dm.GroupDeviceIndexReq
	GroupDeviceIndexResp        = dm.GroupDeviceIndexResp
	GroupDeviceMultiCreateReq   = dm.GroupDeviceMultiCreateReq
	GroupDeviceMultiDeleteReq   = dm.GroupDeviceMultiDeleteReq
	GroupInfo                   = dm.GroupInfo
	GroupInfoCreateReq          = dm.GroupInfoCreateReq
	GroupInfoDeleteReq          = dm.GroupInfoDeleteReq
	GroupInfoIndexReq           = dm.GroupInfoIndexReq
	GroupInfoIndexResp          = dm.GroupInfoIndexResp
	GroupInfoReadReq            = dm.GroupInfoReadReq
	GroupInfoUpdateReq          = dm.GroupInfoUpdateReq
	HubLogIndex                 = dm.HubLogIndex
	HubLogIndexReq              = dm.HubLogIndexReq
	HubLogIndexResp             = dm.HubLogIndexResp
	ListOtaFirmwareReq          = dm.ListOtaFirmwareReq
	ListOtaFirmwareResp         = dm.ListOtaFirmwareResp
	LoginAuthReq                = dm.LoginAuthReq
	ModifyOtaFirmwareReq        = dm.ModifyOtaFirmwareReq
	MultiSendPropertyReq        = dm.MultiSendPropertyReq
	MultiSendPropertyResp       = dm.MultiSendPropertyResp
	OtaCommonResp               = dm.OtaCommonResp
	OtaFirmwareDeviceInfoReq    = dm.OtaFirmwareDeviceInfoReq
	OtaFirmwareDeviceInfoResp   = dm.OtaFirmwareDeviceInfoResp
	OtaFirmwareFile             = dm.OtaFirmwareFile
	OtaFirmwareFileIndexReq     = dm.OtaFirmwareFileIndexReq
	OtaFirmwareFileIndexResp    = dm.OtaFirmwareFileIndexResp
	OtaFirmwareFileInfo         = dm.OtaFirmwareFileInfo
	OtaFirmwareFileReq          = dm.OtaFirmwareFileReq
	OtaFirmwareFileResp         = dm.OtaFirmwareFileResp
	OtaFirmwareInfo             = dm.OtaFirmwareInfo
	OtaFirmwareReq              = dm.OtaFirmwareReq
	OtaFirmwareResp             = dm.OtaFirmwareResp
	OtaPageInfo                 = dm.OtaPageInfo
	OtaPromptIndexReq           = dm.OtaPromptIndexReq
	OtaPromptIndexResp          = dm.OtaPromptIndexResp
	OtaTaskBatchReq             = dm.OtaTaskBatchReq
	OtaTaskBatchResp            = dm.OtaTaskBatchResp
	OtaTaskCancleReq            = dm.OtaTaskCancleReq
	OtaTaskCreatResp            = dm.OtaTaskCreatResp
	OtaTaskCreateReq            = dm.OtaTaskCreateReq
	OtaTaskDeviceCancleReq      = dm.OtaTaskDeviceCancleReq
	OtaTaskDeviceIndexReq       = dm.OtaTaskDeviceIndexReq
	OtaTaskDeviceIndexResp      = dm.OtaTaskDeviceIndexResp
	OtaTaskDeviceInfo           = dm.OtaTaskDeviceInfo
	OtaTaskDeviceProcessReq     = dm.OtaTaskDeviceProcessReq
	OtaTaskDeviceReadReq        = dm.OtaTaskDeviceReadReq
	OtaTaskIndexReq             = dm.OtaTaskIndexReq
	OtaTaskIndexResp            = dm.OtaTaskIndexResp
	OtaTaskInfo                 = dm.OtaTaskInfo
	OtaTaskReadReq              = dm.OtaTaskReadReq
	OtaTaskReadResp             = dm.OtaTaskReadResp
	PageInfo                    = dm.PageInfo
	PageInfo_OrderBy            = dm.PageInfo_OrderBy
	Point                       = dm.Point
	ProductCustom               = dm.ProductCustom
	ProductCustomReadReq        = dm.ProductCustomReadReq
	ProductInfo                 = dm.ProductInfo
	ProductInfoDeleteReq        = dm.ProductInfoDeleteReq
	ProductInfoIndexReq         = dm.ProductInfoIndexReq
	ProductInfoIndexResp        = dm.ProductInfoIndexResp
	ProductInfoReadReq          = dm.ProductInfoReadReq
	ProductRemoteConfig         = dm.ProductRemoteConfig
	ProductSchemaCreateReq      = dm.ProductSchemaCreateReq
	ProductSchemaDeleteReq      = dm.ProductSchemaDeleteReq
	ProductSchemaIndexReq       = dm.ProductSchemaIndexReq
	ProductSchemaIndexResp      = dm.ProductSchemaIndexResp
	ProductSchemaInfo           = dm.ProductSchemaInfo
	ProductSchemaTslImportReq   = dm.ProductSchemaTslImportReq
	ProductSchemaTslReadReq     = dm.ProductSchemaTslReadReq
	ProductSchemaTslReadResp    = dm.ProductSchemaTslReadResp
	ProductSchemaUpdateReq      = dm.ProductSchemaUpdateReq
	PropertyIndex               = dm.PropertyIndex
	PropertyIndexResp           = dm.PropertyIndexResp
	PropertyLatestIndexReq      = dm.PropertyLatestIndexReq
	PropertyLogIndexReq         = dm.PropertyLogIndexReq
	QueryOtaFirmwareReq         = dm.QueryOtaFirmwareReq
	QueryOtaFirmwareResp        = dm.QueryOtaFirmwareResp
	RemoteConfigCreateReq       = dm.RemoteConfigCreateReq
	RemoteConfigIndexReq        = dm.RemoteConfigIndexReq
	RemoteConfigIndexResp       = dm.RemoteConfigIndexResp
	RemoteConfigLastReadReq     = dm.RemoteConfigLastReadReq
	RemoteConfigLastReadResp    = dm.RemoteConfigLastReadResp
	RemoteConfigPushAllReq      = dm.RemoteConfigPushAllReq
	RespActionReq               = dm.RespActionReq
	RespReadReq                 = dm.RespReadReq
	Response                    = dm.Response
	RootCheckReq                = dm.RootCheckReq
	SdkLogIndex                 = dm.SdkLogIndex
	SdkLogIndexReq              = dm.SdkLogIndexReq
	SdkLogIndexResp             = dm.SdkLogIndexResp
	SendActionReq               = dm.SendActionReq
	SendActionResp              = dm.SendActionResp
	SendMsgReq                  = dm.SendMsgReq
	SendMsgResp                 = dm.SendMsgResp
	SendOption                  = dm.SendOption
	SendPropertyMsg             = dm.SendPropertyMsg
	SendPropertyReq             = dm.SendPropertyReq
	SendPropertyResp            = dm.SendPropertyResp
	ShadowIndex                 = dm.ShadowIndex
	ShadowIndexResp             = dm.ShadowIndexResp
	Tag                         = dm.Tag
	VerifyOtaFirmwareReq        = dm.VerifyOtaFirmwareReq

	OTAFirmwareManage interface {
		// 添加升级包
		CreateOTAFirmware(ctx context.Context, in *OtaFirmwareReq, opts ...grpc.CallOption) (*OtaFirmwareResp, error)
		// 修改升级包
		ModifyOTAFirmware(ctx context.Context, in *ModifyOtaFirmwareReq, opts ...grpc.CallOption) (*OtaFirmwareResp, error)
		// 删除升级包
		DeleteOTAFirmware(ctx context.Context, in *DeleteOtaFirmwareReq, opts ...grpc.CallOption) (*Response, error)
		// 升级包列表
		ListOTAFirmware(ctx context.Context, in *ListOtaFirmwareReq, opts ...grpc.CallOption) (*ListOtaFirmwareResp, error)
		// 查询升级包
		QueryOTAFirmware(ctx context.Context, in *QueryOtaFirmwareReq, opts ...grpc.CallOption) (*QueryOtaFirmwareResp, error)
	}

	defaultOTAFirmwareManage struct {
		cli zrpc.Client
	}

	directOTAFirmwareManage struct {
		svcCtx *svc.ServiceContext
		svr    dm.OTAFirmwareManageServer
	}
)

func NewOTAFirmwareManage(cli zrpc.Client) OTAFirmwareManage {
	return &defaultOTAFirmwareManage{
		cli: cli,
	}
}

func NewDirectOTAFirmwareManage(svcCtx *svc.ServiceContext, svr dm.OTAFirmwareManageServer) OTAFirmwareManage {
	return &directOTAFirmwareManage{
		svr:    svr,
		svcCtx: svcCtx,
	}
}

// 添加升级包
func (m *defaultOTAFirmwareManage) CreateOTAFirmware(ctx context.Context, in *OtaFirmwareReq, opts ...grpc.CallOption) (*OtaFirmwareResp, error) {
	client := dm.NewOTAFirmwareManageClient(m.cli.Conn())
	return client.CreateOTAFirmware(ctx, in, opts...)
}

// 添加升级包
func (d *directOTAFirmwareManage) CreateOTAFirmware(ctx context.Context, in *OtaFirmwareReq, opts ...grpc.CallOption) (*OtaFirmwareResp, error) {
	return d.svr.CreateOTAFirmware(ctx, in)
}

// 修改升级包
func (m *defaultOTAFirmwareManage) ModifyOTAFirmware(ctx context.Context, in *ModifyOtaFirmwareReq, opts ...grpc.CallOption) (*OtaFirmwareResp, error) {
	client := dm.NewOTAFirmwareManageClient(m.cli.Conn())
	return client.ModifyOTAFirmware(ctx, in, opts...)
}

// 修改升级包
func (d *directOTAFirmwareManage) ModifyOTAFirmware(ctx context.Context, in *ModifyOtaFirmwareReq, opts ...grpc.CallOption) (*OtaFirmwareResp, error) {
	return d.svr.ModifyOTAFirmware(ctx, in)
}

// 删除升级包
func (m *defaultOTAFirmwareManage) DeleteOTAFirmware(ctx context.Context, in *DeleteOtaFirmwareReq, opts ...grpc.CallOption) (*Response, error) {
	client := dm.NewOTAFirmwareManageClient(m.cli.Conn())
	return client.DeleteOTAFirmware(ctx, in, opts...)
}

// 删除升级包
func (d *directOTAFirmwareManage) DeleteOTAFirmware(ctx context.Context, in *DeleteOtaFirmwareReq, opts ...grpc.CallOption) (*Response, error) {
	return d.svr.DeleteOTAFirmware(ctx, in)
}

// 升级包列表
func (m *defaultOTAFirmwareManage) ListOTAFirmware(ctx context.Context, in *ListOtaFirmwareReq, opts ...grpc.CallOption) (*ListOtaFirmwareResp, error) {
	client := dm.NewOTAFirmwareManageClient(m.cli.Conn())
	return client.ListOTAFirmware(ctx, in, opts...)
}

// 升级包列表
func (d *directOTAFirmwareManage) ListOTAFirmware(ctx context.Context, in *ListOtaFirmwareReq, opts ...grpc.CallOption) (*ListOtaFirmwareResp, error) {
	return d.svr.ListOTAFirmware(ctx, in)
}

// 查询升级包
func (m *defaultOTAFirmwareManage) QueryOTAFirmware(ctx context.Context, in *QueryOtaFirmwareReq, opts ...grpc.CallOption) (*QueryOtaFirmwareResp, error) {
	client := dm.NewOTAFirmwareManageClient(m.cli.Conn())
	return client.QueryOTAFirmware(ctx, in, opts...)
}

// 查询升级包
func (d *directOTAFirmwareManage) QueryOTAFirmware(ctx context.Context, in *QueryOtaFirmwareReq, opts ...grpc.CallOption) (*QueryOtaFirmwareResp, error) {
	return d.svr.QueryOTAFirmware(ctx, in)
}
