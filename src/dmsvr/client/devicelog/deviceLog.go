// Code generated by goctl. DO NOT EDIT!
// Source: dm.proto

package client

import (
	"context"

	"github.com/i-Things/things/src/dmsvr/internal/svc"
	"github.com/i-Things/things/src/dmsvr/pb/dm"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AccessAuthReq            = dm.AccessAuthReq
	DataHubLogIndex          = dm.DataHubLogIndex
	DataHubLogIndexReq       = dm.DataHubLogIndexReq
	DataHubLogIndexResp      = dm.DataHubLogIndexResp
	DataSchemaIndex          = dm.DataSchemaIndex
	DataSchemaIndexResp      = dm.DataSchemaIndexResp
	DataSchemaLatestIndexReq = dm.DataSchemaLatestIndexReq
	DataSchemaLogIndexReq    = dm.DataSchemaLogIndexReq
	DataSdkLogIndex          = dm.DataSdkLogIndex
	DataSdkLogIndexReq       = dm.DataSdkLogIndexReq
	DataSdkLogIndexResp      = dm.DataSdkLogIndexResp
	DeviceInfo               = dm.DeviceInfo
	DeviceInfoDeleteReq      = dm.DeviceInfoDeleteReq
	DeviceInfoIndexReq       = dm.DeviceInfoIndexReq
	DeviceInfoIndexResp      = dm.DeviceInfoIndexResp
	DeviceInfoReadReq        = dm.DeviceInfoReadReq
	LoginAuthReq             = dm.LoginAuthReq
	PageInfo                 = dm.PageInfo
	ProductInfo              = dm.ProductInfo
	ProductInfoDeleteReq     = dm.ProductInfoDeleteReq
	ProductInfoIndexReq      = dm.ProductInfoIndexReq
	ProductInfoIndexResp     = dm.ProductInfoIndexResp
	ProductInfoReadReq       = dm.ProductInfoReadReq
	ProductSchema            = dm.ProductSchema
	ProductSchemaReadReq     = dm.ProductSchemaReadReq
	ProductSchemaUpdateReq   = dm.ProductSchemaUpdateReq
	Response                 = dm.Response
	RootCheckReq             = dm.RootCheckReq
	SendActionReq            = dm.SendActionReq
	SendActionResp           = dm.SendActionResp
	SendPropertyReq          = dm.SendPropertyReq
	SendPropertyResp         = dm.SendPropertyResp

	DeviceLog interface {
		// 获取设备sdk调试日志
		DataSdkLogIndex(ctx context.Context, in *DataSdkLogIndexReq, opts ...grpc.CallOption) (*DataSdkLogIndexResp, error)
		// 获取设备调试信息记录登入登出,操作
		DataHubLogIndex(ctx context.Context, in *DataHubLogIndexReq, opts ...grpc.CallOption) (*DataHubLogIndexResp, error)
		// 获取设备数据信息
		DataSchemaLatestIndex(ctx context.Context, in *DataSchemaLatestIndexReq, opts ...grpc.CallOption) (*DataSchemaIndexResp, error)
		// 获取设备数据信息
		DataSchemaLogIndex(ctx context.Context, in *DataSchemaLogIndexReq, opts ...grpc.CallOption) (*DataSchemaIndexResp, error)
	}

	defaultDeviceLog struct {
		cli zrpc.Client
	}

	directDeviceLog struct {
		svcCtx *svc.ServiceContext
		svr    dm.DeviceLogServer
	}
)

func NewDeviceLog(cli zrpc.Client) DeviceLog {
	return &defaultDeviceLog{
		cli: cli,
	}
}

func NewDirectDeviceLog(svcCtx *svc.ServiceContext, svr dm.DeviceLogServer) DeviceLog {
	return &directDeviceLog{
		svr:    svr,
		svcCtx: svcCtx,
	}
}

// 获取设备sdk调试日志
func (m *defaultDeviceLog) DataSdkLogIndex(ctx context.Context, in *DataSdkLogIndexReq, opts ...grpc.CallOption) (*DataSdkLogIndexResp, error) {
	client := dm.NewDeviceLogClient(m.cli.Conn())
	return client.DataSdkLogIndex(ctx, in, opts...)
}

// 获取设备sdk调试日志
func (d *directDeviceLog) DataSdkLogIndex(ctx context.Context, in *DataSdkLogIndexReq, opts ...grpc.CallOption) (*DataSdkLogIndexResp, error) {
	return d.svr.DataSdkLogIndex(ctx, in)
}

// 获取设备调试信息记录登入登出,操作
func (m *defaultDeviceLog) DataHubLogIndex(ctx context.Context, in *DataHubLogIndexReq, opts ...grpc.CallOption) (*DataHubLogIndexResp, error) {
	client := dm.NewDeviceLogClient(m.cli.Conn())
	return client.DataHubLogIndex(ctx, in, opts...)
}

// 获取设备调试信息记录登入登出,操作
func (d *directDeviceLog) DataHubLogIndex(ctx context.Context, in *DataHubLogIndexReq, opts ...grpc.CallOption) (*DataHubLogIndexResp, error) {
	return d.svr.DataHubLogIndex(ctx, in)
}

// 获取设备数据信息
func (m *defaultDeviceLog) DataSchemaLatestIndex(ctx context.Context, in *DataSchemaLatestIndexReq, opts ...grpc.CallOption) (*DataSchemaIndexResp, error) {
	client := dm.NewDeviceLogClient(m.cli.Conn())
	return client.DataSchemaLatestIndex(ctx, in, opts...)
}

// 获取设备数据信息
func (d *directDeviceLog) DataSchemaLatestIndex(ctx context.Context, in *DataSchemaLatestIndexReq, opts ...grpc.CallOption) (*DataSchemaIndexResp, error) {
	return d.svr.DataSchemaLatestIndex(ctx, in)
}

// 获取设备数据信息
func (m *defaultDeviceLog) DataSchemaLogIndex(ctx context.Context, in *DataSchemaLogIndexReq, opts ...grpc.CallOption) (*DataSchemaIndexResp, error) {
	client := dm.NewDeviceLogClient(m.cli.Conn())
	return client.DataSchemaLogIndex(ctx, in, opts...)
}

// 获取设备数据信息
func (d *directDeviceLog) DataSchemaLogIndex(ctx context.Context, in *DataSchemaLogIndexReq, opts ...grpc.CallOption) (*DataSchemaIndexResp, error) {
	return d.svr.DataSchemaLogIndex(ctx, in)
}
