// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: proto/sys.proto

package sys

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TenantInfoCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info          *TenantInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	AdminUserInfo *UserInfo   `protobuf:"bytes,2,opt,name=adminUserInfo,proto3" json:"adminUserInfo,omitempty"`
}

func (x *TenantInfoCreateReq) Reset() {
	*x = TenantInfoCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantInfoCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantInfoCreateReq) ProtoMessage() {}

func (x *TenantInfoCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantInfoCreateReq.ProtoReflect.Descriptor instead.
func (*TenantInfoCreateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{0}
}

func (x *TenantInfoCreateReq) GetInfo() *TenantInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *TenantInfoCreateReq) GetAdminUserInfo() *UserInfo {
	if x != nil {
		return x.AdminUserInfo
	}
	return nil
}

type TenantInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code        string                  `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	AdminUserID int64                   `protobuf:"varint,4,opt,name=adminUserID,proto3" json:"adminUserID,omitempty"`
	BaseUrl     string                  `protobuf:"bytes,5,opt,name=baseUrl,proto3" json:"baseUrl,omitempty"` // 基础URL
	LogoUrl     string                  `protobuf:"bytes,6,opt,name=logoUrl,proto3" json:"logoUrl,omitempty"` // 应用logo地址
	Desc        *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *TenantInfo) Reset() {
	*x = TenantInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantInfo) ProtoMessage() {}

func (x *TenantInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantInfo.ProtoReflect.Descriptor instead.
func (*TenantInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{1}
}

func (x *TenantInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TenantInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TenantInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TenantInfo) GetAdminUserID() int64 {
	if x != nil {
		return x.AdminUserID
	}
	return 0
}

func (x *TenantInfo) GetBaseUrl() string {
	if x != nil {
		return x.BaseUrl
	}
	return ""
}

func (x *TenantInfo) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *TenantInfo) GetDesc() *wrapperspb.StringValue {
	if x != nil {
		return x.Desc
	}
	return nil
}

type TenantInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"` //分页信息
	Name string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code string    `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *TenantInfoIndexReq) Reset() {
	*x = TenantInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantInfoIndexReq) ProtoMessage() {}

func (x *TenantInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantInfoIndexReq.ProtoReflect.Descriptor instead.
func (*TenantInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{2}
}

func (x *TenantInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *TenantInfoIndexReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TenantInfoIndexReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type TenantInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*TenantInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *TenantInfoIndexResp) Reset() {
	*x = TenantInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantInfoIndexResp) ProtoMessage() {}

func (x *TenantInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantInfoIndexResp.ProtoReflect.Descriptor instead.
func (*TenantInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{3}
}

func (x *TenantInfoIndexResp) GetList() []*TenantInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *TenantInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type TenantAppCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string             `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	AppCode string             `protobuf:"bytes,2,opt,name=appCode,proto3" json:"appCode,omitempty"`
	Modules []*TenantAppModule `protobuf:"bytes,3,rep,name=modules,proto3" json:"modules,omitempty"` //模块列表
}

func (x *TenantAppCreateReq) Reset() {
	*x = TenantAppCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantAppCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantAppCreateReq) ProtoMessage() {}

func (x *TenantAppCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantAppCreateReq.ProtoReflect.Descriptor instead.
func (*TenantAppCreateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{4}
}

func (x *TenantAppCreateReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TenantAppCreateReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *TenantAppCreateReq) GetModules() []*TenantAppModule {
	if x != nil {
		return x.Modules
	}
	return nil
}

type TenantAppWithIDOrCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	AppCode string `protobuf:"bytes,2,opt,name=appCode,proto3" json:"appCode,omitempty"`
	Id      int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TenantAppWithIDOrCode) Reset() {
	*x = TenantAppWithIDOrCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantAppWithIDOrCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantAppWithIDOrCode) ProtoMessage() {}

func (x *TenantAppWithIDOrCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantAppWithIDOrCode.ProtoReflect.Descriptor instead.
func (*TenantAppWithIDOrCode) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{5}
}

func (x *TenantAppWithIDOrCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TenantAppWithIDOrCode) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *TenantAppWithIDOrCode) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TenantAppModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	MenuIDs []int64 `protobuf:"varint,2,rep,packed,name=menuIDs,proto3" json:"menuIDs,omitempty"`
	ApiIDs  []int64 `protobuf:"varint,3,rep,packed,name=apiIDs,proto3" json:"apiIDs,omitempty"`
}

func (x *TenantAppModule) Reset() {
	*x = TenantAppModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantAppModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantAppModule) ProtoMessage() {}

func (x *TenantAppModule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantAppModule.ProtoReflect.Descriptor instead.
func (*TenantAppModule) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{6}
}

func (x *TenantAppModule) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TenantAppModule) GetMenuIDs() []int64 {
	if x != nil {
		return x.MenuIDs
	}
	return nil
}

func (x *TenantAppModule) GetApiIDs() []int64 {
	if x != nil {
		return x.ApiIDs
	}
	return nil
}

type TenantAppIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"` //分页信息
	Code     string    `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	AppCodes []string  `protobuf:"bytes,3,rep,name=appCodes,proto3" json:"appCodes,omitempty"`
}

func (x *TenantAppIndexReq) Reset() {
	*x = TenantAppIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantAppIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantAppIndexReq) ProtoMessage() {}

func (x *TenantAppIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantAppIndexReq.ProtoReflect.Descriptor instead.
func (*TenantAppIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{7}
}

func (x *TenantAppIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *TenantAppIndexReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TenantAppIndexReq) GetAppCodes() []string {
	if x != nil {
		return x.AppCodes
	}
	return nil
}

type TenantAppIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64      `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*AppInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"` //app列表数据
}

func (x *TenantAppIndexResp) Reset() {
	*x = TenantAppIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantAppIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantAppIndexResp) ProtoMessage() {}

func (x *TenantAppIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantAppIndexResp.ProtoReflect.Descriptor instead.
func (*TenantAppIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{8}
}

func (x *TenantAppIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TenantAppIndexResp) GetList() []*AppInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type TenantAppMultiUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	AppCodes []string `protobuf:"bytes,3,rep,name=appCodes,proto3" json:"appCodes,omitempty"`
}

func (x *TenantAppMultiUpdateReq) Reset() {
	*x = TenantAppMultiUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantAppMultiUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantAppMultiUpdateReq) ProtoMessage() {}

func (x *TenantAppMultiUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantAppMultiUpdateReq.ProtoReflect.Descriptor instead.
func (*TenantAppMultiUpdateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{9}
}

func (x *TenantAppMultiUpdateReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TenantAppMultiUpdateReq) GetAppCodes() []string {
	if x != nil {
		return x.AppCodes
	}
	return nil
}

type TenantModuleIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"` //分页信息
	Code        string    `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	AppCode     string    `protobuf:"bytes,3,opt,name=appCode,proto3" json:"appCode,omitempty"`
	ModuleCodes []string  `protobuf:"bytes,4,rep,name=moduleCodes,proto3" json:"moduleCodes,omitempty"`
}

func (x *TenantModuleIndexReq) Reset() {
	*x = TenantModuleIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantModuleIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantModuleIndexReq) ProtoMessage() {}

func (x *TenantModuleIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantModuleIndexReq.ProtoReflect.Descriptor instead.
func (*TenantModuleIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{10}
}

func (x *TenantModuleIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *TenantModuleIndexReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TenantModuleIndexReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *TenantModuleIndexReq) GetModuleCodes() []string {
	if x != nil {
		return x.ModuleCodes
	}
	return nil
}

type TenantModuleIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ModuleInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *TenantModuleIndexResp) Reset() {
	*x = TenantModuleIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantModuleIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantModuleIndexResp) ProtoMessage() {}

func (x *TenantModuleIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantModuleIndexResp.ProtoReflect.Descriptor instead.
func (*TenantModuleIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{11}
}

func (x *TenantModuleIndexResp) GetList() []*ModuleInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type TenantAppMenuIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"` //分页信息
	Code       string    `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	AppCode    string    `protobuf:"bytes,3,opt,name=appCode,proto3" json:"appCode,omitempty"`
	ModuleCode string    `protobuf:"bytes,4,opt,name=moduleCode,proto3" json:"moduleCode,omitempty"`
	IsRetTree  bool      `protobuf:"varint,5,opt,name=isRetTree,proto3" json:"isRetTree,omitempty"`
	MenuIDs    []int64   `protobuf:"varint,6,rep,packed,name=menuIDs,proto3" json:"menuIDs,omitempty"`
}

func (x *TenantAppMenuIndexReq) Reset() {
	*x = TenantAppMenuIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantAppMenuIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantAppMenuIndexReq) ProtoMessage() {}

func (x *TenantAppMenuIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantAppMenuIndexReq.ProtoReflect.Descriptor instead.
func (*TenantAppMenuIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{12}
}

func (x *TenantAppMenuIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *TenantAppMenuIndexReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TenantAppMenuIndexReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *TenantAppMenuIndexReq) GetModuleCode() string {
	if x != nil {
		return x.ModuleCode
	}
	return ""
}

func (x *TenantAppMenuIndexReq) GetIsRetTree() bool {
	if x != nil {
		return x.IsRetTree
	}
	return false
}

func (x *TenantAppMenuIndexReq) GetMenuIDs() []int64 {
	if x != nil {
		return x.MenuIDs
	}
	return nil
}

type TenantAppMenuIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*TenantAppMenu `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *TenantAppMenuIndexResp) Reset() {
	*x = TenantAppMenuIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantAppMenuIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantAppMenuIndexResp) ProtoMessage() {}

func (x *TenantAppMenuIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantAppMenuIndexResp.ProtoReflect.Descriptor instead.
func (*TenantAppMenuIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{13}
}

func (x *TenantAppMenuIndexResp) GetList() []*TenantAppMenu {
	if x != nil {
		return x.List
	}
	return nil
}

type TenantAppMenu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateID int64            `protobuf:"varint,1,opt,name=templateID,proto3" json:"templateID,omitempty"`
	Code       string           `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	AppCode    string           `protobuf:"bytes,3,opt,name=appCode,proto3" json:"appCode,omitempty"`
	Info       *MenuInfo        `protobuf:"bytes,4,opt,name=info,proto3" json:"info,omitempty"`
	Children   []*TenantAppMenu `protobuf:"bytes,5,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *TenantAppMenu) Reset() {
	*x = TenantAppMenu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantAppMenu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantAppMenu) ProtoMessage() {}

func (x *TenantAppMenu) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantAppMenu.ProtoReflect.Descriptor instead.
func (*TenantAppMenu) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{14}
}

func (x *TenantAppMenu) GetTemplateID() int64 {
	if x != nil {
		return x.TemplateID
	}
	return 0
}

func (x *TenantAppMenu) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TenantAppMenu) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *TenantAppMenu) GetInfo() *MenuInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *TenantAppMenu) GetChildren() []*TenantAppMenu {
	if x != nil {
		return x.Children
	}
	return nil
}

type TenantApiInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateID int64    `protobuf:"varint,1,opt,name=templateID,proto3" json:"templateID,omitempty"`
	Code       string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	AppCode    string   `protobuf:"bytes,3,opt,name=appCode,proto3" json:"appCode,omitempty"`
	Info       *ApiInfo `protobuf:"bytes,4,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *TenantApiInfo) Reset() {
	*x = TenantApiInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantApiInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantApiInfo) ProtoMessage() {}

func (x *TenantApiInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantApiInfo.ProtoReflect.Descriptor instead.
func (*TenantApiInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{15}
}

func (x *TenantApiInfo) GetTemplateID() int64 {
	if x != nil {
		return x.TemplateID
	}
	return 0
}

func (x *TenantApiInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TenantApiInfo) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *TenantApiInfo) GetInfo() *ApiInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type TenantAppApiIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"` //分页信息
	Code       string    `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	AppCode    string    `protobuf:"bytes,3,opt,name=appCode,proto3" json:"appCode,omitempty"`
	ModuleCode string    `protobuf:"bytes,4,opt,name=moduleCode,proto3" json:"moduleCode,omitempty"`
	ApiIDs     []int64   `protobuf:"varint,5,rep,packed,name=apiIDs,proto3" json:"apiIDs,omitempty"`
}

func (x *TenantAppApiIndexReq) Reset() {
	*x = TenantAppApiIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantAppApiIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantAppApiIndexReq) ProtoMessage() {}

func (x *TenantAppApiIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantAppApiIndexReq.ProtoReflect.Descriptor instead.
func (*TenantAppApiIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{16}
}

func (x *TenantAppApiIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *TenantAppApiIndexReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TenantAppApiIndexReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *TenantAppApiIndexReq) GetModuleCode() string {
	if x != nil {
		return x.ModuleCode
	}
	return ""
}

func (x *TenantAppApiIndexReq) GetApiIDs() []int64 {
	if x != nil {
		return x.ApiIDs
	}
	return nil
}

type TenantAppApiIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*TenantApiInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`    // 接口列表数据
	Total int64            `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` // 接口列表总记录数
}

func (x *TenantAppApiIndexResp) Reset() {
	*x = TenantAppApiIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantAppApiIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantAppApiIndexResp) ProtoMessage() {}

func (x *TenantAppApiIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantAppApiIndexResp.ProtoReflect.Descriptor instead.
func (*TenantAppApiIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{17}
}

func (x *TenantAppApiIndexResp) GetList() []*TenantApiInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *TenantAppApiIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type TenantModuleCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	AppCode    string  `protobuf:"bytes,2,opt,name=appCode,proto3" json:"appCode,omitempty"`
	ModuleCode string  `protobuf:"bytes,3,opt,name=moduleCode,proto3" json:"moduleCode,omitempty"`
	MenuIDs    []int64 `protobuf:"varint,4,rep,packed,name=menuIDs,proto3" json:"menuIDs,omitempty"`
	ApiIDs     []int64 `protobuf:"varint,5,rep,packed,name=apiIDs,proto3" json:"apiIDs,omitempty"`
}

func (x *TenantModuleCreateReq) Reset() {
	*x = TenantModuleCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantModuleCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantModuleCreateReq) ProtoMessage() {}

func (x *TenantModuleCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantModuleCreateReq.ProtoReflect.Descriptor instead.
func (*TenantModuleCreateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{18}
}

func (x *TenantModuleCreateReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TenantModuleCreateReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *TenantModuleCreateReq) GetModuleCode() string {
	if x != nil {
		return x.ModuleCode
	}
	return ""
}

func (x *TenantModuleCreateReq) GetMenuIDs() []int64 {
	if x != nil {
		return x.MenuIDs
	}
	return nil
}

func (x *TenantModuleCreateReq) GetApiIDs() []int64 {
	if x != nil {
		return x.ApiIDs
	}
	return nil
}

type TenantModuleWithIDOrCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	AppCode    string `protobuf:"bytes,2,opt,name=appCode,proto3" json:"appCode,omitempty"`
	ModuleCode string `protobuf:"bytes,3,opt,name=moduleCode,proto3" json:"moduleCode,omitempty"`
	Id         int64  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TenantModuleWithIDOrCode) Reset() {
	*x = TenantModuleWithIDOrCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantModuleWithIDOrCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantModuleWithIDOrCode) ProtoMessage() {}

func (x *TenantModuleWithIDOrCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantModuleWithIDOrCode.ProtoReflect.Descriptor instead.
func (*TenantModuleWithIDOrCode) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{19}
}

func (x *TenantModuleWithIDOrCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TenantModuleWithIDOrCode) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *TenantModuleWithIDOrCode) GetModuleCode() string {
	if x != nil {
		return x.ModuleCode
	}
	return ""
}

func (x *TenantModuleWithIDOrCode) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Longitude float64 `protobuf:"fixed64,1,opt,name=longitude,proto3" json:"longitude,omitempty"` //经度
	Latitude  float64 `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`   //纬度
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{20}
}

func (x *Point) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Point) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{21}
}

type PageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	// 排序信息
	Orders []*PageInfo_OrderBy `protobuf:"bytes,3,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *PageInfo) Reset() {
	*x = PageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfo) ProtoMessage() {}

func (x *PageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfo.ProtoReflect.Descriptor instead.
func (*PageInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{22}
}

func (x *PageInfo) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PageInfo) GetOrders() []*PageInfo_OrderBy {
	if x != nil {
		return x.Orders
	}
	return nil
}

type WithID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *WithID) Reset() {
	*x = WithID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithID) ProtoMessage() {}

func (x *WithID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithID.ProtoReflect.Descriptor instead.
func (*WithID) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{23}
}

func (x *WithID) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type WithIDCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *WithIDCode) Reset() {
	*x = WithIDCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithIDCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithIDCode) ProtoMessage() {}

func (x *WithIDCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithIDCode.ProtoReflect.Descriptor instead.
func (*WithIDCode) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{24}
}

func (x *WithIDCode) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WithIDCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type WithAppCodeID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AppCode string `protobuf:"bytes,2,opt,name=appCode,proto3" json:"appCode,omitempty"`
	Code    string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"` //租户code
}

func (x *WithAppCodeID) Reset() {
	*x = WithAppCodeID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithAppCodeID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithAppCodeID) ProtoMessage() {}

func (x *WithAppCodeID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithAppCodeID.ProtoReflect.Descriptor instead.
func (*WithAppCodeID) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{25}
}

func (x *WithAppCodeID) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WithAppCodeID) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *WithAppCodeID) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type ProjectWithID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID int64 `protobuf:"varint,1,opt,name=projectID,proto3" json:"projectID,omitempty"` //项目id（只读）
}

func (x *ProjectWithID) Reset() {
	*x = ProjectWithID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectWithID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectWithID) ProtoMessage() {}

func (x *ProjectWithID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectWithID.ProtoReflect.Descriptor instead.
func (*ProjectWithID) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{26}
}

func (x *ProjectWithID) GetProjectID() int64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

type ProjectInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedTime int64  `protobuf:"varint,1,opt,name=createdTime,proto3" json:"createdTime,omitempty"` //创建时间（只读）
	ProjectID   int64  `protobuf:"varint,2,opt,name=projectID,proto3" json:"projectID,omitempty"`     //项目id（只读）
	ProjectName string `protobuf:"bytes,3,opt,name=projectName,proto3" json:"projectName,omitempty"`  //项目名称（读写）
	AdminUserID int64  `protobuf:"varint,5,opt,name=adminUserID,proto3" json:"adminUserID,omitempty"` //管理员
	// google.protobuf.StringValue region = 6; //项目省市区县（读写）
	// google.protobuf.StringValue address = 7; //项目详细地址（读写）
	Desc *wrapperspb.StringValue `protobuf:"bytes,8,opt,name=desc,proto3" json:"desc,omitempty"` //项目备注（读写）
}

func (x *ProjectInfo) Reset() {
	*x = ProjectInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectInfo) ProtoMessage() {}

func (x *ProjectInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectInfo.ProtoReflect.Descriptor instead.
func (*ProjectInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{27}
}

func (x *ProjectInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *ProjectInfo) GetProjectID() int64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

func (x *ProjectInfo) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *ProjectInfo) GetAdminUserID() int64 {
	if x != nil {
		return x.AdminUserID
	}
	return 0
}

func (x *ProjectInfo) GetDesc() *wrapperspb.StringValue {
	if x != nil {
		return x.Desc
	}
	return nil
}

type ProjectInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`                     //进行数据分页（不传默认2000相当于全部）
	ProjectName string    `protobuf:"bytes,2,opt,name=projectName,proto3" json:"projectName,omitempty"`       //过滤条件: 项目名称
	ProjectIDs  []int64   `protobuf:"varint,3,rep,packed,name=projectIDs,proto3" json:"projectIDs,omitempty"` //过滤条件: 过滤项目id列表
}

func (x *ProjectInfoIndexReq) Reset() {
	*x = ProjectInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectInfoIndexReq) ProtoMessage() {}

func (x *ProjectInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectInfoIndexReq.ProtoReflect.Descriptor instead.
func (*ProjectInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{28}
}

func (x *ProjectInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ProjectInfoIndexReq) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *ProjectInfoIndexReq) GetProjectIDs() []int64 {
	if x != nil {
		return x.ProjectIDs
	}
	return nil
}

type ProjectInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` //总数
	List  []*ProjectInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    //项目列表
}

func (x *ProjectInfoIndexResp) Reset() {
	*x = ProjectInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectInfoIndexResp) ProtoMessage() {}

func (x *ProjectInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectInfoIndexResp.ProtoReflect.Descriptor instead.
func (*ProjectInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{29}
}

func (x *ProjectInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ProjectInfoIndexResp) GetList() []*ProjectInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type AreaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedTime  int64                   `protobuf:"varint,1,opt,name=createdTime,proto3" json:"createdTime,omitempty"`   //创建时间（只读）
	AreaID       int64                   `protobuf:"varint,2,opt,name=areaID,proto3" json:"areaID,omitempty"`             //项目区域id（只读）
	ParentAreaID int64                   `protobuf:"varint,3,opt,name=parentAreaID,proto3" json:"parentAreaID,omitempty"` //上级项目区域id（只读）
	ProjectID    int64                   `protobuf:"varint,4,opt,name=projectID,proto3" json:"projectID,omitempty"`       //项目id（只读）
	AreaName     string                  `protobuf:"bytes,5,opt,name=areaName,proto3" json:"areaName,omitempty"`          //项目区域名称（读写）
	Position     *Point                  `protobuf:"bytes,6,opt,name=Position,proto3" json:"Position,omitempty"`          //项目区域定位，默认百度坐标系（读写）
	Desc         *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc,omitempty"`                  //项目区域备注（读写）
	Children     []*AreaInfo             `protobuf:"bytes,8,rep,name=children,proto3" json:"children,omitempty"`          //下级项目区域列表（只读）
}

func (x *AreaInfo) Reset() {
	*x = AreaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaInfo) ProtoMessage() {}

func (x *AreaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaInfo.ProtoReflect.Descriptor instead.
func (*AreaInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{30}
}

func (x *AreaInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *AreaInfo) GetAreaID() int64 {
	if x != nil {
		return x.AreaID
	}
	return 0
}

func (x *AreaInfo) GetParentAreaID() int64 {
	if x != nil {
		return x.ParentAreaID
	}
	return 0
}

func (x *AreaInfo) GetProjectID() int64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

func (x *AreaInfo) GetAreaName() string {
	if x != nil {
		return x.AreaName
	}
	return ""
}

func (x *AreaInfo) GetPosition() *Point {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *AreaInfo) GetDesc() *wrapperspb.StringValue {
	if x != nil {
		return x.Desc
	}
	return nil
}

func (x *AreaInfo) GetChildren() []*AreaInfo {
	if x != nil {
		return x.Children
	}
	return nil
}

type AreaWithID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreaID int64 `protobuf:"varint,1,opt,name=areaID,proto3" json:"areaID,omitempty"` //项目区域id
}

func (x *AreaWithID) Reset() {
	*x = AreaWithID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaWithID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaWithID) ProtoMessage() {}

func (x *AreaWithID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaWithID.ProtoReflect.Descriptor instead.
func (*AreaWithID) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{31}
}

func (x *AreaWithID) GetAreaID() int64 {
	if x != nil {
		return x.AreaID
	}
	return 0
}

type AreaInfoReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID int64 `protobuf:"varint,1,opt,name=projectID,proto3" json:"projectID,omitempty"` //项目ids
	AreaID    int64 `protobuf:"varint,2,opt,name=areaID,proto3" json:"areaID,omitempty"`       //项目区域id
	IsRetTree bool  `protobuf:"varint,3,opt,name=isRetTree,proto3" json:"isRetTree,omitempty"` //是否返回子节点
}

func (x *AreaInfoReadReq) Reset() {
	*x = AreaInfoReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaInfoReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaInfoReadReq) ProtoMessage() {}

func (x *AreaInfoReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaInfoReadReq.ProtoReflect.Descriptor instead.
func (*AreaInfoReadReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{32}
}

func (x *AreaInfoReadReq) GetProjectID() int64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

func (x *AreaInfoReadReq) GetAreaID() int64 {
	if x != nil {
		return x.AreaID
	}
	return 0
}

func (x *AreaInfoReadReq) GetIsRetTree() bool {
	if x != nil {
		return x.IsRetTree
	}
	return false
}

type AreaInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page         *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`            //进行数据分页（不传默认2000相当于全部）
	ProjectID    int64     `protobuf:"varint,3,opt,name=projectID,proto3" json:"projectID,omitempty"` //项目ids
	ParentAreaID int64     `protobuf:"varint,4,opt,name=parentAreaID,proto3" json:"parentAreaID,omitempty"`
	AreaIDs      []int64   `protobuf:"varint,5,rep,packed,name=areaIDs,proto3" json:"areaIDs,omitempty"` //区域ids
}

func (x *AreaInfoIndexReq) Reset() {
	*x = AreaInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaInfoIndexReq) ProtoMessage() {}

func (x *AreaInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaInfoIndexReq.ProtoReflect.Descriptor instead.
func (*AreaInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{33}
}

func (x *AreaInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *AreaInfoIndexReq) GetProjectID() int64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

func (x *AreaInfoIndexReq) GetParentAreaID() int64 {
	if x != nil {
		return x.ParentAreaID
	}
	return 0
}

func (x *AreaInfoIndexReq) GetAreaIDs() []int64 {
	if x != nil {
		return x.AreaIDs
	}
	return nil
}

type AreaInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` //总数
	List  []*AreaInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    //项目区域列表
}

func (x *AreaInfoIndexResp) Reset() {
	*x = AreaInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaInfoIndexResp) ProtoMessage() {}

func (x *AreaInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaInfoIndexResp.ProtoReflect.Descriptor instead.
func (*AreaInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{34}
}

func (x *AreaInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AreaInfoIndexResp) GetList() []*AreaInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type AuthApiInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Route  string `protobuf:"bytes,1,opt,name=route,proto3" json:"route,omitempty"`
	Method string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"` //大写 http 方法
}

func (x *AuthApiInfo) Reset() {
	*x = AuthApiInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthApiInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthApiInfo) ProtoMessage() {}

func (x *AuthApiInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthApiInfo.ProtoReflect.Descriptor instead.
func (*AuthApiInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{35}
}

func (x *AuthApiInfo) GetRoute() string {
	if x != nil {
		return x.Route
	}
	return ""
}

func (x *AuthApiInfo) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type RoleApiMultiUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                //角色ID
	AppCode    string  `protobuf:"bytes,2,opt,name=appCode,proto3" json:"appCode,omitempty"`       //appCode
	ModuleCode string  `protobuf:"bytes,3,opt,name=moduleCode,proto3" json:"moduleCode,omitempty"` //模块编码
	ApiIDs     []int64 `protobuf:"varint,4,rep,packed,name=apiIDs,proto3" json:"apiIDs,omitempty"`
}

func (x *RoleApiMultiUpdateReq) Reset() {
	*x = RoleApiMultiUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleApiMultiUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleApiMultiUpdateReq) ProtoMessage() {}

func (x *RoleApiMultiUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleApiMultiUpdateReq.ProtoReflect.Descriptor instead.
func (*RoleApiMultiUpdateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{36}
}

func (x *RoleApiMultiUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleApiMultiUpdateReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *RoleApiMultiUpdateReq) GetModuleCode() string {
	if x != nil {
		return x.ModuleCode
	}
	return ""
}

func (x *RoleApiMultiUpdateReq) GetApiIDs() []int64 {
	if x != nil {
		return x.ApiIDs
	}
	return nil
}

type RoleApiIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                //角色ID
	AppCode    string `protobuf:"bytes,2,opt,name=appCode,proto3" json:"appCode,omitempty"`       //appCode
	ModuleCode string `protobuf:"bytes,3,opt,name=moduleCode,proto3" json:"moduleCode,omitempty"` //模块编码
}

func (x *RoleApiIndexReq) Reset() {
	*x = RoleApiIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleApiIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleApiIndexReq) ProtoMessage() {}

func (x *RoleApiIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleApiIndexReq.ProtoReflect.Descriptor instead.
func (*RoleApiIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{37}
}

func (x *RoleApiIndexReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleApiIndexReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *RoleApiIndexReq) GetModuleCode() string {
	if x != nil {
		return x.ModuleCode
	}
	return ""
}

type RoleApiIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total  int64   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	ApiIDs []int64 `protobuf:"varint,3,rep,packed,name=apiIDs,proto3" json:"apiIDs,omitempty"`
}

func (x *RoleApiIndexResp) Reset() {
	*x = RoleApiIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleApiIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleApiIndexResp) ProtoMessage() {}

func (x *RoleApiIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleApiIndexResp.ProtoReflect.Descriptor instead.
func (*RoleApiIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{38}
}

func (x *RoleApiIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RoleApiIndexResp) GetApiIDs() []int64 {
	if x != nil {
		return x.ApiIDs
	}
	return nil
}

type RoleMenuIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                //角色ID
	AppCode    string `protobuf:"bytes,2,opt,name=appCode,proto3" json:"appCode,omitempty"`       //appCode
	ModuleCode string `protobuf:"bytes,3,opt,name=moduleCode,proto3" json:"moduleCode,omitempty"` //模块编码
}

func (x *RoleMenuIndexReq) Reset() {
	*x = RoleMenuIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleMenuIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleMenuIndexReq) ProtoMessage() {}

func (x *RoleMenuIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleMenuIndexReq.ProtoReflect.Descriptor instead.
func (*RoleMenuIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{39}
}

func (x *RoleMenuIndexReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleMenuIndexReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *RoleMenuIndexReq) GetModuleCode() string {
	if x != nil {
		return x.ModuleCode
	}
	return ""
}

type RoleMenuIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total   int64   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	MenuIDs []int64 `protobuf:"varint,3,rep,packed,name=menuIDs,proto3" json:"menuIDs,omitempty"`
}

func (x *RoleMenuIndexResp) Reset() {
	*x = RoleMenuIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleMenuIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleMenuIndexResp) ProtoMessage() {}

func (x *RoleMenuIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleMenuIndexResp.ProtoReflect.Descriptor instead.
func (*RoleMenuIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{40}
}

func (x *RoleMenuIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RoleMenuIndexResp) GetMenuIDs() []int64 {
	if x != nil {
		return x.MenuIDs
	}
	return nil
}

type RoleAppIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //角色ID
}

func (x *RoleAppIndexReq) Reset() {
	*x = RoleAppIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAppIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAppIndexReq) ProtoMessage() {}

func (x *RoleAppIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAppIndexReq.ProtoReflect.Descriptor instead.
func (*RoleAppIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{41}
}

func (x *RoleAppIndexReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RoleAppIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    int64    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	AppCodes []string `protobuf:"bytes,3,rep,name=appCodes,proto3" json:"appCodes,omitempty"`
}

func (x *RoleAppIndexResp) Reset() {
	*x = RoleAppIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAppIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAppIndexResp) ProtoMessage() {}

func (x *RoleAppIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAppIndexResp.ProtoReflect.Descriptor instead.
func (*RoleAppIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{42}
}

func (x *RoleAppIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RoleAppIndexResp) GetAppCodes() []string {
	if x != nil {
		return x.AppCodes
	}
	return nil
}

type RoleModuleIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`          //角色ID
	AppCode string `protobuf:"bytes,2,opt,name=appCode,proto3" json:"appCode,omitempty"` //appCode
}

func (x *RoleModuleIndexReq) Reset() {
	*x = RoleModuleIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleModuleIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleModuleIndexReq) ProtoMessage() {}

func (x *RoleModuleIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleModuleIndexReq.ProtoReflect.Descriptor instead.
func (*RoleModuleIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{43}
}

func (x *RoleModuleIndexReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleModuleIndexReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

type RoleModuleIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total       int64    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	ModuleCodes []string `protobuf:"bytes,3,rep,name=moduleCodes,proto3" json:"moduleCodes,omitempty"`
}

func (x *RoleModuleIndexResp) Reset() {
	*x = RoleModuleIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleModuleIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleModuleIndexResp) ProtoMessage() {}

func (x *RoleModuleIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleModuleIndexResp.ProtoReflect.Descriptor instead.
func (*RoleModuleIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{44}
}

func (x *RoleModuleIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RoleModuleIndexResp) GetModuleCodes() []string {
	if x != nil {
		return x.ModuleCodes
	}
	return nil
}

type DateRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start string `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End   string `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *DateRange) Reset() {
	*x = DateRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DateRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateRange) ProtoMessage() {}

func (x *DateRange) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateRange.ProtoReflect.Descriptor instead.
func (*DateRange) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{45}
}

func (x *DateRange) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *DateRange) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

type LoginLogIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page          *PageInfo  `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`                   // 分页信息 只获取一个则不填
	AppCode       string     `protobuf:"bytes,2,opt,name=appCode,proto3" json:"appCode,omitempty"`             //应用编码
	IpAddr        string     `protobuf:"bytes,3,opt,name=ipAddr,proto3" json:"ipAddr,omitempty"`               // 登录IP地址
	LoginLocation string     `protobuf:"bytes,4,opt,name=loginLocation,proto3" json:"loginLocation,omitempty"` // 登录地点
	Date          *DateRange `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`                   // 时间范围
}

func (x *LoginLogIndexReq) Reset() {
	*x = LoginLogIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginLogIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginLogIndexReq) ProtoMessage() {}

func (x *LoginLogIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginLogIndexReq.ProtoReflect.Descriptor instead.
func (*LoginLogIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{46}
}

func (x *LoginLogIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *LoginLogIndexReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *LoginLogIndexReq) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *LoginLogIndexReq) GetLoginLocation() string {
	if x != nil {
		return x.LoginLocation
	}
	return ""
}

func (x *LoginLogIndexReq) GetDate() *DateRange {
	if x != nil {
		return x.Date
	}
	return nil
}

type LoginLogInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID        int64  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`              // 用户id
	UserName      string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`           // 登录账号
	IpAddr        string `protobuf:"bytes,3,opt,name=ipAddr,proto3" json:"ipAddr,omitempty"`               // 登录IP地址
	LoginLocation string `protobuf:"bytes,4,opt,name=loginLocation,proto3" json:"loginLocation,omitempty"` // 登录地点
	Browser       string `protobuf:"bytes,5,opt,name=browser,proto3" json:"browser,omitempty"`             // 浏览器
	Os            string `protobuf:"bytes,6,opt,name=os,proto3" json:"os,omitempty"`                       // 操作系统
	Code          int64  `protobuf:"varint,7,opt,name=code,proto3" json:"code,omitempty"`                  // 登录状态（200成功 其它失败）
	Msg           string `protobuf:"bytes,8,opt,name=msg,proto3" json:"msg,omitempty"`                     // 提示消息
	CreatedTime   int64  `protobuf:"varint,9,opt,name=createdTime,proto3" json:"createdTime,omitempty"`    // 登录时间
	AppCode       string `protobuf:"bytes,10,opt,name=appCode,proto3" json:"appCode,omitempty"`            //应用编码
}

func (x *LoginLogInfo) Reset() {
	*x = LoginLogInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginLogInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginLogInfo) ProtoMessage() {}

func (x *LoginLogInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginLogInfo.ProtoReflect.Descriptor instead.
func (*LoginLogInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{47}
}

func (x *LoginLogInfo) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *LoginLogInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *LoginLogInfo) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *LoginLogInfo) GetLoginLocation() string {
	if x != nil {
		return x.LoginLocation
	}
	return ""
}

func (x *LoginLogInfo) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

func (x *LoginLogInfo) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *LoginLogInfo) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LoginLogInfo) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *LoginLogInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *LoginLogInfo) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

type LoginLogIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*LoginLogInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总记录数
}

func (x *LoginLogIndexResp) Reset() {
	*x = LoginLogIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginLogIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginLogIndexResp) ProtoMessage() {}

func (x *LoginLogIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginLogIndexResp.ProtoReflect.Descriptor instead.
func (*LoginLogIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{48}
}

func (x *LoginLogIndexResp) GetList() []*LoginLogInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *LoginLogIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type OperLogIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page         *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`                  //分页信息 只获取一个则不填
	OperName     string    `protobuf:"bytes,2,opt,name=operName,proto3" json:"operName,omitempty"`          //按操作名称查找
	OperUserName string    `protobuf:"bytes,3,opt,name=operUserName,proto3" json:"operUserName,omitempty"`  //按操作人员名称查找
	BusinessType int64     `protobuf:"varint,4,opt,name=businessType,proto3" json:"businessType,omitempty"` //按业务类型（1新增 2修改 3删除 4查询）查找
	AppCode      string    `protobuf:"bytes,5,opt,name=appCode,proto3" json:"appCode,omitempty"`            //应用编码
}

func (x *OperLogIndexReq) Reset() {
	*x = OperLogIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperLogIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperLogIndexReq) ProtoMessage() {}

func (x *OperLogIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperLogIndexReq.ProtoReflect.Descriptor instead.
func (*OperLogIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{49}
}

func (x *OperLogIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *OperLogIndexReq) GetOperName() string {
	if x != nil {
		return x.OperName
	}
	return ""
}

func (x *OperLogIndexReq) GetOperUserName() string {
	if x != nil {
		return x.OperUserName
	}
	return ""
}

func (x *OperLogIndexReq) GetBusinessType() int64 {
	if x != nil {
		return x.BusinessType
	}
	return 0
}

func (x *OperLogIndexReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

type OperLogInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       int64  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`             //用户id
	OperUserName string `protobuf:"bytes,2,opt,name=operUserName,proto3" json:"operUserName,omitempty"`  //操作人员名称
	OperName     string `protobuf:"bytes,3,opt,name=operName,proto3" json:"operName,omitempty"`          //操作名称
	BusinessType int64  `protobuf:"varint,4,opt,name=businessType,proto3" json:"businessType,omitempty"` //业务类型（1新增 2修改 3删除 4查询）
	Uri          string `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`                    //请求地址
	OperIpAddr   string `protobuf:"bytes,6,opt,name=operIpAddr,proto3" json:"operIpAddr,omitempty"`      //操作主机地址
	OperLocation string `protobuf:"bytes,7,opt,name=operLocation,proto3" json:"operLocation,omitempty"`  //操作地点
	Req          string `protobuf:"bytes,8,opt,name=req,proto3" json:"req,omitempty"`                    //请求参数
	Resp         string `protobuf:"bytes,9,opt,name=resp,proto3" json:"resp,omitempty"`                  //返回参数
	Code         int64  `protobuf:"varint,10,opt,name=code,proto3" json:"code,omitempty"`                //登录状态（200成功 其它失败）
	Msg          string `protobuf:"bytes,11,opt,name=msg,proto3" json:"msg,omitempty"`                   //提示消息
	CreatedTime  int64  `protobuf:"varint,12,opt,name=createdTime,proto3" json:"createdTime,omitempty"`  //操作时间
	AppCode      string `protobuf:"bytes,13,opt,name=appCode,proto3" json:"appCode,omitempty"`           //应用编码
}

func (x *OperLogInfo) Reset() {
	*x = OperLogInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperLogInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperLogInfo) ProtoMessage() {}

func (x *OperLogInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperLogInfo.ProtoReflect.Descriptor instead.
func (*OperLogInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{50}
}

func (x *OperLogInfo) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *OperLogInfo) GetOperUserName() string {
	if x != nil {
		return x.OperUserName
	}
	return ""
}

func (x *OperLogInfo) GetOperName() string {
	if x != nil {
		return x.OperName
	}
	return ""
}

func (x *OperLogInfo) GetBusinessType() int64 {
	if x != nil {
		return x.BusinessType
	}
	return 0
}

func (x *OperLogInfo) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *OperLogInfo) GetOperIpAddr() string {
	if x != nil {
		return x.OperIpAddr
	}
	return ""
}

func (x *OperLogInfo) GetOperLocation() string {
	if x != nil {
		return x.OperLocation
	}
	return ""
}

func (x *OperLogInfo) GetReq() string {
	if x != nil {
		return x.Req
	}
	return ""
}

func (x *OperLogInfo) GetResp() string {
	if x != nil {
		return x.Resp
	}
	return ""
}

func (x *OperLogInfo) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OperLogInfo) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *OperLogInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *OperLogInfo) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

type OperLogIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*OperLogInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总记录数
}

func (x *OperLogIndexResp) Reset() {
	*x = OperLogIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperLogIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperLogIndexResp) ProtoMessage() {}

func (x *OperLogIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperLogIndexResp.ProtoReflect.Descriptor instead.
func (*OperLogIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{51}
}

func (x *OperLogIndexResp) GetList() []*OperLogInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *OperLogIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type LoginLogCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID        int64  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`              // 用户id
	UserName      string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`           // 登录账号
	IpAddr        string `protobuf:"bytes,3,opt,name=ipAddr,proto3" json:"ipAddr,omitempty"`               // 登录IP地址
	LoginLocation string `protobuf:"bytes,4,opt,name=loginLocation,proto3" json:"loginLocation,omitempty"` // 登录地点
	Browser       string `protobuf:"bytes,5,opt,name=browser,proto3" json:"browser,omitempty"`             // 浏览器
	Os            string `protobuf:"bytes,6,opt,name=os,proto3" json:"os,omitempty"`                       // 操作系统
	Code          int64  `protobuf:"varint,7,opt,name=code,proto3" json:"code,omitempty"`                  // 登录状态（200成功 其它失败）
	Msg           string `protobuf:"bytes,8,opt,name=msg,proto3" json:"msg,omitempty"`                     // 提示消息
	AppCode       string `protobuf:"bytes,9,opt,name=appCode,proto3" json:"appCode,omitempty"`             //应用编码
}

func (x *LoginLogCreateReq) Reset() {
	*x = LoginLogCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginLogCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginLogCreateReq) ProtoMessage() {}

func (x *LoginLogCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginLogCreateReq.ProtoReflect.Descriptor instead.
func (*LoginLogCreateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{52}
}

func (x *LoginLogCreateReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *LoginLogCreateReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *LoginLogCreateReq) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *LoginLogCreateReq) GetLoginLocation() string {
	if x != nil {
		return x.LoginLocation
	}
	return ""
}

func (x *LoginLogCreateReq) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

func (x *LoginLogCreateReq) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *LoginLogCreateReq) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LoginLogCreateReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *LoginLogCreateReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

type OperLogCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       int64  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`             //用户id
	OperUserName string `protobuf:"bytes,2,opt,name=operUserName,proto3" json:"operUserName,omitempty"`  //操作人员名称
	OperName     string `protobuf:"bytes,3,opt,name=operName,proto3" json:"operName,omitempty"`          //操作名称
	BusinessType int64  `protobuf:"varint,4,opt,name=businessType,proto3" json:"businessType,omitempty"` //业务类型（1新增 2修改 3删除 4查询）
	Uri          string `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`                    //请求地址
	Route        string `protobuf:"bytes,6,opt,name=route,proto3" json:"route,omitempty"`                //接口路由
	OperIpAddr   string `protobuf:"bytes,7,opt,name=operIpAddr,proto3" json:"operIpAddr,omitempty"`      //操作主机地址
	OperLocation string `protobuf:"bytes,8,opt,name=operLocation,proto3" json:"operLocation,omitempty"`  //操作地点
	Req          string `protobuf:"bytes,9,opt,name=req,proto3" json:"req,omitempty"`                    //请求参数
	Resp         string `protobuf:"bytes,10,opt,name=resp,proto3" json:"resp,omitempty"`                 //返回参数
	Code         int64  `protobuf:"varint,11,opt,name=code,proto3" json:"code,omitempty"`                //返回状态（200成功 其它失败）
	Msg          string `protobuf:"bytes,12,opt,name=msg,proto3" json:"msg,omitempty"`                   //提示消息
	AppCode      string `protobuf:"bytes,13,opt,name=appCode,proto3" json:"appCode,omitempty"`           //应用编码
}

func (x *OperLogCreateReq) Reset() {
	*x = OperLogCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperLogCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperLogCreateReq) ProtoMessage() {}

func (x *OperLogCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperLogCreateReq.ProtoReflect.Descriptor instead.
func (*OperLogCreateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{53}
}

func (x *OperLogCreateReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *OperLogCreateReq) GetOperUserName() string {
	if x != nil {
		return x.OperUserName
	}
	return ""
}

func (x *OperLogCreateReq) GetOperName() string {
	if x != nil {
		return x.OperName
	}
	return ""
}

func (x *OperLogCreateReq) GetBusinessType() int64 {
	if x != nil {
		return x.BusinessType
	}
	return 0
}

func (x *OperLogCreateReq) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *OperLogCreateReq) GetRoute() string {
	if x != nil {
		return x.Route
	}
	return ""
}

func (x *OperLogCreateReq) GetOperIpAddr() string {
	if x != nil {
		return x.OperIpAddr
	}
	return ""
}

func (x *OperLogCreateReq) GetOperLocation() string {
	if x != nil {
		return x.OperLocation
	}
	return ""
}

func (x *OperLogCreateReq) GetReq() string {
	if x != nil {
		return x.Req
	}
	return ""
}

func (x *OperLogCreateReq) GetResp() string {
	if x != nil {
		return x.Resp
	}
	return ""
}

func (x *OperLogCreateReq) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OperLogCreateReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *OperLogCreateReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

// 用户属性信息
type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID          int64  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	UserName        string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	Password        string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Email           string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Phone           string `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	WechatUnionID   string `protobuf:"bytes,6,opt,name=wechatUnionID,proto3" json:"wechatUnionID,omitempty"`
	LastIP          string `protobuf:"bytes,7,opt,name=lastIP,proto3" json:"lastIP,omitempty"`
	RegIP           string `protobuf:"bytes,8,opt,name=regIP,proto3" json:"regIP,omitempty"`
	NickName        string `protobuf:"bytes,9,opt,name=nickName,proto3" json:"nickName,omitempty"`
	City            string `protobuf:"bytes,10,opt,name=city,proto3" json:"city,omitempty"`
	Country         string `protobuf:"bytes,11,opt,name=country,proto3" json:"country,omitempty"`
	Province        string `protobuf:"bytes,12,opt,name=province,proto3" json:"province,omitempty"`
	Language        string `protobuf:"bytes,13,opt,name=language,proto3" json:"language,omitempty"`
	CreatedTime     int64  `protobuf:"varint,15,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	Role            int64  `protobuf:"varint,16,opt,name=role,proto3" json:"role,omitempty"`
	Sex             int64  `protobuf:"varint,17,opt,name=sex,proto3" json:"sex,omitempty"`
	IsAllData       int64  `protobuf:"varint,18,opt,name=isAllData,proto3" json:"isAllData,omitempty"`
	HeadImg         string `protobuf:"bytes,19,opt,name=headImg,proto3" json:"headImg,omitempty"`
	IsUpdateHeadImg int64  `protobuf:"varint,20,opt,name=isUpdateHeadImg,proto3" json:"isUpdateHeadImg,omitempty"` //只有这个参数为true的时候才会更新图片,传参为图片的file path
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{54}
}

func (x *UserInfo) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UserInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserInfo) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserInfo) GetWechatUnionID() string {
	if x != nil {
		return x.WechatUnionID
	}
	return ""
}

func (x *UserInfo) GetLastIP() string {
	if x != nil {
		return x.LastIP
	}
	return ""
}

func (x *UserInfo) GetRegIP() string {
	if x != nil {
		return x.RegIP
	}
	return ""
}

func (x *UserInfo) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UserInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UserInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UserInfo) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *UserInfo) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *UserInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *UserInfo) GetRole() int64 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *UserInfo) GetSex() int64 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *UserInfo) GetIsAllData() int64 {
	if x != nil {
		return x.IsAllData
	}
	return 0
}

func (x *UserInfo) GetHeadImg() string {
	if x != nil {
		return x.HeadImg
	}
	return ""
}

func (x *UserInfo) GetIsUpdateHeadImg() int64 {
	if x != nil {
		return x.IsUpdateHeadImg
	}
	return 0
}

type UserCreateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"` //用户id
}

func (x *UserCreateResp) Reset() {
	*x = UserCreateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCreateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCreateResp) ProtoMessage() {}

func (x *UserCreateResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCreateResp.ProtoReflect.Descriptor instead.
func (*UserCreateResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{55}
}

func (x *UserCreateResp) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type UserCheckTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token   string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Ip      string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	AppCode string `protobuf:"bytes,3,opt,name=appCode,proto3" json:"appCode,omitempty"`
}

func (x *UserCheckTokenReq) Reset() {
	*x = UserCheckTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCheckTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCheckTokenReq) ProtoMessage() {}

func (x *UserCheckTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCheckTokenReq.ProtoReflect.Descriptor instead.
func (*UserCheckTokenReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{56}
}

func (x *UserCheckTokenReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UserCheckTokenReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *UserCheckTokenReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

type UserCheckTokenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token      string  `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //如果时间不多会更新jwt，需要判断jwt是否为“” 如果不为空，则需要更新用户的token
	UserID     int64   `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	RoleIDs    []int64 `protobuf:"varint,3,rep,packed,name=roleIDs,proto3" json:"roleIDs,omitempty"`
	IsAllData  int64   `protobuf:"varint,4,opt,name=isAllData,proto3" json:"isAllData,omitempty"`
	TenantCode string  `protobuf:"bytes,5,opt,name=tenantCode,proto3" json:"tenantCode,omitempty"` //租户编码
	IsAdmin    int64   `protobuf:"varint,6,opt,name=isAdmin,proto3" json:"isAdmin,omitempty"`      //是否是超级管理员
	UserName   string  `protobuf:"bytes,7,opt,name=userName,proto3" json:"userName,omitempty"`     //用户名
}

func (x *UserCheckTokenResp) Reset() {
	*x = UserCheckTokenResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCheckTokenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCheckTokenResp) ProtoMessage() {}

func (x *UserCheckTokenResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCheckTokenResp.ProtoReflect.Descriptor instead.
func (*UserCheckTokenResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{57}
}

func (x *UserCheckTokenResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UserCheckTokenResp) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UserCheckTokenResp) GetRoleIDs() []int64 {
	if x != nil {
		return x.RoleIDs
	}
	return nil
}

func (x *UserCheckTokenResp) GetIsAllData() int64 {
	if x != nil {
		return x.IsAllData
	}
	return 0
}

func (x *UserCheckTokenResp) GetTenantCode() string {
	if x != nil {
		return x.TenantCode
	}
	return ""
}

func (x *UserCheckTokenResp) GetIsAdmin() int64 {
	if x != nil {
		return x.IsAdmin
	}
	return 0
}

func (x *UserCheckTokenResp) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type RoleAppMultiUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AppCodes []string `protobuf:"bytes,3,rep,name=appCodes,proto3" json:"appCodes,omitempty"`
}

func (x *RoleAppMultiUpdateReq) Reset() {
	*x = RoleAppMultiUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAppMultiUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAppMultiUpdateReq) ProtoMessage() {}

func (x *RoleAppMultiUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAppMultiUpdateReq.ProtoReflect.Descriptor instead.
func (*RoleAppMultiUpdateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{58}
}

func (x *RoleAppMultiUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleAppMultiUpdateReq) GetAppCodes() []string {
	if x != nil {
		return x.AppCodes
	}
	return nil
}

type RoleModuleMultiUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AppCode     string   `protobuf:"bytes,2,opt,name=appCode,proto3" json:"appCode,omitempty"`
	ModuleCodes []string `protobuf:"bytes,3,rep,name=moduleCodes,proto3" json:"moduleCodes,omitempty"`
}

func (x *RoleModuleMultiUpdateReq) Reset() {
	*x = RoleModuleMultiUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleModuleMultiUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleModuleMultiUpdateReq) ProtoMessage() {}

func (x *RoleModuleMultiUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleModuleMultiUpdateReq.ProtoReflect.Descriptor instead.
func (*RoleModuleMultiUpdateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{59}
}

func (x *RoleModuleMultiUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleModuleMultiUpdateReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *RoleModuleMultiUpdateReq) GetModuleCodes() []string {
	if x != nil {
		return x.ModuleCodes
	}
	return nil
}

type RoleMenuMultiUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AppCode    string  `protobuf:"bytes,2,opt,name=appCode,proto3" json:"appCode,omitempty"`
	ModuleCode string  `protobuf:"bytes,3,opt,name=moduleCode,proto3" json:"moduleCode,omitempty"` //模块编码
	MenuIDs    []int64 `protobuf:"varint,4,rep,packed,name=menuIDs,proto3" json:"menuIDs,omitempty"`
}

func (x *RoleMenuMultiUpdateReq) Reset() {
	*x = RoleMenuMultiUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleMenuMultiUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleMenuMultiUpdateReq) ProtoMessage() {}

func (x *RoleMenuMultiUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleMenuMultiUpdateReq.ProtoReflect.Descriptor instead.
func (*RoleMenuMultiUpdateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{60}
}

func (x *RoleMenuMultiUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleMenuMultiUpdateReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *RoleMenuMultiUpdateReq) GetModuleCode() string {
	if x != nil {
		return x.ModuleCode
	}
	return ""
}

func (x *RoleMenuMultiUpdateReq) GetMenuIDs() []int64 {
	if x != nil {
		return x.MenuIDs
	}
	return nil
}

type RoleApiAuthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleID int64  `protobuf:"varint,1,opt,name=roleID,proto3" json:"roleID,omitempty"`
	Path   string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Method string `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
}

func (x *RoleApiAuthReq) Reset() {
	*x = RoleApiAuthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleApiAuthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleApiAuthReq) ProtoMessage() {}

func (x *RoleApiAuthReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleApiAuthReq.ProtoReflect.Descriptor instead.
func (*RoleApiAuthReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{61}
}

func (x *RoleApiAuthReq) GetRoleID() int64 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

func (x *RoleApiAuthReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RoleApiAuthReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type UserInfoCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info    *UserInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	RoleIDs []int64   `protobuf:"varint,2,rep,packed,name=roleIDs,proto3" json:"roleIDs,omitempty"`
}

func (x *UserInfoCreateReq) Reset() {
	*x = UserInfoCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoCreateReq) ProtoMessage() {}

func (x *UserInfoCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoCreateReq.ProtoReflect.Descriptor instead.
func (*UserInfoCreateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{62}
}

func (x *UserInfoCreateReq) GetInfo() *UserInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *UserInfoCreateReq) GetRoleIDs() []int64 {
	if x != nil {
		return x.RoleIDs
	}
	return nil
}

type UserInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"` //分页信息 只获取一个则不填 搜索的字段: userID:用户id userName:登录用户名  email:邮箱  phone:手机号
	UserName string    `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	Phone    string    `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Email    string    `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *UserInfoIndexReq) Reset() {
	*x = UserInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoIndexReq) ProtoMessage() {}

func (x *UserInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoIndexReq.ProtoReflect.Descriptor instead.
func (*UserInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{63}
}

func (x *UserInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *UserInfoIndexReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserInfoIndexReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserInfoIndexReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type UserInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*UserInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *UserInfoIndexResp) Reset() {
	*x = UserInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoIndexResp) ProtoMessage() {}

func (x *UserInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoIndexResp.ProtoReflect.Descriptor instead.
func (*UserInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{64}
}

func (x *UserInfoIndexResp) GetList() []*UserInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *UserInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type UserInfoReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *UserInfoReadReq) Reset() {
	*x = UserInfoReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoReadReq) ProtoMessage() {}

func (x *UserInfoReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoReadReq.ProtoReflect.Descriptor instead.
func (*UserInfoReadReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{65}
}

func (x *UserInfoReadReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type UserInfoDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *UserInfoDeleteReq) Reset() {
	*x = UserInfoDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoDeleteReq) ProtoMessage() {}

func (x *UserInfoDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoDeleteReq.ProtoReflect.Descriptor instead.
func (*UserInfoDeleteReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{66}
}

func (x *UserInfoDeleteReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type JwtToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	AccessExpire int64  `protobuf:"varint,2,opt,name=accessExpire,proto3" json:"accessExpire,omitempty"`
	RefreshAfter int64  `protobuf:"varint,3,opt,name=refreshAfter,proto3" json:"refreshAfter,omitempty"`
}

func (x *JwtToken) Reset() {
	*x = JwtToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JwtToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JwtToken) ProtoMessage() {}

func (x *JwtToken) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JwtToken.ProtoReflect.Descriptor instead.
func (*JwtToken) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{67}
}

func (x *JwtToken) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *JwtToken) GetAccessExpire() int64 {
	if x != nil {
		return x.AccessExpire
	}
	return 0
}

func (x *JwtToken) GetRefreshAfter() int64 {
	if x != nil {
		return x.RefreshAfter
	}
	return 0
}

type UserCaptchaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"` //短信验证时填写手机号,邮箱验证时填写邮箱
	Type    string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`       //验证方式:短信验证,图片验证码,邮箱验证
	Use     string `protobuf:"bytes,3,opt,name=use,proto3" json:"use,omitempty"`         //用途
	CodeID  string `protobuf:"bytes,4,opt,name=codeID,proto3" json:"codeID,omitempty"`   //验证码编码
	Code    string `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`       //验证码
}

func (x *UserCaptchaReq) Reset() {
	*x = UserCaptchaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCaptchaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCaptchaReq) ProtoMessage() {}

func (x *UserCaptchaReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCaptchaReq.ProtoReflect.Descriptor instead.
func (*UserCaptchaReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{68}
}

func (x *UserCaptchaReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UserCaptchaReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UserCaptchaReq) GetUse() string {
	if x != nil {
		return x.Use
	}
	return ""
}

func (x *UserCaptchaReq) GetCodeID() string {
	if x != nil {
		return x.CodeID
	}
	return ""
}

func (x *UserCaptchaReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type UserCaptchaResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodeID string `protobuf:"bytes,1,opt,name=codeID,proto3" json:"codeID,omitempty"`  //验证码编码
	Code   string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`      //验证码--只有图片验证码由apisvr生成,其他方式返回空
	Expire int64  `protobuf:"varint,3,opt,name=expire,proto3" json:"expire,omitempty"` //过期时间
}

func (x *UserCaptchaResp) Reset() {
	*x = UserCaptchaResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCaptchaResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCaptchaResp) ProtoMessage() {}

func (x *UserCaptchaResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCaptchaResp.ProtoReflect.Descriptor instead.
func (*UserCaptchaResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{69}
}

func (x *UserCaptchaResp) GetCodeID() string {
	if x != nil {
		return x.CodeID
	}
	return ""
}

func (x *UserCaptchaResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UserCaptchaResp) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

type UserForgetPwdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`   //登录账号(支持用户名,手机号登录) 账号密码登录时需要填写
	Type     string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`         //账号类型: email:邮箱 phone:手机号
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"` //密码
	Code     string `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`         //验证码    微信登录填code
	CodeID   string `protobuf:"bytes,6,opt,name=codeID,proto3" json:"codeID,omitempty"`     //验证码编号 微信登录填state
}

func (x *UserForgetPwdReq) Reset() {
	*x = UserForgetPwdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserForgetPwdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserForgetPwdReq) ProtoMessage() {}

func (x *UserForgetPwdReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserForgetPwdReq.ProtoReflect.Descriptor instead.
func (*UserForgetPwdReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{70}
}

func (x *UserForgetPwdReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UserForgetPwdReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UserForgetPwdReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserForgetPwdReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UserForgetPwdReq) GetCodeID() string {
	if x != nil {
		return x.CodeID
	}
	return ""
}

type UserChangePwdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`         //验证类型: email:邮箱 phone:手机号
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"` //密码
	Code     string `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`         //验证码    微信登录填code
	CodeID   string `protobuf:"bytes,6,opt,name=codeID,proto3" json:"codeID,omitempty"`     //验证码编号 微信登录填state
}

func (x *UserChangePwdReq) Reset() {
	*x = UserChangePwdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserChangePwdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChangePwdReq) ProtoMessage() {}

func (x *UserChangePwdReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChangePwdReq.ProtoReflect.Descriptor instead.
func (*UserChangePwdReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{71}
}

func (x *UserChangePwdReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UserChangePwdReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserChangePwdReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UserChangePwdReq) GetCodeID() string {
	if x != nil {
		return x.CodeID
	}
	return ""
}

type UserLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account   string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`     //登录账号(支持用户名,手机号登录) 账号密码登录时需要填写
	PwdType   int32  `protobuf:"varint,2,opt,name=pwdType,proto3" json:"pwdType,omitempty"`    //账号密码登录时需要填写.0,无密码 1，明文 2，md5加密
	Password  string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`   //密码，建议md5转换 密码登录时需要填写
	LoginType string `protobuf:"bytes,4,opt,name=loginType,proto3" json:"loginType,omitempty"` //验证类型 phone 手机号 wxOpen 微信开放平台 wxIn 微信内 wxMiniP 微信小程序 pwd 账号密码
	Code      string `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`           //验证码    微信登录填code
	CodeID    string `protobuf:"bytes,6,opt,name=codeID,proto3" json:"codeID,omitempty"`       //验证码编号 微信登录填state
	Ip        string `protobuf:"bytes,7,opt,name=ip,proto3" json:"ip,omitempty"`               //透传请求的 ip
}

func (x *UserLoginReq) Reset() {
	*x = UserLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginReq) ProtoMessage() {}

func (x *UserLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginReq.ProtoReflect.Descriptor instead.
func (*UserLoginReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{72}
}

func (x *UserLoginReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UserLoginReq) GetPwdType() int32 {
	if x != nil {
		return x.PwdType
	}
	return 0
}

func (x *UserLoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserLoginReq) GetLoginType() string {
	if x != nil {
		return x.LoginType
	}
	return ""
}

func (x *UserLoginReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UserLoginReq) GetCodeID() string {
	if x != nil {
		return x.CodeID
	}
	return ""
}

func (x *UserLoginReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type UserLoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info  *UserInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Token *JwtToken `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *UserLoginResp) Reset() {
	*x = UserLoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginResp) ProtoMessage() {}

func (x *UserLoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginResp.ProtoReflect.Descriptor instead.
func (*UserLoginResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{73}
}

func (x *UserLoginResp) GetInfo() *UserInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *UserLoginResp) GetToken() *JwtToken {
	if x != nil {
		return x.Token
	}
	return nil
}

// 登录信息注册,注册第一步(注册核心登录信息) 返回一个jwt用来第二步注册
type UserRegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegType  string    `protobuf:"bytes,1,opt,name=regType,proto3" json:"regType,omitempty"` //注册方式:	phone手机号注册 email邮箱注册 wxopen 微信开放平台登录 wxin 微信内登录 wxminip 微信小程序 pwd 账号密码注册
	Account  string    `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"` //手机号注册时填写手机号 账号密码注册时填写userName
	Code     string    `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`       //验证码    微信注册填code
	CodeID   string    `protobuf:"bytes,4,opt,name=codeID,proto3" json:"codeID,omitempty"`   //验证码编号 微信注册填state
	Password string    `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	Info     *UserInfo `protobuf:"bytes,6,opt,name=info,proto3" json:"info,omitempty"` //填写用户信息
}

func (x *UserRegisterReq) Reset() {
	*x = UserRegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRegisterReq) ProtoMessage() {}

func (x *UserRegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRegisterReq.ProtoReflect.Descriptor instead.
func (*UserRegisterReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{74}
}

func (x *UserRegisterReq) GetRegType() string {
	if x != nil {
		return x.RegType
	}
	return ""
}

func (x *UserRegisterReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UserRegisterReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UserRegisterReq) GetCodeID() string {
	if x != nil {
		return x.CodeID
	}
	return ""
}

func (x *UserRegisterReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserRegisterReq) GetInfo() *UserInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type UserRegisterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *UserRegisterResp) Reset() {
	*x = UserRegisterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRegisterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRegisterResp) ProtoMessage() {}

func (x *UserRegisterResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRegisterResp.ProtoReflect.Descriptor instead.
func (*UserRegisterResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{75}
}

func (x *UserRegisterResp) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type UserRoleIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *UserRoleIndexReq) Reset() {
	*x = UserRoleIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRoleIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRoleIndexReq) ProtoMessage() {}

func (x *UserRoleIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRoleIndexReq.ProtoReflect.Descriptor instead.
func (*UserRoleIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{76}
}

func (x *UserRoleIndexReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type UserRoleIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*RoleInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"` //角色列表
}

func (x *UserRoleIndexResp) Reset() {
	*x = UserRoleIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRoleIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRoleIndexResp) ProtoMessage() {}

func (x *UserRoleIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRoleIndexResp.ProtoReflect.Descriptor instead.
func (*UserRoleIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{77}
}

func (x *UserRoleIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *UserRoleIndexResp) GetList() []*RoleInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type UserRoleMultiUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  int64   `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	RoleIDs []int64 `protobuf:"varint,2,rep,packed,name=roleIDs,proto3" json:"roleIDs,omitempty"` //API列表数据
}

func (x *UserRoleMultiUpdateReq) Reset() {
	*x = UserRoleMultiUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRoleMultiUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRoleMultiUpdateReq) ProtoMessage() {}

func (x *UserRoleMultiUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRoleMultiUpdateReq.ProtoReflect.Descriptor instead.
func (*UserRoleMultiUpdateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{78}
}

func (x *UserRoleMultiUpdateReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UserRoleMultiUpdateReq) GetRoleIDs() []int64 {
	if x != nil {
		return x.RoleIDs
	}
	return nil
}

type UserProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedTime int64 `protobuf:"varint,1,opt,name=createdTime,proto3" json:"createdTime,omitempty"` //创建时间（只读）
	ProjectID   int64 `protobuf:"varint,5,opt,name=projectID,proto3" json:"projectID,omitempty"`     //权限数据ID
}

func (x *UserProject) Reset() {
	*x = UserProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProject) ProtoMessage() {}

func (x *UserProject) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProject.ProtoReflect.Descriptor instead.
func (*UserProject) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{79}
}

func (x *UserProject) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *UserProject) GetProjectID() int64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

type UserProjectMultiUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   int64          `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`    //用户ID（必填，雪花ID）
	Projects []*UserProject `protobuf:"bytes,3,rep,name=projects,proto3" json:"projects,omitempty"` //权限数据IDs（必填）
}

func (x *UserProjectMultiUpdateReq) Reset() {
	*x = UserProjectMultiUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProjectMultiUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProjectMultiUpdateReq) ProtoMessage() {}

func (x *UserProjectMultiUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProjectMultiUpdateReq.ProtoReflect.Descriptor instead.
func (*UserProjectMultiUpdateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{80}
}

func (x *UserProjectMultiUpdateReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UserProjectMultiUpdateReq) GetProjects() []*UserProject {
	if x != nil {
		return x.Projects
	}
	return nil
}

type UserProjectIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`      //进行数据分页（不传默认2000相当于全部）
	UserID int64     `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"` //用户ID（必填，雪花ID）
}

func (x *UserProjectIndexReq) Reset() {
	*x = UserProjectIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProjectIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProjectIndexReq) ProtoMessage() {}

func (x *UserProjectIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProjectIndexReq.ProtoReflect.Descriptor instead.
func (*UserProjectIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{81}
}

func (x *UserProjectIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *UserProjectIndexReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type UserProjectIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` //总数
	List  []*UserProject `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    //用户数据权限列表
}

func (x *UserProjectIndexResp) Reset() {
	*x = UserProjectIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProjectIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProjectIndexResp) ProtoMessage() {}

func (x *UserProjectIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProjectIndexResp.ProtoReflect.Descriptor instead.
func (*UserProjectIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{82}
}

func (x *UserProjectIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *UserProjectIndexResp) GetList() []*UserProject {
	if x != nil {
		return x.List
	}
	return nil
}

type UserArea struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreaID int64 `protobuf:"varint,1,opt,name=areaID,proto3" json:"areaID,omitempty"` //项目id
}

func (x *UserArea) Reset() {
	*x = UserArea{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserArea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserArea) ProtoMessage() {}

func (x *UserArea) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserArea.ProtoReflect.Descriptor instead.
func (*UserArea) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{83}
}

func (x *UserArea) GetAreaID() int64 {
	if x != nil {
		return x.AreaID
	}
	return 0
}

type UserAreaMultiUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    int64       `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`       //用户ID（必填，雪花ID）
	ProjectID int64       `protobuf:"varint,3,opt,name=projectID,proto3" json:"projectID,omitempty"` //项目id
	Areas     []*UserArea `protobuf:"bytes,4,rep,name=areas,proto3" json:"areas,omitempty"`          //权限数据IDs
}

func (x *UserAreaMultiUpdateReq) Reset() {
	*x = UserAreaMultiUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAreaMultiUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAreaMultiUpdateReq) ProtoMessage() {}

func (x *UserAreaMultiUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAreaMultiUpdateReq.ProtoReflect.Descriptor instead.
func (*UserAreaMultiUpdateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{84}
}

func (x *UserAreaMultiUpdateReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UserAreaMultiUpdateReq) GetProjectID() int64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

func (x *UserAreaMultiUpdateReq) GetAreas() []*UserArea {
	if x != nil {
		return x.Areas
	}
	return nil
}

type UserAreaIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`            //进行数据分页（不传默认2000相当于全部）
	UserID    int64     `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`       //用户ID（必填，雪花ID）
	ProjectID int64     `protobuf:"varint,3,opt,name=projectID,proto3" json:"projectID,omitempty"` //项目id 可选
}

func (x *UserAreaIndexReq) Reset() {
	*x = UserAreaIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAreaIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAreaIndexReq) ProtoMessage() {}

func (x *UserAreaIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAreaIndexReq.ProtoReflect.Descriptor instead.
func (*UserAreaIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{85}
}

func (x *UserAreaIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *UserAreaIndexReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UserAreaIndexReq) GetProjectID() int64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

type UserAreaIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` //总数
	List  []*UserArea `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    //用户数据权限列表
}

func (x *UserAreaIndexResp) Reset() {
	*x = UserAreaIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAreaIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAreaIndexResp) ProtoMessage() {}

func (x *UserAreaIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAreaIndexResp.ProtoReflect.Descriptor instead.
func (*UserAreaIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{86}
}

func (x *UserAreaIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *UserAreaIndexResp) GetList() []*UserArea {
	if x != nil {
		return x.List
	}
	return nil
}

type ModuleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // 模块名称
	Code       string                  `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"` // 模块编码
	Desc       *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"` // 模块描述
	Type       int64                   `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Path       string                  `protobuf:"bytes,6,opt,name=path,proto3" json:"path,omitempty"`
	Url        string                  `protobuf:"bytes,7,opt,name=url,proto3" json:"url,omitempty"`
	Icon       string                  `protobuf:"bytes,8,opt,name=icon,proto3" json:"icon,omitempty"`
	Order      int64                   `protobuf:"varint,9,opt,name=order,proto3" json:"order,omitempty"`
	HideInMenu int64                   `protobuf:"varint,10,opt,name=hideInMenu,proto3" json:"hideInMenu,omitempty"`
	Body       *wrapperspb.StringValue `protobuf:"bytes,11,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *ModuleInfo) Reset() {
	*x = ModuleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleInfo) ProtoMessage() {}

func (x *ModuleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleInfo.ProtoReflect.Descriptor instead.
func (*ModuleInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{87}
}

func (x *ModuleInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModuleInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModuleInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ModuleInfo) GetDesc() *wrapperspb.StringValue {
	if x != nil {
		return x.Desc
	}
	return nil
}

func (x *ModuleInfo) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ModuleInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ModuleInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ModuleInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ModuleInfo) GetOrder() int64 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *ModuleInfo) GetHideInMenu() int64 {
	if x != nil {
		return x.HideInMenu
	}
	return 0
}

func (x *ModuleInfo) GetBody() *wrapperspb.StringValue {
	if x != nil {
		return x.Body
	}
	return nil
}

type ModuleInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"` //分页信息
	Name    string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code    string    `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Codes   []string  `protobuf:"bytes,4,rep,name=codes,proto3" json:"codes,omitempty"`
	AppCode string    `protobuf:"bytes,5,opt,name=appCode,proto3" json:"appCode,omitempty"`
}

func (x *ModuleInfoIndexReq) Reset() {
	*x = ModuleInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleInfoIndexReq) ProtoMessage() {}

func (x *ModuleInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleInfoIndexReq.ProtoReflect.Descriptor instead.
func (*ModuleInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{88}
}

func (x *ModuleInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ModuleInfoIndexReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModuleInfoIndexReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ModuleInfoIndexReq) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

func (x *ModuleInfoIndexReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

type ModuleInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*ModuleInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ModuleInfoIndexResp) Reset() {
	*x = ModuleInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleInfoIndexResp) ProtoMessage() {}

func (x *ModuleInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleInfoIndexResp.ProtoReflect.Descriptor instead.
func (*ModuleInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{89}
}

func (x *ModuleInfoIndexResp) GetList() []*ModuleInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ModuleInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AppInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`       // 应用名称
	Type    string                  `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`       //应用类型 web:web页面  app:应用  mini:小程序
	Code    string                  `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`       // 应用编码
	Desc    *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`       // 应用描述
	BaseUrl string                  `protobuf:"bytes,5,opt,name=baseUrl,proto3" json:"baseUrl,omitempty"` // 基础URL
	LogoUrl string                  `protobuf:"bytes,6,opt,name=logoUrl,proto3" json:"logoUrl,omitempty"` // 应用logo地址
}

func (x *AppInfo) Reset() {
	*x = AppInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfo) ProtoMessage() {}

func (x *AppInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfo.ProtoReflect.Descriptor instead.
func (*AppInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{90}
}

func (x *AppInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AppInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AppInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AppInfo) GetDesc() *wrapperspb.StringValue {
	if x != nil {
		return x.Desc
	}
	return nil
}

func (x *AppInfo) GetBaseUrl() string {
	if x != nil {
		return x.BaseUrl
	}
	return ""
}

func (x *AppInfo) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

type AppInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"` //分页信息
	Name string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code string    `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *AppInfoIndexReq) Reset() {
	*x = AppInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfoIndexReq) ProtoMessage() {}

func (x *AppInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfoIndexReq.ProtoReflect.Descriptor instead.
func (*AppInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{91}
}

func (x *AppInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *AppInfoIndexReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppInfoIndexReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type AppInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*AppInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *AppInfoIndexResp) Reset() {
	*x = AppInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfoIndexResp) ProtoMessage() {}

func (x *AppInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfoIndexResp.ProtoReflect.Descriptor instead.
func (*AppInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{92}
}

func (x *AppInfoIndexResp) GetList() []*AppInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AppInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AppModuleMultiUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` //应用code
	ModuleCodes []string `protobuf:"bytes,3,rep,name=moduleCodes,proto3" json:"moduleCodes,omitempty"`
}

func (x *AppModuleMultiUpdateReq) Reset() {
	*x = AppModuleMultiUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppModuleMultiUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppModuleMultiUpdateReq) ProtoMessage() {}

func (x *AppModuleMultiUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppModuleMultiUpdateReq.ProtoReflect.Descriptor instead.
func (*AppModuleMultiUpdateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{93}
}

func (x *AppModuleMultiUpdateReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AppModuleMultiUpdateReq) GetModuleCodes() []string {
	if x != nil {
		return x.ModuleCodes
	}
	return nil
}

type AppModuleIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` //应用code
}

func (x *AppModuleIndexReq) Reset() {
	*x = AppModuleIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppModuleIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppModuleIndexReq) ProtoMessage() {}

func (x *AppModuleIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppModuleIndexReq.ProtoReflect.Descriptor instead.
func (*AppModuleIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{94}
}

func (x *AppModuleIndexReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type AppModuleIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleCodes []string `protobuf:"bytes,3,rep,name=moduleCodes,proto3" json:"moduleCodes,omitempty"`
}

func (x *AppModuleIndexResp) Reset() {
	*x = AppModuleIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppModuleIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppModuleIndexResp) ProtoMessage() {}

func (x *AppModuleIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppModuleIndexResp.ProtoReflect.Descriptor instead.
func (*AppModuleIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{95}
}

func (x *AppModuleIndexResp) GetModuleCodes() []string {
	if x != nil {
		return x.ModuleCodes
	}
	return nil
}

type RoleInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"` //分页信息
	Name   string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status int64     `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RoleInfoIndexReq) Reset() {
	*x = RoleInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleInfoIndexReq) ProtoMessage() {}

func (x *RoleInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleInfoIndexReq.ProtoReflect.Descriptor instead.
func (*RoleInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{96}
}

func (x *RoleInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *RoleInfoIndexReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleInfoIndexReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type RoleInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*RoleInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *RoleInfoIndexResp) Reset() {
	*x = RoleInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleInfoIndexResp) ProtoMessage() {}

func (x *RoleInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleInfoIndexResp.ProtoReflect.Descriptor instead.
func (*RoleInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{97}
}

func (x *RoleInfoIndexResp) GetList() []*RoleInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *RoleInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type RoleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Desc        string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	CreatedTime int64  `protobuf:"varint,4,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	Status      int64  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RoleInfo) Reset() {
	*x = RoleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleInfo) ProtoMessage() {}

func (x *RoleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleInfo.ProtoReflect.Descriptor instead.
func (*RoleInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{98}
}

func (x *RoleInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *RoleInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *RoleInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type RoleAppUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AppCodes []string `protobuf:"bytes,2,rep,name=appCodes,proto3" json:"appCodes,omitempty"`
}

func (x *RoleAppUpdateReq) Reset() {
	*x = RoleAppUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAppUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAppUpdateReq) ProtoMessage() {}

func (x *RoleAppUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAppUpdateReq.ProtoReflect.Descriptor instead.
func (*RoleAppUpdateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{99}
}

func (x *RoleAppUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleAppUpdateReq) GetAppCodes() []string {
	if x != nil {
		return x.AppCodes
	}
	return nil
}

type MenuInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleCode string  `protobuf:"bytes,1,opt,name=moduleCode,proto3" json:"moduleCode,omitempty"`
	MenuIDs    []int64 `protobuf:"varint,2,rep,packed,name=menuIDs,proto3" json:"menuIDs,omitempty"`
	IsRetTree  bool    `protobuf:"varint,3,opt,name=isRetTree,proto3" json:"isRetTree,omitempty"`
}

func (x *MenuInfoIndexReq) Reset() {
	*x = MenuInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuInfoIndexReq) ProtoMessage() {}

func (x *MenuInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuInfoIndexReq.ProtoReflect.Descriptor instead.
func (*MenuInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{100}
}

func (x *MenuInfoIndexReq) GetModuleCode() string {
	if x != nil {
		return x.ModuleCode
	}
	return ""
}

func (x *MenuInfoIndexReq) GetMenuIDs() []int64 {
	if x != nil {
		return x.MenuIDs
	}
	return nil
}

func (x *MenuInfoIndexReq) GetIsRetTree() bool {
	if x != nil {
		return x.IsRetTree
	}
	return false
}

type MenuInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleCode string                  `protobuf:"bytes,12,opt,name=moduleCode,proto3" json:"moduleCode,omitempty"`
	Id         int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ParentID   int64                   `protobuf:"varint,3,opt,name=parentID,proto3" json:"parentID,omitempty"`
	Type       int64                   `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Path       string                  `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	Component  string                  `protobuf:"bytes,6,opt,name=component,proto3" json:"component,omitempty"`
	Icon       string                  `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`
	Redirect   string                  `protobuf:"bytes,8,opt,name=redirect,proto3" json:"redirect,omitempty"`
	CreateTime int64                   `protobuf:"varint,9,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Order      int64                   `protobuf:"varint,10,opt,name=order,proto3" json:"order,omitempty"`
	HideInMenu int64                   `protobuf:"varint,11,opt,name=hideInMenu,proto3" json:"hideInMenu,omitempty"`
	Body       *wrapperspb.StringValue `protobuf:"bytes,13,opt,name=body,proto3" json:"body,omitempty"`
	Children   []*MenuInfo             `protobuf:"bytes,14,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *MenuInfo) Reset() {
	*x = MenuInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuInfo) ProtoMessage() {}

func (x *MenuInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuInfo.ProtoReflect.Descriptor instead.
func (*MenuInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{101}
}

func (x *MenuInfo) GetModuleCode() string {
	if x != nil {
		return x.ModuleCode
	}
	return ""
}

func (x *MenuInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MenuInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuInfo) GetParentID() int64 {
	if x != nil {
		return x.ParentID
	}
	return 0
}

func (x *MenuInfo) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MenuInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MenuInfo) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *MenuInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MenuInfo) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *MenuInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *MenuInfo) GetOrder() int64 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *MenuInfo) GetHideInMenu() int64 {
	if x != nil {
		return x.HideInMenu
	}
	return 0
}

func (x *MenuInfo) GetBody() *wrapperspb.StringValue {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *MenuInfo) GetChildren() []*MenuInfo {
	if x != nil {
		return x.Children
	}
	return nil
}

type MenuInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*MenuInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *MenuInfoIndexResp) Reset() {
	*x = MenuInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuInfoIndexResp) ProtoMessage() {}

func (x *MenuInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuInfoIndexResp.ProtoReflect.Descriptor instead.
func (*MenuInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{102}
}

func (x *MenuInfoIndexResp) GetList() []*MenuInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type Map struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode      string `protobuf:"bytes,1,opt,name=mode,proto3" json:"mode,omitempty"`           //坐标系 默认百度坐标系
	AccessKey string `protobuf:"bytes,2,opt,name=accessKey,proto3" json:"accessKey,omitempty"` //设备地图key
}

func (x *Map) Reset() {
	*x = Map{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Map) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Map) ProtoMessage() {}

func (x *Map) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Map.ProtoReflect.Descriptor instead.
func (*Map) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{103}
}

func (x *Map) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *Map) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

type ConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Map *Map `protobuf:"bytes,1,opt,name=map,proto3" json:"map,omitempty"` //设备地图相关配置
}

func (x *ConfigResp) Reset() {
	*x = ConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigResp) ProtoMessage() {}

func (x *ConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigResp.ProtoReflect.Descriptor instead.
func (*ConfigResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{104}
}

func (x *ConfigResp) GetMap() *Map {
	if x != nil {
		return x.Map
	}
	return nil
}

type ApiInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`     // 分页信息
	Route      string    `protobuf:"bytes,2,opt,name=route,proto3" json:"route,omitempty"`   // 接口路由
	Method     string    `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"` // 接口请求方式: POST GET
	Group      string    `protobuf:"bytes,4,opt,name=group,proto3" json:"group,omitempty"`   // 接口分组
	Name       string    `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`     // 接口名称
	ModuleCode string    `protobuf:"bytes,7,opt,name=moduleCode,proto3" json:"moduleCode,omitempty"`
	IsNeedAuth int64     `protobuf:"varint,8,opt,name=isNeedAuth,proto3" json:"isNeedAuth,omitempty"` //是否需要权限认证 1是 2否
	ApiIDs     []int64   `protobuf:"varint,9,rep,packed,name=apiIDs,proto3" json:"apiIDs,omitempty"`  //API列表数据
}

func (x *ApiInfoIndexReq) Reset() {
	*x = ApiInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiInfoIndexReq) ProtoMessage() {}

func (x *ApiInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiInfoIndexReq.ProtoReflect.Descriptor instead.
func (*ApiInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{105}
}

func (x *ApiInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ApiInfoIndexReq) GetRoute() string {
	if x != nil {
		return x.Route
	}
	return ""
}

func (x *ApiInfoIndexReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ApiInfoIndexReq) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *ApiInfoIndexReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApiInfoIndexReq) GetModuleCode() string {
	if x != nil {
		return x.ModuleCode
	}
	return ""
}

func (x *ApiInfoIndexReq) GetIsNeedAuth() int64 {
	if x != nil {
		return x.IsNeedAuth
	}
	return 0
}

func (x *ApiInfoIndexReq) GetApiIDs() []int64 {
	if x != nil {
		return x.ApiIDs
	}
	return nil
}

type ApiInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleCode   string `protobuf:"bytes,7,opt,name=moduleCode,proto3" json:"moduleCode,omitempty"`
	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                     // 接口编号
	Route        string `protobuf:"bytes,2,opt,name=route,proto3" json:"route,omitempty"`                // 接口路由
	Method       string `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`              // 接口请求方式: POST GET
	Group        string `protobuf:"bytes,4,opt,name=group,proto3" json:"group,omitempty"`                // 接口分组
	Name         string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`                  // 接口名称
	BusinessType int64  `protobuf:"varint,6,opt,name=businessType,proto3" json:"businessType,omitempty"` // 业务类型（1新增 2修改 3删除 4查询 5其它)
	IsNeedAuth   int64  `protobuf:"varint,8,opt,name=isNeedAuth,proto3" json:"isNeedAuth,omitempty"`     //是否需要权限认证 1是 2否
	Desc         string `protobuf:"bytes,9,opt,name=desc,proto3" json:"desc,omitempty"`                  //描述
}

func (x *ApiInfo) Reset() {
	*x = ApiInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiInfo) ProtoMessage() {}

func (x *ApiInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiInfo.ProtoReflect.Descriptor instead.
func (*ApiInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{106}
}

func (x *ApiInfo) GetModuleCode() string {
	if x != nil {
		return x.ModuleCode
	}
	return ""
}

func (x *ApiInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ApiInfo) GetRoute() string {
	if x != nil {
		return x.Route
	}
	return ""
}

func (x *ApiInfo) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ApiInfo) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *ApiInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApiInfo) GetBusinessType() int64 {
	if x != nil {
		return x.BusinessType
	}
	return 0
}

func (x *ApiInfo) GetIsNeedAuth() int64 {
	if x != nil {
		return x.IsNeedAuth
	}
	return 0
}

func (x *ApiInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type ApiInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*ApiInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`    // 接口列表数据
	Total int64      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` // 接口列表总记录数
}

func (x *ApiInfoIndexResp) Reset() {
	*x = ApiInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiInfoIndexResp) ProtoMessage() {}

func (x *ApiInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiInfoIndexResp.ProtoReflect.Descriptor instead.
func (*ApiInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{107}
}

func (x *ApiInfoIndexResp) GetList() []*ApiInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ApiInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ApiDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 接口编号
}

func (x *ApiDeleteReq) Reset() {
	*x = ApiDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiDeleteReq) ProtoMessage() {}

func (x *ApiDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiDeleteReq.ProtoReflect.Descriptor instead.
func (*ApiDeleteReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{108}
}

func (x *ApiDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PageInfo_OrderBy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 排序的字段名
	Filed string `protobuf:"bytes,1,opt,name=filed,proto3" json:"filed,omitempty"`
	// 排序方式：0 aes, 1 desc
	Sort int64 `protobuf:"varint,2,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *PageInfo_OrderBy) Reset() {
	*x = PageInfo_OrderBy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageInfo_OrderBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfo_OrderBy) ProtoMessage() {}

func (x *PageInfo_OrderBy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfo_OrderBy.ProtoReflect.Descriptor instead.
func (*PageInfo_OrderBy) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{22, 0}
}

func (x *PageInfo_OrderBy) GetFiled() string {
	if x != nil {
		return x.Filed
	}
	return ""
}

func (x *PageInfo_OrderBy) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

var File_proto_sys_proto protoreflect.FileDescriptor

var file_proto_sys_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x79, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x73, 0x79, 0x73, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6f, 0x0a, 0x13, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x33, 0x0a, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xcc, 0x01, 0x0a, 0x0a, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f,
	0x67, 0x6f, 0x55, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67,
	0x6f, 0x55, 0x72, 0x6c, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x5f, 0x0a, 0x12, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x50, 0x0a, 0x13, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x72, 0x0a, 0x12, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a,
	0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x55, 0x0a,
	0x15, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44,
	0x4f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x57, 0x0a, 0x0f, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70,
	0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x6e, 0x75, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x65,
	0x6e, 0x75, 0x49, 0x44, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x49, 0x44, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x61, 0x70, 0x69, 0x49, 0x44, 0x73, 0x22, 0x66, 0x0a,
	0x11, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x4c, 0x0a, 0x12, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41,
	0x70, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x20, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x49, 0x0a, 0x17, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x89,
	0x01, 0x0a, 0x14, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x15, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xc0, 0x01, 0x0a, 0x15, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x52, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x65, 0x74, 0x54, 0x72, 0x65,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x44, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x44, 0x73, 0x22, 0x40, 0x0a, 0x16, 0x54,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x41, 0x70, 0x70, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xb0, 0x01,
	0x0a, 0x0d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x6e, 0x75, 0x12,
	0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x2e, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41,
	0x70, 0x70, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x22, 0x7f, 0x0a, 0x0d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x22, 0x9f, 0x01, 0x0a, 0x14, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x41,
	0x70, 0x69, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x70, 0x69, 0x49, 0x44, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x61, 0x70, 0x69,
	0x49, 0x44, 0x73, 0x22, 0x55, 0x0a, 0x15, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70,
	0x41, 0x70, 0x69, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x97, 0x01, 0x0a, 0x15, 0x54,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x44, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x44, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x70, 0x69, 0x49, 0x44, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x61, 0x70,
	0x69, 0x49, 0x44, 0x73, 0x22, 0x78, 0x0a, 0x18, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x4f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x41,
	0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x22, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x96, 0x01,
	0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x1a, 0x33, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x6c,
	0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x18, 0x0a, 0x06, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x30, 0x0a, 0x0a, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x4d, 0x0a, 0x0d, 0x57, 0x69, 0x74, 0x68, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0x2d, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44,
	0x22, 0xc3, 0x01, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x7a, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x44, 0x73, 0x22, 0x52, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xa7, 0x02, 0x0a, 0x08, 0x41, 0x72, 0x65, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x22, 0x0a,
	0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x65, 0x61, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x61, 0x72, 0x65, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x08, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x29, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x72,
	0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x22, 0x24, 0x0a, 0x0a, 0x41, 0x72, 0x65, 0x61, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x65, 0x0a, 0x0f, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x69, 0x73, 0x52, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x22, 0x91, 0x01,
	0x0a, 0x10, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x65,
	0x61, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x65, 0x61, 0x49,
	0x44, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44,
	0x73, 0x22, 0x4c, 0x0a, 0x11, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x3b, 0x0a, 0x0b, 0x41, 0x75, 0x74, 0x68, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x79, 0x0a, 0x15,
	0x52, 0x6f, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x49, 0x44, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x06, 0x61, 0x70, 0x69, 0x49, 0x44, 0x73, 0x22, 0x5b, 0x0a, 0x0f, 0x52, 0x6f, 0x6c, 0x65, 0x41,
	0x70, 0x69, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x40, 0x0a, 0x10, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x70, 0x69, 0x49, 0x44, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06,
	0x61, 0x70, 0x69, 0x49, 0x44, 0x73, 0x22, 0x5c, 0x0a, 0x10, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65,
	0x6e, 0x75, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x43, 0x0a, 0x11, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x44, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x44, 0x73, 0x22, 0x21, 0x0a, 0x0f, 0x52, 0x6f, 0x6c,
	0x65, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x44, 0x0a, 0x10,
	0x52, 0x6f, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x73, 0x22, 0x3e, 0x0a, 0x12, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x4d, 0x0a, 0x13, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x20, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x73, 0x22, 0x33, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0xb1, 0x01, 0x0a, 0x10, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x70, 0x41, 0x64,
	0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x8c, 0x02, 0x0a, 0x0c, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x50, 0x0a, 0x11, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xb2, 0x01, 0x0a, 0x0f,
	0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12,
	0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0xe7, 0x02, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6f, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6f, 0x70, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6f, 0x70, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x1e,
	0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x12, 0x22,
	0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x72, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x4e, 0x0a, 0x10, 0x4f, 0x70,
	0x65, 0x72, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xef, 0x01, 0x0a, 0x11, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x12, 0x24, 0x0a, 0x0d,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xe0, 0x02, 0x0a,
	0x10, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x70, 0x41,
	0x64, 0x64, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x49,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65,
	0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x71,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x65, 0x73, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x86, 0x04, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x77, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x50, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6c, 0x61, 0x73, 0x74, 0x49, 0x50, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x67, 0x49, 0x50, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x67, 0x49, 0x50, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x41, 0x6c, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x12, 0x28,
	0x0a, 0x0f, 0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x65, 0x61, 0x64, 0x49, 0x6d,
	0x67, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x48, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x22, 0x28, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x22, 0x53, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xd0, 0x01, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x41, 0x6c, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x43, 0x0a, 0x15, 0x52, 0x6f,
	0x6c, 0x65, 0x41, 0x70, 0x70, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22,
	0x66, 0x0a, 0x18, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x7c, 0x0a, 0x16, 0x52, 0x6f, 0x6c, 0x65, 0x4d,
	0x65, 0x6e, 0x75, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x6e, 0x75, 0x49, 0x44, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x65,
	0x6e, 0x75, 0x49, 0x44, 0x73, 0x22, 0x54, 0x0a, 0x0e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x70, 0x69,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x50, 0x0a, 0x11, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x21, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x22, 0x7d, 0x0a,
	0x10, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x4c, 0x0a, 0x11,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x29, 0x0a, 0x0f, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x2b, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x22, 0x74, 0x0a, 0x08, 0x4a, 0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x41, 0x66, 0x74, 0x65, 0x72, 0x22, 0x7c, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x73, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x64, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x65,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x55, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61,
	0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x64,
	0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x22, 0x88, 0x01,
	0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50, 0x77, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x22, 0x6e, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x77, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x22, 0xb8, 0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x77, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x77, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64,
	0x65, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x70, 0x22, 0x57, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4a, 0x77, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xb0, 0x01, 0x0a,
	0x0f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x72, 0x65, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x64, 0x65,
	0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22,
	0x2a, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x2a, 0x0a, 0x10, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x4c, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x4a, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44,
	0x73, 0x22, 0x4d, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44,
	0x22, 0x61, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x22, 0x50, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x52, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x22, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x72, 0x65, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x73, 0x0a,
	0x16, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x23, 0x0a,
	0x05, 0x61, 0x72, 0x65, 0x61, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61, 0x52, 0x05, 0x61, 0x72, 0x65,
	0x61, 0x73, 0x22, 0x6b, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x22,
	0x4c, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xac, 0x02,
	0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x69,
	0x64, 0x65, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x30, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x8f, 0x01, 0x0a,
	0x12, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x6f, 0x64, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x50,
	0x0a, 0x13, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0xbb, 0x01, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61,
	0x73, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x73,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x22, 0x5c,
	0x0a, 0x0f, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4a, 0x0a, 0x10,
	0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x20, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x4f, 0x0a, 0x17, 0x41, 0x70, 0x70, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x27, 0x0a, 0x11, 0x41, 0x70, 0x70,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x36, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x61, 0x0a, 0x10, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x21,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4c, 0x0a,
	0x11, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x7c, 0x0a, 0x08, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3e, 0x0a, 0x10, 0x52, 0x6f, 0x6c,
	0x65, 0x41, 0x70, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x6a, 0x0a, 0x10, 0x4d, 0x65, 0x6e,
	0x75, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07,
	0x6d, 0x65, 0x6e, 0x75, 0x49, 0x44, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x52, 0x65, 0x74,
	0x54, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x65,
	0x74, 0x54, 0x72, 0x65, 0x65, 0x22, 0x93, 0x03, 0x0a, 0x08, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x30,
	0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x12, 0x29, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x0e, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x36, 0x0a, 0x11, 0x4d,
	0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x37, 0x0a, 0x03, 0x4d, 0x61, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x22, 0x28, 0x0a, 0x0a,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x03, 0x6d, 0x61,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x61,
	0x70, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x22, 0xe4, 0x01, 0x0a, 0x0f, 0x41, 0x70, 0x69, 0x49, 0x6e,
	0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x41,
	0x75, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x73, 0x4e, 0x65, 0x65,
	0x64, 0x41, 0x75, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x49, 0x44, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x61, 0x70, 0x69, 0x49, 0x44, 0x73, 0x22, 0xe9, 0x01,
	0x0a, 0x07, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x41,
	0x75, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x73, 0x4e, 0x65, 0x65,
	0x64, 0x41, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x4a, 0x0a, 0x10, 0x41, 0x70, 0x69,
	0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x1e, 0x0a, 0x0c, 0x41, 0x70, 0x69, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x32, 0x9d, 0x08, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x61, 0x64, 0x12, 0x14, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x37, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x32, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x11,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x1a, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x72,
	0x67, 0x65, 0x74, 0x50, 0x77, 0x64, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50, 0x77, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0b,
	0x75, 0x73, 0x65, 0x72, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x12, 0x13, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x65, 0x71,
	0x1a, 0x14, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x70, 0x74, 0x63,
	0x68, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x15, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x50, 0x77, 0x64, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x77, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0d,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a,
	0x0d, 0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x15,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a,
	0x13, 0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x47, 0x0a, 0x16, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x10, 0x75, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x41, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x41, 0x72, 0x65,
	0x61, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x32, 0xd8, 0x01, 0x0a, 0x0a, 0x4d, 0x65, 0x6e, 0x75, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x0e, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x65, 0x6e,
	0x75, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68,
	0x49, 0x44, 0x12, 0x3e, 0x0a, 0x0d, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e,
	0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0e, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x49,
	0x6e, 0x66, 0x6f, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2c, 0x0a, 0x0e, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49,
	0x44, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0x97, 0x06, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x12,
	0x2c, 0x0a, 0x0e, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x3e, 0x0a,
	0x0d, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x15,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a,
	0x0e, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0d,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a,
	0x0e, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x0d, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x72,
	0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x15, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65,
	0x6e, 0x75, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x13, 0x72,
	0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e,
	0x75, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b,
	0x0a, 0x0c, 0x72, 0x6f, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41,
	0x70, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x12, 0x72,
	0x6f, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0f,
	0x72, 0x6f, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x17, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x45, 0x0a, 0x15, 0x72, 0x6f, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x72, 0x6f, 0x6c,
	0x65, 0x41, 0x70, 0x69, 0x41, 0x75, 0x74, 0x68, 0x12, 0x13, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x12,
	0x72, 0x6f, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x70, 0x69,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0d,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a,
	0x0c, 0x72, 0x6f, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x70,
	0x69, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x32, 0x89, 0x03, 0x0a, 0x09, 0x41,
	0x70, 0x70, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0c, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69,
	0x74, 0x68, 0x49, 0x44, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2c, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x0c, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2f, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x43, 0x6f, 0x64,
	0x65, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2c, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x12,
	0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x43, 0x6f, 0x64, 0x65,
	0x1a, 0x0c, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41,
	0x0a, 0x0e, 0x61, 0x70, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41,
	0x70, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x43, 0x0a, 0x14, 0x61, 0x70, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x41, 0x70, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xc2, 0x05, 0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0b, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x0f, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x32, 0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69,
	0x74, 0x68, 0x49, 0x44, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x0f, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x10, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0b,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x40, 0x0a, 0x0f, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x15,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x65, 0x6e, 0x75,
	0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a,
	0x10, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2e, 0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44,
	0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2c, 0x0a, 0x0f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x0c, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x3d, 0x0a,
	0x0e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x14, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x49,
	0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0f,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x0c, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0d, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x0f,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x0d, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x32, 0x0a, 0x06, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x0f,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x32,
	0xf2, 0x01, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x3e, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x4c,
	0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0d,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a,
	0x0d, 0x6f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x15,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0xcf, 0x01, 0x0a, 0x09, 0x41, 0x70, 0x69, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x12, 0x2a, 0x0a, 0x0d, 0x61, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x0c, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66,
	0x6f, 0x1a, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x3b,
	0x0a, 0x0c, 0x61, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x49, 0x6e,
	0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x0d, 0x61,
	0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0c, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x0d, 0x61, 0x70, 0x69,
	0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0b, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xba, 0x02, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x10, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x12, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x11, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x12,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x49, 0x44, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x37, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x61, 0x64, 0x12, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x10, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x47, 0x0a, 0x10, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x32, 0x95, 0x02, 0x0a, 0x0a, 0x41, 0x72, 0x65, 0x61, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x12, 0x30, 0x0a, 0x0e, 0x61, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x1a, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x57, 0x69,
	0x74, 0x68, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x0e, 0x61, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x72, 0x65,
	0x61, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x0e, 0x61, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x72, 0x65,
	0x61, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0c, 0x61, 0x72, 0x65, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x12, 0x14, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x72, 0x65,
	0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x0d, 0x61,
	0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x15, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x32, 0xf7, 0x09, 0x0a, 0x0c,
	0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x10,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x10, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0d, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x10, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x43, 0x6f, 0x64, 0x65,
	0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x32, 0x0a, 0x0e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61,
	0x64, 0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x43, 0x6f,
	0x64, 0x65, 0x1a, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x44, 0x0a, 0x0f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a,
	0x18, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x41, 0x70, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0f,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x17, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0f, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x41, 0x70, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44,
	0x4f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x1a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41,
	0x70, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x41, 0x70, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x15, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4d, 0x0a, 0x14, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45,
	0x0a, 0x15, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44,
	0x4f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x13, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41,
	0x70, 0x70, 0x4d, 0x65, 0x6e, 0x75, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x6e, 0x75,
	0x1a, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x4d, 0x0a,
	0x12, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x41, 0x70, 0x70, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a,
	0x1b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d,
	0x65, 0x6e, 0x75, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x13,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x6e, 0x75, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x41, 0x70, 0x70, 0x4d, 0x65, 0x6e, 0x75, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x13, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x41, 0x70, 0x70, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x12, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x49,
	0x44, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x35, 0x0a, 0x12, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x41, 0x70, 0x69,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0b, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x4a, 0x0a, 0x11, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x41, 0x70, 0x70, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x41, 0x70, 0x69, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x12, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70,
	0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0d, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x12,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x41, 0x70, 0x69, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x41, 0x70, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x08, 0x5a, 0x06, 0x70, 0x62, 0x2f, 0x73, 0x79, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_sys_proto_rawDescOnce sync.Once
	file_proto_sys_proto_rawDescData = file_proto_sys_proto_rawDesc
)

func file_proto_sys_proto_rawDescGZIP() []byte {
	file_proto_sys_proto_rawDescOnce.Do(func() {
		file_proto_sys_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_sys_proto_rawDescData)
	})
	return file_proto_sys_proto_rawDescData
}

var file_proto_sys_proto_msgTypes = make([]protoimpl.MessageInfo, 110)
var file_proto_sys_proto_goTypes = []interface{}{
	(*TenantInfoCreateReq)(nil),       // 0: sys.TenantInfoCreateReq
	(*TenantInfo)(nil),                // 1: sys.TenantInfo
	(*TenantInfoIndexReq)(nil),        // 2: sys.TenantInfoIndexReq
	(*TenantInfoIndexResp)(nil),       // 3: sys.TenantInfoIndexResp
	(*TenantAppCreateReq)(nil),        // 4: sys.TenantAppCreateReq
	(*TenantAppWithIDOrCode)(nil),     // 5: sys.TenantAppWithIDOrCode
	(*TenantAppModule)(nil),           // 6: sys.TenantAppModule
	(*TenantAppIndexReq)(nil),         // 7: sys.TenantAppIndexReq
	(*TenantAppIndexResp)(nil),        // 8: sys.TenantAppIndexResp
	(*TenantAppMultiUpdateReq)(nil),   // 9: sys.TenantAppMultiUpdateReq
	(*TenantModuleIndexReq)(nil),      // 10: sys.TenantModuleIndexReq
	(*TenantModuleIndexResp)(nil),     // 11: sys.TenantModuleIndexResp
	(*TenantAppMenuIndexReq)(nil),     // 12: sys.TenantAppMenuIndexReq
	(*TenantAppMenuIndexResp)(nil),    // 13: sys.TenantAppMenuIndexResp
	(*TenantAppMenu)(nil),             // 14: sys.TenantAppMenu
	(*TenantApiInfo)(nil),             // 15: sys.TenantApiInfo
	(*TenantAppApiIndexReq)(nil),      // 16: sys.TenantAppApiIndexReq
	(*TenantAppApiIndexResp)(nil),     // 17: sys.TenantAppApiIndexResp
	(*TenantModuleCreateReq)(nil),     // 18: sys.TenantModuleCreateReq
	(*TenantModuleWithIDOrCode)(nil),  // 19: sys.TenantModuleWithIDOrCode
	(*Point)(nil),                     // 20: sys.Point
	(*Response)(nil),                  // 21: sys.Response
	(*PageInfo)(nil),                  // 22: sys.PageInfo
	(*WithID)(nil),                    // 23: sys.WithID
	(*WithIDCode)(nil),                // 24: sys.WithIDCode
	(*WithAppCodeID)(nil),             // 25: sys.WithAppCodeID
	(*ProjectWithID)(nil),             // 26: sys.ProjectWithID
	(*ProjectInfo)(nil),               // 27: sys.ProjectInfo
	(*ProjectInfoIndexReq)(nil),       // 28: sys.ProjectInfoIndexReq
	(*ProjectInfoIndexResp)(nil),      // 29: sys.ProjectInfoIndexResp
	(*AreaInfo)(nil),                  // 30: sys.AreaInfo
	(*AreaWithID)(nil),                // 31: sys.AreaWithID
	(*AreaInfoReadReq)(nil),           // 32: sys.AreaInfoReadReq
	(*AreaInfoIndexReq)(nil),          // 33: sys.AreaInfoIndexReq
	(*AreaInfoIndexResp)(nil),         // 34: sys.AreaInfoIndexResp
	(*AuthApiInfo)(nil),               // 35: sys.AuthApiInfo
	(*RoleApiMultiUpdateReq)(nil),     // 36: sys.RoleApiMultiUpdateReq
	(*RoleApiIndexReq)(nil),           // 37: sys.RoleApiIndexReq
	(*RoleApiIndexResp)(nil),          // 38: sys.RoleApiIndexResp
	(*RoleMenuIndexReq)(nil),          // 39: sys.RoleMenuIndexReq
	(*RoleMenuIndexResp)(nil),         // 40: sys.RoleMenuIndexResp
	(*RoleAppIndexReq)(nil),           // 41: sys.RoleAppIndexReq
	(*RoleAppIndexResp)(nil),          // 42: sys.RoleAppIndexResp
	(*RoleModuleIndexReq)(nil),        // 43: sys.RoleModuleIndexReq
	(*RoleModuleIndexResp)(nil),       // 44: sys.RoleModuleIndexResp
	(*DateRange)(nil),                 // 45: sys.DateRange
	(*LoginLogIndexReq)(nil),          // 46: sys.LoginLogIndexReq
	(*LoginLogInfo)(nil),              // 47: sys.LoginLogInfo
	(*LoginLogIndexResp)(nil),         // 48: sys.LoginLogIndexResp
	(*OperLogIndexReq)(nil),           // 49: sys.OperLogIndexReq
	(*OperLogInfo)(nil),               // 50: sys.OperLogInfo
	(*OperLogIndexResp)(nil),          // 51: sys.OperLogIndexResp
	(*LoginLogCreateReq)(nil),         // 52: sys.LoginLogCreateReq
	(*OperLogCreateReq)(nil),          // 53: sys.OperLogCreateReq
	(*UserInfo)(nil),                  // 54: sys.UserInfo
	(*UserCreateResp)(nil),            // 55: sys.UserCreateResp
	(*UserCheckTokenReq)(nil),         // 56: sys.UserCheckTokenReq
	(*UserCheckTokenResp)(nil),        // 57: sys.UserCheckTokenResp
	(*RoleAppMultiUpdateReq)(nil),     // 58: sys.RoleAppMultiUpdateReq
	(*RoleModuleMultiUpdateReq)(nil),  // 59: sys.RoleModuleMultiUpdateReq
	(*RoleMenuMultiUpdateReq)(nil),    // 60: sys.RoleMenuMultiUpdateReq
	(*RoleApiAuthReq)(nil),            // 61: sys.RoleApiAuthReq
	(*UserInfoCreateReq)(nil),         // 62: sys.UserInfoCreateReq
	(*UserInfoIndexReq)(nil),          // 63: sys.UserInfoIndexReq
	(*UserInfoIndexResp)(nil),         // 64: sys.UserInfoIndexResp
	(*UserInfoReadReq)(nil),           // 65: sys.UserInfoReadReq
	(*UserInfoDeleteReq)(nil),         // 66: sys.UserInfoDeleteReq
	(*JwtToken)(nil),                  // 67: sys.JwtToken
	(*UserCaptchaReq)(nil),            // 68: sys.UserCaptchaReq
	(*UserCaptchaResp)(nil),           // 69: sys.UserCaptchaResp
	(*UserForgetPwdReq)(nil),          // 70: sys.UserForgetPwdReq
	(*UserChangePwdReq)(nil),          // 71: sys.UserChangePwdReq
	(*UserLoginReq)(nil),              // 72: sys.UserLoginReq
	(*UserLoginResp)(nil),             // 73: sys.UserLoginResp
	(*UserRegisterReq)(nil),           // 74: sys.UserRegisterReq
	(*UserRegisterResp)(nil),          // 75: sys.UserRegisterResp
	(*UserRoleIndexReq)(nil),          // 76: sys.UserRoleIndexReq
	(*UserRoleIndexResp)(nil),         // 77: sys.UserRoleIndexResp
	(*UserRoleMultiUpdateReq)(nil),    // 78: sys.UserRoleMultiUpdateReq
	(*UserProject)(nil),               // 79: sys.UserProject
	(*UserProjectMultiUpdateReq)(nil), // 80: sys.UserProjectMultiUpdateReq
	(*UserProjectIndexReq)(nil),       // 81: sys.UserProjectIndexReq
	(*UserProjectIndexResp)(nil),      // 82: sys.UserProjectIndexResp
	(*UserArea)(nil),                  // 83: sys.UserArea
	(*UserAreaMultiUpdateReq)(nil),    // 84: sys.UserAreaMultiUpdateReq
	(*UserAreaIndexReq)(nil),          // 85: sys.UserAreaIndexReq
	(*UserAreaIndexResp)(nil),         // 86: sys.UserAreaIndexResp
	(*ModuleInfo)(nil),                // 87: sys.ModuleInfo
	(*ModuleInfoIndexReq)(nil),        // 88: sys.ModuleInfoIndexReq
	(*ModuleInfoIndexResp)(nil),       // 89: sys.ModuleInfoIndexResp
	(*AppInfo)(nil),                   // 90: sys.AppInfo
	(*AppInfoIndexReq)(nil),           // 91: sys.AppInfoIndexReq
	(*AppInfoIndexResp)(nil),          // 92: sys.AppInfoIndexResp
	(*AppModuleMultiUpdateReq)(nil),   // 93: sys.AppModuleMultiUpdateReq
	(*AppModuleIndexReq)(nil),         // 94: sys.AppModuleIndexReq
	(*AppModuleIndexResp)(nil),        // 95: sys.AppModuleIndexResp
	(*RoleInfoIndexReq)(nil),          // 96: sys.RoleInfoIndexReq
	(*RoleInfoIndexResp)(nil),         // 97: sys.RoleInfoIndexResp
	(*RoleInfo)(nil),                  // 98: sys.RoleInfo
	(*RoleAppUpdateReq)(nil),          // 99: sys.RoleAppUpdateReq
	(*MenuInfoIndexReq)(nil),          // 100: sys.MenuInfoIndexReq
	(*MenuInfo)(nil),                  // 101: sys.MenuInfo
	(*MenuInfoIndexResp)(nil),         // 102: sys.MenuInfoIndexResp
	(*Map)(nil),                       // 103: sys.Map
	(*ConfigResp)(nil),                // 104: sys.configResp
	(*ApiInfoIndexReq)(nil),           // 105: sys.ApiInfoIndexReq
	(*ApiInfo)(nil),                   // 106: sys.ApiInfo
	(*ApiInfoIndexResp)(nil),          // 107: sys.ApiInfoIndexResp
	(*ApiDeleteReq)(nil),              // 108: sys.ApiDeleteReq
	(*PageInfo_OrderBy)(nil),          // 109: sys.PageInfo.OrderBy
	(*wrapperspb.StringValue)(nil),    // 110: google.protobuf.StringValue
}
var file_proto_sys_proto_depIdxs = []int32{
	1,   // 0: sys.TenantInfoCreateReq.info:type_name -> sys.TenantInfo
	54,  // 1: sys.TenantInfoCreateReq.adminUserInfo:type_name -> sys.UserInfo
	110, // 2: sys.TenantInfo.desc:type_name -> google.protobuf.StringValue
	22,  // 3: sys.TenantInfoIndexReq.page:type_name -> sys.PageInfo
	1,   // 4: sys.TenantInfoIndexResp.list:type_name -> sys.TenantInfo
	6,   // 5: sys.TenantAppCreateReq.modules:type_name -> sys.TenantAppModule
	22,  // 6: sys.TenantAppIndexReq.page:type_name -> sys.PageInfo
	90,  // 7: sys.TenantAppIndexResp.list:type_name -> sys.AppInfo
	22,  // 8: sys.TenantModuleIndexReq.page:type_name -> sys.PageInfo
	87,  // 9: sys.TenantModuleIndexResp.list:type_name -> sys.ModuleInfo
	22,  // 10: sys.TenantAppMenuIndexReq.page:type_name -> sys.PageInfo
	14,  // 11: sys.TenantAppMenuIndexResp.list:type_name -> sys.TenantAppMenu
	101, // 12: sys.TenantAppMenu.info:type_name -> sys.MenuInfo
	14,  // 13: sys.TenantAppMenu.children:type_name -> sys.TenantAppMenu
	106, // 14: sys.TenantApiInfo.info:type_name -> sys.ApiInfo
	22,  // 15: sys.TenantAppApiIndexReq.page:type_name -> sys.PageInfo
	15,  // 16: sys.TenantAppApiIndexResp.list:type_name -> sys.TenantApiInfo
	109, // 17: sys.PageInfo.orders:type_name -> sys.PageInfo.OrderBy
	110, // 18: sys.ProjectInfo.desc:type_name -> google.protobuf.StringValue
	22,  // 19: sys.ProjectInfoIndexReq.page:type_name -> sys.PageInfo
	27,  // 20: sys.ProjectInfoIndexResp.list:type_name -> sys.ProjectInfo
	20,  // 21: sys.AreaInfo.Position:type_name -> sys.Point
	110, // 22: sys.AreaInfo.desc:type_name -> google.protobuf.StringValue
	30,  // 23: sys.AreaInfo.children:type_name -> sys.AreaInfo
	22,  // 24: sys.AreaInfoIndexReq.page:type_name -> sys.PageInfo
	30,  // 25: sys.AreaInfoIndexResp.list:type_name -> sys.AreaInfo
	22,  // 26: sys.LoginLogIndexReq.page:type_name -> sys.PageInfo
	45,  // 27: sys.LoginLogIndexReq.date:type_name -> sys.DateRange
	47,  // 28: sys.LoginLogIndexResp.list:type_name -> sys.LoginLogInfo
	22,  // 29: sys.OperLogIndexReq.page:type_name -> sys.PageInfo
	50,  // 30: sys.OperLogIndexResp.list:type_name -> sys.OperLogInfo
	54,  // 31: sys.UserInfoCreateReq.info:type_name -> sys.UserInfo
	22,  // 32: sys.UserInfoIndexReq.page:type_name -> sys.PageInfo
	54,  // 33: sys.UserInfoIndexResp.list:type_name -> sys.UserInfo
	54,  // 34: sys.UserLoginResp.info:type_name -> sys.UserInfo
	67,  // 35: sys.UserLoginResp.token:type_name -> sys.JwtToken
	54,  // 36: sys.UserRegisterReq.info:type_name -> sys.UserInfo
	98,  // 37: sys.UserRoleIndexResp.list:type_name -> sys.RoleInfo
	79,  // 38: sys.UserProjectMultiUpdateReq.projects:type_name -> sys.UserProject
	22,  // 39: sys.UserProjectIndexReq.page:type_name -> sys.PageInfo
	79,  // 40: sys.UserProjectIndexResp.list:type_name -> sys.UserProject
	83,  // 41: sys.UserAreaMultiUpdateReq.areas:type_name -> sys.UserArea
	22,  // 42: sys.UserAreaIndexReq.page:type_name -> sys.PageInfo
	83,  // 43: sys.UserAreaIndexResp.list:type_name -> sys.UserArea
	110, // 44: sys.ModuleInfo.desc:type_name -> google.protobuf.StringValue
	110, // 45: sys.ModuleInfo.body:type_name -> google.protobuf.StringValue
	22,  // 46: sys.ModuleInfoIndexReq.page:type_name -> sys.PageInfo
	87,  // 47: sys.ModuleInfoIndexResp.list:type_name -> sys.ModuleInfo
	110, // 48: sys.AppInfo.desc:type_name -> google.protobuf.StringValue
	22,  // 49: sys.AppInfoIndexReq.page:type_name -> sys.PageInfo
	90,  // 50: sys.AppInfoIndexResp.list:type_name -> sys.AppInfo
	22,  // 51: sys.RoleInfoIndexReq.page:type_name -> sys.PageInfo
	98,  // 52: sys.RoleInfoIndexResp.list:type_name -> sys.RoleInfo
	110, // 53: sys.MenuInfo.body:type_name -> google.protobuf.StringValue
	101, // 54: sys.MenuInfo.children:type_name -> sys.MenuInfo
	101, // 55: sys.MenuInfoIndexResp.list:type_name -> sys.MenuInfo
	103, // 56: sys.configResp.map:type_name -> sys.Map
	22,  // 57: sys.ApiInfoIndexReq.page:type_name -> sys.PageInfo
	106, // 58: sys.ApiInfoIndexResp.list:type_name -> sys.ApiInfo
	62,  // 59: sys.UserManage.userInfoCreate:input_type -> sys.UserInfoCreateReq
	63,  // 60: sys.UserManage.userInfoIndex:input_type -> sys.UserInfoIndexReq
	54,  // 61: sys.UserManage.userInfoUpdate:input_type -> sys.UserInfo
	65,  // 62: sys.UserManage.userInfoRead:input_type -> sys.UserInfoReadReq
	66,  // 63: sys.UserManage.userInfoDelete:input_type -> sys.UserInfoDeleteReq
	72,  // 64: sys.UserManage.userLogin:input_type -> sys.UserLoginReq
	70,  // 65: sys.UserManage.userForgetPwd:input_type -> sys.UserForgetPwdReq
	68,  // 66: sys.UserManage.userCaptcha:input_type -> sys.UserCaptchaReq
	56,  // 67: sys.UserManage.userCheckToken:input_type -> sys.UserCheckTokenReq
	74,  // 68: sys.UserManage.userRegister:input_type -> sys.UserRegisterReq
	71,  // 69: sys.UserManage.userChangePwd:input_type -> sys.UserChangePwdReq
	76,  // 70: sys.UserManage.userRoleIndex:input_type -> sys.UserRoleIndexReq
	78,  // 71: sys.UserManage.userRoleMultiUpdate:input_type -> sys.UserRoleMultiUpdateReq
	80,  // 72: sys.UserManage.userProjectMultiUpdate:input_type -> sys.UserProjectMultiUpdateReq
	81,  // 73: sys.UserManage.userProjectIndex:input_type -> sys.UserProjectIndexReq
	84,  // 74: sys.UserManage.userAreaMultiUpdate:input_type -> sys.UserAreaMultiUpdateReq
	85,  // 75: sys.UserManage.userAreaIndex:input_type -> sys.UserAreaIndexReq
	101, // 76: sys.MenuManage.menuInfoCreate:input_type -> sys.MenuInfo
	100, // 77: sys.MenuManage.menuInfoIndex:input_type -> sys.MenuInfoIndexReq
	101, // 78: sys.MenuManage.menuInfoUpdate:input_type -> sys.MenuInfo
	23,  // 79: sys.MenuManage.menuInfoDelete:input_type -> sys.WithID
	98,  // 80: sys.RoleManage.roleInfoCreate:input_type -> sys.RoleInfo
	96,  // 81: sys.RoleManage.roleInfoIndex:input_type -> sys.RoleInfoIndexReq
	98,  // 82: sys.RoleManage.roleInfoUpdate:input_type -> sys.RoleInfo
	23,  // 83: sys.RoleManage.roleInfoDelete:input_type -> sys.WithID
	39,  // 84: sys.RoleManage.roleMenuIndex:input_type -> sys.RoleMenuIndexReq
	60,  // 85: sys.RoleManage.roleMenuMultiUpdate:input_type -> sys.RoleMenuMultiUpdateReq
	41,  // 86: sys.RoleManage.roleAppIndex:input_type -> sys.RoleAppIndexReq
	58,  // 87: sys.RoleManage.roleAppMultiUpdate:input_type -> sys.RoleAppMultiUpdateReq
	43,  // 88: sys.RoleManage.roleModuleIndex:input_type -> sys.RoleModuleIndexReq
	59,  // 89: sys.RoleManage.roleModuleMultiUpdate:input_type -> sys.RoleModuleMultiUpdateReq
	61,  // 90: sys.RoleManage.roleApiAuth:input_type -> sys.RoleApiAuthReq
	36,  // 91: sys.RoleManage.roleApiMultiUpdate:input_type -> sys.RoleApiMultiUpdateReq
	37,  // 92: sys.RoleManage.roleApiIndex:input_type -> sys.RoleApiIndexReq
	90,  // 93: sys.AppManage.appInfoCreate:input_type -> sys.AppInfo
	91,  // 94: sys.AppManage.appInfoIndex:input_type -> sys.AppInfoIndexReq
	90,  // 95: sys.AppManage.appInfoUpdate:input_type -> sys.AppInfo
	24,  // 96: sys.AppManage.appInfoDelete:input_type -> sys.WithIDCode
	24,  // 97: sys.AppManage.appInfoRead:input_type -> sys.WithIDCode
	94,  // 98: sys.AppManage.appModuleIndex:input_type -> sys.AppModuleIndexReq
	93,  // 99: sys.AppManage.appModuleMultiUpdate:input_type -> sys.AppModuleMultiUpdateReq
	87,  // 100: sys.ModuleManage.moduleInfoCreate:input_type -> sys.ModuleInfo
	88,  // 101: sys.ModuleManage.moduleInfoIndex:input_type -> sys.ModuleInfoIndexReq
	87,  // 102: sys.ModuleManage.moduleInfoUpdate:input_type -> sys.ModuleInfo
	24,  // 103: sys.ModuleManage.moduleInfoDelete:input_type -> sys.WithIDCode
	24,  // 104: sys.ModuleManage.moduleInfoRead:input_type -> sys.WithIDCode
	101, // 105: sys.ModuleManage.moduleMenuCreate:input_type -> sys.MenuInfo
	100, // 106: sys.ModuleManage.moduleMenuIndex:input_type -> sys.MenuInfoIndexReq
	101, // 107: sys.ModuleManage.moduleMenuUpdate:input_type -> sys.MenuInfo
	23,  // 108: sys.ModuleManage.moduleMenuDelete:input_type -> sys.WithID
	106, // 109: sys.ModuleManage.moduleApiCreate:input_type -> sys.ApiInfo
	105, // 110: sys.ModuleManage.moduleApiIndex:input_type -> sys.ApiInfoIndexReq
	106, // 111: sys.ModuleManage.moduleApiUpdate:input_type -> sys.ApiInfo
	23,  // 112: sys.ModuleManage.moduleApiDelete:input_type -> sys.WithID
	21,  // 113: sys.Common.config:input_type -> sys.Response
	46,  // 114: sys.Log.loginLogIndex:input_type -> sys.LoginLogIndexReq
	49,  // 115: sys.Log.operLogIndex:input_type -> sys.OperLogIndexReq
	52,  // 116: sys.Log.loginLogCreate:input_type -> sys.LoginLogCreateReq
	53,  // 117: sys.Log.operLogCreate:input_type -> sys.OperLogCreateReq
	106, // 118: sys.ApiManage.apiInfoCreate:input_type -> sys.ApiInfo
	105, // 119: sys.ApiManage.apiInfoIndex:input_type -> sys.ApiInfoIndexReq
	106, // 120: sys.ApiManage.apiInfoUpdate:input_type -> sys.ApiInfo
	23,  // 121: sys.ApiManage.apiInfoDelete:input_type -> sys.WithID
	27,  // 122: sys.ProjectManage.projectInfoCreate:input_type -> sys.ProjectInfo
	27,  // 123: sys.ProjectManage.projectInfoUpdate:input_type -> sys.ProjectInfo
	26,  // 124: sys.ProjectManage.projectInfoDelete:input_type -> sys.ProjectWithID
	26,  // 125: sys.ProjectManage.projectInfoRead:input_type -> sys.ProjectWithID
	28,  // 126: sys.ProjectManage.projectInfoIndex:input_type -> sys.ProjectInfoIndexReq
	30,  // 127: sys.AreaManage.areaInfoCreate:input_type -> sys.AreaInfo
	30,  // 128: sys.AreaManage.areaInfoUpdate:input_type -> sys.AreaInfo
	31,  // 129: sys.AreaManage.areaInfoDelete:input_type -> sys.AreaWithID
	32,  // 130: sys.AreaManage.areaInfoRead:input_type -> sys.AreaInfoReadReq
	33,  // 131: sys.AreaManage.areaInfoIndex:input_type -> sys.AreaInfoIndexReq
	0,   // 132: sys.TenantManage.tenantInfoCreate:input_type -> sys.TenantInfoCreateReq
	1,   // 133: sys.TenantManage.tenantInfoUpdate:input_type -> sys.TenantInfo
	24,  // 134: sys.TenantManage.tenantInfoDelete:input_type -> sys.WithIDCode
	24,  // 135: sys.TenantManage.tenantInfoRead:input_type -> sys.WithIDCode
	2,   // 136: sys.TenantManage.tenantInfoIndex:input_type -> sys.TenantInfoIndexReq
	7,   // 137: sys.TenantManage.tenantAppIndex:input_type -> sys.TenantAppIndexReq
	4,   // 138: sys.TenantManage.tenantAppCreate:input_type -> sys.TenantAppCreateReq
	5,   // 139: sys.TenantManage.tenantAppDelete:input_type -> sys.TenantAppWithIDOrCode
	4,   // 140: sys.TenantManage.tenantAppModuleMultiCreate:input_type -> sys.TenantAppCreateReq
	18,  // 141: sys.TenantManage.tenantAppModuleCreate:input_type -> sys.TenantModuleCreateReq
	10,  // 142: sys.TenantManage.tenantAppModuleIndex:input_type -> sys.TenantModuleIndexReq
	19,  // 143: sys.TenantManage.tenantAppModuleDelete:input_type -> sys.TenantModuleWithIDOrCode
	14,  // 144: sys.TenantManage.tenantAppMenuCreate:input_type -> sys.TenantAppMenu
	12,  // 145: sys.TenantManage.tenantAppMenuIndex:input_type -> sys.TenantAppMenuIndexReq
	14,  // 146: sys.TenantManage.tenantAppMenuUpdate:input_type -> sys.TenantAppMenu
	25,  // 147: sys.TenantManage.tenantAppMenuDelete:input_type -> sys.WithAppCodeID
	15,  // 148: sys.TenantManage.tenantAppApiCreate:input_type -> sys.TenantApiInfo
	16,  // 149: sys.TenantManage.tenantAppApiIndex:input_type -> sys.TenantAppApiIndexReq
	15,  // 150: sys.TenantManage.tenantAppApiUpdate:input_type -> sys.TenantApiInfo
	25,  // 151: sys.TenantManage.tenantAppApiDelete:input_type -> sys.WithAppCodeID
	55,  // 152: sys.UserManage.userInfoCreate:output_type -> sys.UserCreateResp
	64,  // 153: sys.UserManage.userInfoIndex:output_type -> sys.UserInfoIndexResp
	21,  // 154: sys.UserManage.userInfoUpdate:output_type -> sys.Response
	54,  // 155: sys.UserManage.userInfoRead:output_type -> sys.UserInfo
	21,  // 156: sys.UserManage.userInfoDelete:output_type -> sys.Response
	73,  // 157: sys.UserManage.userLogin:output_type -> sys.UserLoginResp
	21,  // 158: sys.UserManage.userForgetPwd:output_type -> sys.Response
	69,  // 159: sys.UserManage.userCaptcha:output_type -> sys.UserCaptchaResp
	57,  // 160: sys.UserManage.userCheckToken:output_type -> sys.UserCheckTokenResp
	75,  // 161: sys.UserManage.userRegister:output_type -> sys.UserRegisterResp
	21,  // 162: sys.UserManage.userChangePwd:output_type -> sys.Response
	77,  // 163: sys.UserManage.userRoleIndex:output_type -> sys.UserRoleIndexResp
	21,  // 164: sys.UserManage.userRoleMultiUpdate:output_type -> sys.Response
	21,  // 165: sys.UserManage.userProjectMultiUpdate:output_type -> sys.Response
	82,  // 166: sys.UserManage.userProjectIndex:output_type -> sys.UserProjectIndexResp
	21,  // 167: sys.UserManage.userAreaMultiUpdate:output_type -> sys.Response
	86,  // 168: sys.UserManage.userAreaIndex:output_type -> sys.UserAreaIndexResp
	23,  // 169: sys.MenuManage.menuInfoCreate:output_type -> sys.WithID
	102, // 170: sys.MenuManage.menuInfoIndex:output_type -> sys.MenuInfoIndexResp
	21,  // 171: sys.MenuManage.menuInfoUpdate:output_type -> sys.Response
	21,  // 172: sys.MenuManage.menuInfoDelete:output_type -> sys.Response
	23,  // 173: sys.RoleManage.roleInfoCreate:output_type -> sys.WithID
	97,  // 174: sys.RoleManage.roleInfoIndex:output_type -> sys.RoleInfoIndexResp
	21,  // 175: sys.RoleManage.roleInfoUpdate:output_type -> sys.Response
	21,  // 176: sys.RoleManage.roleInfoDelete:output_type -> sys.Response
	40,  // 177: sys.RoleManage.roleMenuIndex:output_type -> sys.RoleMenuIndexResp
	21,  // 178: sys.RoleManage.roleMenuMultiUpdate:output_type -> sys.Response
	42,  // 179: sys.RoleManage.roleAppIndex:output_type -> sys.RoleAppIndexResp
	21,  // 180: sys.RoleManage.roleAppMultiUpdate:output_type -> sys.Response
	44,  // 181: sys.RoleManage.roleModuleIndex:output_type -> sys.RoleModuleIndexResp
	21,  // 182: sys.RoleManage.roleModuleMultiUpdate:output_type -> sys.Response
	21,  // 183: sys.RoleManage.roleApiAuth:output_type -> sys.Response
	21,  // 184: sys.RoleManage.roleApiMultiUpdate:output_type -> sys.Response
	38,  // 185: sys.RoleManage.roleApiIndex:output_type -> sys.RoleApiIndexResp
	23,  // 186: sys.AppManage.appInfoCreate:output_type -> sys.WithID
	92,  // 187: sys.AppManage.appInfoIndex:output_type -> sys.AppInfoIndexResp
	21,  // 188: sys.AppManage.appInfoUpdate:output_type -> sys.Response
	21,  // 189: sys.AppManage.appInfoDelete:output_type -> sys.Response
	90,  // 190: sys.AppManage.appInfoRead:output_type -> sys.AppInfo
	95,  // 191: sys.AppManage.appModuleIndex:output_type -> sys.AppModuleIndexResp
	21,  // 192: sys.AppManage.appModuleMultiUpdate:output_type -> sys.Response
	23,  // 193: sys.ModuleManage.moduleInfoCreate:output_type -> sys.WithID
	89,  // 194: sys.ModuleManage.moduleInfoIndex:output_type -> sys.ModuleInfoIndexResp
	21,  // 195: sys.ModuleManage.moduleInfoUpdate:output_type -> sys.Response
	21,  // 196: sys.ModuleManage.moduleInfoDelete:output_type -> sys.Response
	87,  // 197: sys.ModuleManage.moduleInfoRead:output_type -> sys.ModuleInfo
	23,  // 198: sys.ModuleManage.moduleMenuCreate:output_type -> sys.WithID
	102, // 199: sys.ModuleManage.moduleMenuIndex:output_type -> sys.MenuInfoIndexResp
	21,  // 200: sys.ModuleManage.moduleMenuUpdate:output_type -> sys.Response
	21,  // 201: sys.ModuleManage.moduleMenuDelete:output_type -> sys.Response
	23,  // 202: sys.ModuleManage.moduleApiCreate:output_type -> sys.WithID
	107, // 203: sys.ModuleManage.moduleApiIndex:output_type -> sys.ApiInfoIndexResp
	21,  // 204: sys.ModuleManage.moduleApiUpdate:output_type -> sys.Response
	21,  // 205: sys.ModuleManage.moduleApiDelete:output_type -> sys.Response
	104, // 206: sys.Common.config:output_type -> sys.configResp
	48,  // 207: sys.Log.loginLogIndex:output_type -> sys.LoginLogIndexResp
	51,  // 208: sys.Log.operLogIndex:output_type -> sys.OperLogIndexResp
	21,  // 209: sys.Log.loginLogCreate:output_type -> sys.Response
	21,  // 210: sys.Log.operLogCreate:output_type -> sys.Response
	23,  // 211: sys.ApiManage.apiInfoCreate:output_type -> sys.WithID
	107, // 212: sys.ApiManage.apiInfoIndex:output_type -> sys.ApiInfoIndexResp
	21,  // 213: sys.ApiManage.apiInfoUpdate:output_type -> sys.Response
	21,  // 214: sys.ApiManage.apiInfoDelete:output_type -> sys.Response
	26,  // 215: sys.ProjectManage.projectInfoCreate:output_type -> sys.ProjectWithID
	21,  // 216: sys.ProjectManage.projectInfoUpdate:output_type -> sys.Response
	21,  // 217: sys.ProjectManage.projectInfoDelete:output_type -> sys.Response
	27,  // 218: sys.ProjectManage.projectInfoRead:output_type -> sys.ProjectInfo
	29,  // 219: sys.ProjectManage.projectInfoIndex:output_type -> sys.ProjectInfoIndexResp
	31,  // 220: sys.AreaManage.areaInfoCreate:output_type -> sys.AreaWithID
	21,  // 221: sys.AreaManage.areaInfoUpdate:output_type -> sys.Response
	21,  // 222: sys.AreaManage.areaInfoDelete:output_type -> sys.Response
	30,  // 223: sys.AreaManage.areaInfoRead:output_type -> sys.AreaInfo
	34,  // 224: sys.AreaManage.areaInfoIndex:output_type -> sys.AreaInfoIndexResp
	23,  // 225: sys.TenantManage.tenantInfoCreate:output_type -> sys.WithID
	21,  // 226: sys.TenantManage.tenantInfoUpdate:output_type -> sys.Response
	21,  // 227: sys.TenantManage.tenantInfoDelete:output_type -> sys.Response
	1,   // 228: sys.TenantManage.tenantInfoRead:output_type -> sys.TenantInfo
	3,   // 229: sys.TenantManage.tenantInfoIndex:output_type -> sys.TenantInfoIndexResp
	8,   // 230: sys.TenantManage.tenantAppIndex:output_type -> sys.TenantAppIndexResp
	21,  // 231: sys.TenantManage.tenantAppCreate:output_type -> sys.Response
	21,  // 232: sys.TenantManage.tenantAppDelete:output_type -> sys.Response
	21,  // 233: sys.TenantManage.tenantAppModuleMultiCreate:output_type -> sys.Response
	21,  // 234: sys.TenantManage.tenantAppModuleCreate:output_type -> sys.Response
	11,  // 235: sys.TenantManage.tenantAppModuleIndex:output_type -> sys.TenantModuleIndexResp
	21,  // 236: sys.TenantManage.tenantAppModuleDelete:output_type -> sys.Response
	23,  // 237: sys.TenantManage.tenantAppMenuCreate:output_type -> sys.WithID
	13,  // 238: sys.TenantManage.tenantAppMenuIndex:output_type -> sys.TenantAppMenuIndexResp
	21,  // 239: sys.TenantManage.tenantAppMenuUpdate:output_type -> sys.Response
	21,  // 240: sys.TenantManage.tenantAppMenuDelete:output_type -> sys.Response
	23,  // 241: sys.TenantManage.tenantAppApiCreate:output_type -> sys.WithID
	17,  // 242: sys.TenantManage.tenantAppApiIndex:output_type -> sys.TenantAppApiIndexResp
	21,  // 243: sys.TenantManage.tenantAppApiUpdate:output_type -> sys.Response
	21,  // 244: sys.TenantManage.tenantAppApiDelete:output_type -> sys.Response
	152, // [152:245] is the sub-list for method output_type
	59,  // [59:152] is the sub-list for method input_type
	59,  // [59:59] is the sub-list for extension type_name
	59,  // [59:59] is the sub-list for extension extendee
	0,   // [0:59] is the sub-list for field type_name
}

func init() { file_proto_sys_proto_init() }
func file_proto_sys_proto_init() {
	if File_proto_sys_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_sys_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantInfoCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantAppCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantAppWithIDOrCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantAppModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantAppIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantAppIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantAppMultiUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantModuleIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantModuleIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantAppMenuIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantAppMenuIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantAppMenu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantApiInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantAppApiIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantAppApiIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantModuleCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantModuleWithIDOrCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithIDCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithAppCodeID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectWithID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaWithID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaInfoReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthApiInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleApiMultiUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleApiIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleApiIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleMenuIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleMenuIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAppIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAppIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleModuleIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleModuleIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DateRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginLogIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginLogInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginLogIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperLogIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperLogInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperLogIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginLogCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperLogCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCreateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCheckTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCheckTokenResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAppMultiUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleModuleMultiUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleMenuMultiUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleApiAuthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JwtToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCaptchaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCaptchaResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserForgetPwdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserChangePwdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRegisterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRoleIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRoleIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRoleMultiUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserProjectMultiUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserProjectIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserProjectIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserArea); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAreaMultiUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAreaIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAreaIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppModuleMultiUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppModuleIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppModuleIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAppUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Map); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageInfo_OrderBy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_sys_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   110,
			NumExtensions: 0,
			NumServices:   11,
		},
		GoTypes:           file_proto_sys_proto_goTypes,
		DependencyIndexes: file_proto_sys_proto_depIdxs,
		MessageInfos:      file_proto_sys_proto_msgTypes,
	}.Build()
	File_proto_sys_proto = out.File
	file_proto_sys_proto_rawDesc = nil
	file_proto_sys_proto_goTypes = nil
	file_proto_sys_proto_depIdxs = nil
}
