// Code generated by goctl. DO NOT EDIT.
// Source: sys.proto

package server

import (
	"context"

	"github.com/i-Things/things/src/syssvr/internal/logic/usermanage"
	"github.com/i-Things/things/src/syssvr/internal/svc"
	"github.com/i-Things/things/src/syssvr/pb/sys"
)

type UserManageServer struct {
	svcCtx *svc.ServiceContext
	sys.UnimplementedUserManageServer
}

func NewUserManageServer(svcCtx *svc.ServiceContext) *UserManageServer {
	return &UserManageServer{
		svcCtx: svcCtx,
	}
}

func (s *UserManageServer) UserInfoCreate(ctx context.Context, in *sys.UserInfoCreateReq) (*sys.UserCreateResp, error) {
	l := usermanagelogic.NewUserInfoCreateLogic(ctx, s.svcCtx)
	return l.UserInfoCreate(in)
}

func (s *UserManageServer) UserInfoIndex(ctx context.Context, in *sys.UserInfoIndexReq) (*sys.UserInfoIndexResp, error) {
	l := usermanagelogic.NewUserInfoIndexLogic(ctx, s.svcCtx)
	return l.UserInfoIndex(in)
}

func (s *UserManageServer) UserInfoUpdate(ctx context.Context, in *sys.UserInfo) (*sys.Response, error) {
	l := usermanagelogic.NewUserInfoUpdateLogic(ctx, s.svcCtx)
	return l.UserInfoUpdate(in)
}

func (s *UserManageServer) UserInfoRead(ctx context.Context, in *sys.UserInfoReadReq) (*sys.UserInfo, error) {
	l := usermanagelogic.NewUserInfoReadLogic(ctx, s.svcCtx)
	return l.UserInfoRead(in)
}

func (s *UserManageServer) UserInfoDelete(ctx context.Context, in *sys.UserInfoDeleteReq) (*sys.Response, error) {
	l := usermanagelogic.NewUserInfoDeleteLogic(ctx, s.svcCtx)
	return l.UserInfoDelete(in)
}

func (s *UserManageServer) UserLogin(ctx context.Context, in *sys.UserLoginReq) (*sys.UserLoginResp, error) {
	l := usermanagelogic.NewUserLoginLogic(ctx, s.svcCtx)
	return l.UserLogin(in)
}

func (s *UserManageServer) UserForgetPwd(ctx context.Context, in *sys.UserForgetPwdReq) (*sys.Response, error) {
	l := usermanagelogic.NewUserForgetPwdLogic(ctx, s.svcCtx)
	return l.UserForgetPwd(in)
}

func (s *UserManageServer) UserCaptcha(ctx context.Context, in *sys.UserCaptchaReq) (*sys.UserCaptchaResp, error) {
	l := usermanagelogic.NewUserCaptchaLogic(ctx, s.svcCtx)
	return l.UserCaptcha(in)
}

func (s *UserManageServer) UserCheckToken(ctx context.Context, in *sys.UserCheckTokenReq) (*sys.UserCheckTokenResp, error) {
	l := usermanagelogic.NewUserCheckTokenLogic(ctx, s.svcCtx)
	return l.UserCheckToken(in)
}

func (s *UserManageServer) UserRegister(ctx context.Context, in *sys.UserRegisterReq) (*sys.UserRegisterResp, error) {
	l := usermanagelogic.NewUserRegisterLogic(ctx, s.svcCtx)
	return l.UserRegister(in)
}

func (s *UserManageServer) UserRoleIndex(ctx context.Context, in *sys.UserRoleIndexReq) (*sys.UserRoleIndexResp, error) {
	l := usermanagelogic.NewUserRoleIndexLogic(ctx, s.svcCtx)
	return l.UserRoleIndex(in)
}

func (s *UserManageServer) UserRoleMultiUpdate(ctx context.Context, in *sys.UserRoleMultiUpdateReq) (*sys.Response, error) {
	l := usermanagelogic.NewUserRoleMultiUpdateLogic(ctx, s.svcCtx)
	return l.UserRoleMultiUpdate(in)
}

func (s *UserManageServer) UserAuthProjectMultiUpdate(ctx context.Context, in *sys.UserAuthProjectMultiUpdateReq) (*sys.Response, error) {
	l := usermanagelogic.NewUserAuthProjectMultiUpdateLogic(ctx, s.svcCtx)
	return l.UserAuthProjectMultiUpdate(in)
}

func (s *UserManageServer) UserAuthProjectIndex(ctx context.Context, in *sys.UserAuthProjectIndexReq) (*sys.UserAuthProjectIndexResp, error) {
	l := usermanagelogic.NewUserAuthProjectIndexLogic(ctx, s.svcCtx)
	return l.UserAuthProjectIndex(in)
}

func (s *UserManageServer) UserAuthAreaMultiUpdate(ctx context.Context, in *sys.UserAuthAreaMultiUpdateReq) (*sys.Response, error) {
	l := usermanagelogic.NewUserAuthAreaMultiUpdateLogic(ctx, s.svcCtx)
	return l.UserAuthAreaMultiUpdate(in)
}

func (s *UserManageServer) UserAuthAreaIndex(ctx context.Context, in *sys.UserAuthAreaIndexReq) (*sys.UserAuthAreaIndexResp, error) {
	l := usermanagelogic.NewUserAuthAreaIndexLogic(ctx, s.svcCtx)
	return l.UserAuthAreaIndex(in)
}
