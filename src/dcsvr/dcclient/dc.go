// Code generated by goctl. DO NOT EDIT!
// Source: dc.proto

package dcclient

import (
	"context"

	"gitee.com/godLei6/things/src/dcsvr/dc"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	PageInfo             = dc.PageInfo
	Response             = dc.Response
	GroupMember          = dc.GroupMember
	ManageGroupInfoReq   = dc.ManageGroupInfoReq
	GetGroupMemberResp   = dc.GetGroupMemberResp
	GroupInfo            = dc.GroupInfo
	ManageGroupMemberReq = dc.ManageGroupMemberReq
	GetGroupInfoReq      = dc.GetGroupInfoReq
	GetGroupInfoResp     = dc.GetGroupInfoResp
	GetGroupMemberReq    = dc.GetGroupMemberReq

	Dc interface {
		// 管理组
		ManageGroupInfo(ctx context.Context, in *ManageGroupInfoReq) (*GroupInfo, error)
		// 管理组成员
		ManageGroupMember(ctx context.Context, in *ManageGroupMemberReq) (*GroupMember, error)
		// 获取组信息
		GetGroupInfo(ctx context.Context, in *GetGroupInfoReq) (*GetGroupInfoResp, error)
		// 获取组成员
		GetGroupMember(ctx context.Context, in *GetGroupMemberReq) (*GetGroupMemberResp, error)
	}

	defaultDc struct {
		cli zrpc.Client
	}
)

func NewDc(cli zrpc.Client) Dc {
	return &defaultDc{
		cli: cli,
	}
}

// 管理组
func (m *defaultDc) ManageGroupInfo(ctx context.Context, in *ManageGroupInfoReq) (*GroupInfo, error) {
	client := dc.NewDcClient(m.cli.Conn())
	return client.ManageGroupInfo(ctx, in)
}

// 管理组成员
func (m *defaultDc) ManageGroupMember(ctx context.Context, in *ManageGroupMemberReq) (*GroupMember, error) {
	client := dc.NewDcClient(m.cli.Conn())
	return client.ManageGroupMember(ctx, in)
}

// 获取组信息
func (m *defaultDc) GetGroupInfo(ctx context.Context, in *GetGroupInfoReq) (*GetGroupInfoResp, error) {
	client := dc.NewDcClient(m.cli.Conn())
	return client.GetGroupInfo(ctx, in)
}

// 获取组成员
func (m *defaultDc) GetGroupMember(ctx context.Context, in *GetGroupMemberReq) (*GetGroupMemberResp, error) {
	client := dc.NewDcClient(m.cli.Conn())
	return client.GetGroupMember(ctx, in)
}
