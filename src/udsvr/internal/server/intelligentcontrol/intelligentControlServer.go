// Code generated by goctl. DO NOT EDIT.
// Source: ud.proto

package server

import (
	"context"

	"github.com/i-Things/things/src/udsvr/internal/logic/intelligentcontrol"
	"github.com/i-Things/things/src/udsvr/internal/svc"
	"github.com/i-Things/things/src/udsvr/pb/ud"
)

type IntelligentControlServer struct {
	svcCtx *svc.ServiceContext
	ud.UnimplementedIntelligentControlServer
}

func NewIntelligentControlServer(svcCtx *svc.ServiceContext) *IntelligentControlServer {
	return &IntelligentControlServer{
		svcCtx: svcCtx,
	}
}

// 场景
func (s *IntelligentControlServer) SceneInfoCreate(ctx context.Context, in *ud.SceneInfo) (*ud.WithID, error) {
	l := intelligentcontrollogic.NewSceneInfoCreateLogic(ctx, s.svcCtx)
	return l.SceneInfoCreate(in)
}

func (s *IntelligentControlServer) SceneInfoUpdate(ctx context.Context, in *ud.SceneInfo) (*ud.Empty, error) {
	l := intelligentcontrollogic.NewSceneInfoUpdateLogic(ctx, s.svcCtx)
	return l.SceneInfoUpdate(in)
}

func (s *IntelligentControlServer) SceneInfoDelete(ctx context.Context, in *ud.WithID) (*ud.Empty, error) {
	l := intelligentcontrollogic.NewSceneInfoDeleteLogic(ctx, s.svcCtx)
	return l.SceneInfoDelete(in)
}

func (s *IntelligentControlServer) SceneInfoIndex(ctx context.Context, in *ud.SceneInfoIndexReq) (*ud.SceneInfoIndexResp, error) {
	l := intelligentcontrollogic.NewSceneInfoIndexLogic(ctx, s.svcCtx)
	return l.SceneInfoIndex(in)
}

func (s *IntelligentControlServer) SceneInfoRead(ctx context.Context, in *ud.WithID) (*ud.SceneInfo, error) {
	l := intelligentcontrollogic.NewSceneInfoReadLogic(ctx, s.svcCtx)
	return l.SceneInfoRead(in)
}

func (s *IntelligentControlServer) SceneManuallyTrigger(ctx context.Context, in *ud.WithID) (*ud.Empty, error) {
	l := intelligentcontrollogic.NewSceneManuallyTriggerLogic(ctx, s.svcCtx)
	return l.SceneManuallyTrigger(in)
}
