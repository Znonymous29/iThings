// Code generated by goctl. DO NOT EDIT.
// Source: ud.proto

package ud

import (
	"context"

	"github.com/i-Things/things/src/udsvr/internal/svc"
	"github.com/i-Things/things/src/udsvr/pb/ud"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = ud.Request
	Response = ud.Response

	Ud interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultUd struct {
		cli zrpc.Client
	}

	directUd struct {
		svcCtx *svc.ServiceContext
		svr    ud.UdServer
	}
)

func NewUd(cli zrpc.Client) Ud {
	return &defaultUd{
		cli: cli,
	}
}

func NewDirectUd(svcCtx *svc.ServiceContext, svr ud.UdServer) Ud {
	return &directUd{
		svr:    svr,
		svcCtx: svcCtx,
	}
}

func (m *defaultUd) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := ud.NewUdClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}

func (d *directUd) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	return d.svr.Ping(ctx, in)
}
