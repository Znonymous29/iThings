// Code generated by goctl. DO NOT EDIT.
// Source: ud.proto

package deviceops

import (
	"context"

	"github.com/i-Things/things/src/udsvr/internal/svc"
	"github.com/i-Things/things/src/udsvr/pb/ud"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DeviceMwo          = ud.DeviceMwo
	DeviceMwoIndexReq  = ud.DeviceMwoIndexReq
	DeviceMwoIndexResp = ud.DeviceMwoIndexResp
	Empty              = ud.Empty
	PageInfo           = ud.PageInfo
	SceneInfo          = ud.SceneInfo
	SceneInfoIndexReq  = ud.SceneInfoIndexReq
	SceneInfoIndexResp = ud.SceneInfoIndexResp
	TimeRange          = ud.TimeRange
	WithID             = ud.WithID

	DeviceOps interface {
		// 设备维护工单 device Maintenance Work Order
		DeviceMwoCreate(ctx context.Context, in *DeviceMwo, opts ...grpc.CallOption) (*WithID, error)
		DeviceMwoUpdate(ctx context.Context, in *DeviceMwo, opts ...grpc.CallOption) (*Empty, error)
		DeviceMwoIndex(ctx context.Context, in *DeviceMwoIndexReq, opts ...grpc.CallOption) (*DeviceMwoIndexResp, error)
	}

	defaultDeviceOps struct {
		cli zrpc.Client
	}

	directDeviceOps struct {
		svcCtx *svc.ServiceContext
		svr    ud.DeviceOpsServer
	}
)

func NewDeviceOps(cli zrpc.Client) DeviceOps {
	return &defaultDeviceOps{
		cli: cli,
	}
}

func NewDirectDeviceOps(svcCtx *svc.ServiceContext, svr ud.DeviceOpsServer) DeviceOps {
	return &directDeviceOps{
		svr:    svr,
		svcCtx: svcCtx,
	}
}

// 设备维护工单 device Maintenance Work Order
func (m *defaultDeviceOps) DeviceMwoCreate(ctx context.Context, in *DeviceMwo, opts ...grpc.CallOption) (*WithID, error) {
	client := ud.NewDeviceOpsClient(m.cli.Conn())
	return client.DeviceMwoCreate(ctx, in, opts...)
}

// 设备维护工单 device Maintenance Work Order
func (d *directDeviceOps) DeviceMwoCreate(ctx context.Context, in *DeviceMwo, opts ...grpc.CallOption) (*WithID, error) {
	return d.svr.DeviceMwoCreate(ctx, in)
}

func (m *defaultDeviceOps) DeviceMwoUpdate(ctx context.Context, in *DeviceMwo, opts ...grpc.CallOption) (*Empty, error) {
	client := ud.NewDeviceOpsClient(m.cli.Conn())
	return client.DeviceMwoUpdate(ctx, in, opts...)
}

func (d *directDeviceOps) DeviceMwoUpdate(ctx context.Context, in *DeviceMwo, opts ...grpc.CallOption) (*Empty, error) {
	return d.svr.DeviceMwoUpdate(ctx, in)
}

func (m *defaultDeviceOps) DeviceMwoIndex(ctx context.Context, in *DeviceMwoIndexReq, opts ...grpc.CallOption) (*DeviceMwoIndexResp, error) {
	client := ud.NewDeviceOpsClient(m.cli.Conn())
	return client.DeviceMwoIndex(ctx, in, opts...)
}

func (d *directDeviceOps) DeviceMwoIndex(ctx context.Context, in *DeviceMwoIndexReq, opts ...grpc.CallOption) (*DeviceMwoIndexResp, error) {
	return d.svr.DeviceMwoIndex(ctx, in)
}
