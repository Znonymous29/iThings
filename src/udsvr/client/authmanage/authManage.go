// Code generated by goctl. DO NOT EDIT.
// Source: ud.proto

package authmanage

import (
	"context"

	"github.com/i-Things/things/src/udsvr/internal/svc"
	"github.com/i-Things/things/src/udsvr/pb/ud"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AutoInfo             = ud.AutoInfo
	AutoInfoIndexReq     = ud.AutoInfoIndexReq
	AutoInfoIndexResp    = ud.AutoInfoIndexResp
	Empty                = ud.Empty
	PageInfo             = ud.PageInfo
	SceneDevice          = ud.SceneDevice
	SceneDeviceIndexReq  = ud.SceneDeviceIndexReq
	SceneDeviceIndexResp = ud.SceneDeviceIndexResp
	SceneInfo            = ud.SceneInfo
	SceneInfoIndexReq    = ud.SceneInfoIndexReq
	SceneInfoIndexResp   = ud.SceneInfoIndexResp
	TimeRange            = ud.TimeRange
	WithID               = ud.WithID

	AuthManage interface {
		// 用户设备列表
		UserDeviceIndex(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	}

	defaultAuthManage struct {
		cli zrpc.Client
	}

	directAuthManage struct {
		svcCtx *svc.ServiceContext
		svr    ud.AuthManageServer
	}
)

func NewAuthManage(cli zrpc.Client) AuthManage {
	return &defaultAuthManage{
		cli: cli,
	}
}

func NewDirectAuthManage(svcCtx *svc.ServiceContext, svr ud.AuthManageServer) AuthManage {
	return &directAuthManage{
		svr:    svr,
		svcCtx: svcCtx,
	}
}

// 用户设备列表
func (m *defaultAuthManage) UserDeviceIndex(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	client := ud.NewAuthManageClient(m.cli.Conn())
	return client.UserDeviceIndex(ctx, in, opts...)
}

// 用户设备列表
func (d *directAuthManage) UserDeviceIndex(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	return d.svr.UserDeviceIndex(ctx, in)
}
