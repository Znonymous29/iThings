info(
    title: "产品管理模块"
    desc: "产品管理模块"
    author: "杨磊"
    email: "603685348@qq.com"
    version: "v1"
)
import "common.api"  //公共结构体定义

@server(
    group : things/product/schema
    prefix: /api/v1/things/product/schema
)
service api {
    @doc "更新产品物模型"
    @handler update
    post /update (ProductSchemaUpdateReq) returns ()
    @doc "获取产品物模型"
    @handler read
    post /read (ProductSchemaReadReq) returns (ProductSchemaReadResp)
}

type (
    ProductSchema struct {
        CreatedTime int64 `json:"createdTime,optional,string"`   //创建时间 只读
        ProductID string `json:"productID,optional"`             //产品id 只读
        Schema string `json:"schema,optional"`                   //数据模板
    }

    ProductSchemaUpdateReq struct {
        ProductID string `json:"productID"`         //产品id
        Schema string `json:"schema"`               //数据模板
    }

    ProductSchemaReadReq struct {
        ProductID string `json:"productID"` //产品id
    }

    ProductSchemaReadResp struct {
        ProductSchema
    }
)


type (
/*物模型条目*/
    SchemaItem struct {
        Type int8 `json:"type"`         //物模型类型 1:property属性 2:event事件 3:action行为
        ID string `json:"id"`           //标识符
        Name string `json:"name"`       //功能名称
        Desc string `json:"desc"`       //描述
        Mode string `json:"mode,optional"`       //读写类型:rw(可读可写) r(只读) --属性限定
        Required bool `json:"required"`  //是否必须
        EventType string `json:"eventType,optional"`        //事件类型: 信息:info  告警alert  故障:fault  --事件限定
        EventParams []Param `json:"eventParams,optional"`   //事件参数 --事件限定
        PropertyDefine *Define `json:"propertyDefine,optional"`   //数据定义 --属性限定
        ActionInput []Param `json:"actionInput,optional"`     //调用参数 --行为限定
        ActionOutput []Param `json:"actionOutput,optional"`   //返回参数 --行为限定
    }

/*数据类型定义*/
    Define struct {
        Type string `json:"type"`                             //参数类型:bool int string struct float timestamp array enum
        Maping map[string]string `json:"mapping,omitempty"`   //枚举及bool类型:bool enum
        Min string `json:"min,omitempty"`                     //数值最小值:int  float
        Max string `json:"max,omitempty"`                     //数值最大值:int string float
        Start string `json:"start,omitempty"`                 //初始值:int float
        Step string `json:"step,omitempty"`                   //步长:int float
        Unit string `json:"unit,omitempty"`                   //单位:int float
        Specs []Spec `json:"specs,omitempty"`                 //结构体:struct
        ArrayInfo *Define `json:"arrayInfo,omitempty"`        //数组:array
    }

    /*结构体说明*/
    Spec struct {
        ID string `json:"id"`             //参数标识符
        Name string `json:"name"`         //参数名称
        DataType Define `json:"dataType"` //参数定义
    }

    /*参数*/
    Param struct {
        ID string `json:"id"`                   //参数标识符
        Name string `json:"name"`               //参数名称
        Define Define `json:"define,omitempty"` //参数定义
    }
)