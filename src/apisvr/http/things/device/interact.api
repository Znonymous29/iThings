info(
    title: "认证管理(p2)"
    desc: "认证管理(p2)"
    author: "杨磊"
    email: "603685348@qq.com"
    version: "v1"
)

@server(
    group : things/device/interact
    prefix: /api/v1/things/device/interact
    middleware: CheckToken
)
service api {
    @doc "调用设备行为"
    @handler sendAction
    post /send-action (DeviceInteractSendActionReq) returns (DeviceInteractSendActionResp)
    @doc "获取调用设备行为的结果"
    @handler actionRead
    post /action-read (DeviceInteractRespReadReq) returns (DeviceInteractSendActionResp)
    @doc "调用设备属性"
    @handler sendProperty
    post /send-property (DeviceInteractSendPropertyReq) returns (DeviceInteractSendPropertyResp)
    @doc "批量调用设备属性"
    @handler multiSendProperty
    post /multi-send-property (DeviceInteractMultiSendPropertyReq) returns (DeviceInteractMultiSendPropertyResp)
    @doc "获取调用设备属性的结果"
    @handler propertyRead
    post /property-read (DeviceInteractRespReadReq) returns (DeviceInteractSendPropertyResp)
    @doc "发送消息给设备"
    @handler sendMsg
    post /send-msg (DeviceInteractSendMsgReq) returns ()
}

type DeviceInteractSendMsgReq struct{
    Topic   string `json:"topic"`     //发送的topic
    Payload string `json:"payload"` //发送的数据
}

type DeviceInteractSendPropertyReq struct {
    ProductID     string `json:"productID"`     //产品id
    DeviceName    string `json:"deviceName"`    //设备名
    Data          string `json:"data"`          //属性数据, JSON格式字符串, 注意字段需要在物模型属性里定义
    IsAsync       bool `json:"isAsync,optional"` //是否异步操作 异步情况通过获取接口来获取
}
type DeviceInteractSendPropertyResp struct {
    Code        int64  `json:"code"`        //设备返回状态码
    Status      string `json:"status"`      //返回状态
    ClientToken string `json:"clientToken"` //调用id
}
type DeviceInteractRespReadReq struct{
    ProductID   string `json:"productID"`   //产品id
    DeviceName  string `json:"deviceName"`  //设备名
    ClientToken  string `json:"clientToken"`  //调用id
}

type DeviceInteractSendActionReq struct {
    ProductID   string `json:"productID"`   //产品id
    DeviceName  string `json:"deviceName"`  //设备名
    ActionID    string `json:"actionId"`    //产品数据模板中行为功能的标识符，由开发者自行根据设备的应用场景定义
    InputParams string `json:"inputParams"` //输入参数
    IsAsync     bool `json:"isAsync,optional"` //是否异步操作 异步情况通过获取接口来获取
}

type DeviceInteractSendActionResp struct {
    ClientToken  string `json:"clientToken"`  //调用id
    OutputParams string `json:"outputParams"` //输出参数 注意：此字段可能返回 null，表示取不到有效值。
    Status       string `json:"status"`       //返回状态
    Code         int64  `json:"code"`         //设备返回状态码
}

type DeviceInteractMultiSendPropertyMsg struct {
    Code        int64  `json:"code"`        //设备返回状态码
    Status      string `json:"status"`      //返回状态
    ClientToken string `json:"clientToken"` //调用id
    SysCode     int64  `json:"sysCode"`      //系统错误码
    sysMsg      string `json:"sysMsg"`      //系统错误信息
}

type DeviceInteractMultiSendPropertyReq struct {
    ProductID     string `json:"productID"`      //产品id
    DeviceNames   []string `json:"deviceNames"`  //设备名列表
    Data          string `json:"data"`           //属性数据, JSON格式字符串, 注意字段需要在物模型属性里定义
}

type DeviceInteractMultiSendPropertyResp struct {
    list []*DeviceInteractMultiSendPropertyMsg `json:"list"` //批量设备返回结果列表
}