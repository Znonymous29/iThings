syntax = "proto3";


package rule;
option go_package="./pb/rule";

message Response {
}
message PageInfo{
  int64 page = 1;
  int64 size = 2;
}


service RuleEngine {
  rpc flowInfoCreate(FlowInfo) returns(Response);
  rpc flowInfoUpdate(FlowInfo) returns(Response);
  rpc flowInfoDelete(FlowInfoDeleteReq) returns(Response);
  rpc flowInfoIndex(FlowInfoIndexReq) returns(FlowInfoIndexResp);
  rpc flowInfoRead(FlowInfoReadReq) returns(FlowInfo);
}

//场景联动
service SceneLinkage{
  rpc sceneInfoCreate(SceneInfo) returns(Response);
  rpc sceneInfoUpdate(SceneInfo) returns(Response);
  rpc sceneInfoDelete(SceneInfoDeleteReq) returns(Response);
  rpc sceneInfoIndex(SceneInfoIndexReq) returns(SceneInfoIndexResp);
  rpc sceneInfoRead(SceneInfoReadReq) returns(SceneInfo);
}

message SceneInfoReadReq{
  int64 id = 1;//场景id
}

message SceneInfoIndexReq{
  PageInfo page = 1;//分页信息 只获取一个则不填
  string name =2;//场景名 模糊查询
  int64 state = 3;//状态: 1启用 2禁用
  string triggerType = 4;//触发类型 device: 设备触发 timer: 定时触发 manual:手动触发
}

message SceneInfoIndexResp{
  repeated SceneInfo list = 1;//设备信息
  int64  total = 2;//总数(只有分页的时候会返回)
}

message SceneInfoDeleteReq{
  int64 id = 1;
}

message SceneInfo{
  int64 id = 1;//场景id
  string name =2;//场景名
  int64 state = 3;//状态: 1启用 2禁用
  string desc = 4;//描述
  int64 createdTime = 5;//创建时间 秒级时间戳 只读
  string triggerType = 6;//触发类型 device: 设备触发 timer: 定时触发 manual:手动触发
  string trigger = 7;//触发器
  string when = 8;//触发条件
  string then = 9;//满足条件时执行的动作
}


















message FlowInfoReadReq{
  int64 id = 1;
}

message FlowInfoIndexReq{
  PageInfo page = 1;//分页信息 只获取一个则不填
}

message FlowInfoIndexResp{
  repeated FlowInfo list = 1;//设备信息
  int64  total = 2;//总数(只有分页的时候会返回)
}

message FlowInfoDeleteReq{
  int64 id = 1;
}

message FlowInfo{
  int64 id = 1;
  string name =2;//流的名称
  int64 isDisabled = 3;//是否禁用 1:是 2:否
  string desc = 4;//描述
  int64 createdTime = 5;//创建时间 秒级时间戳 只读

}