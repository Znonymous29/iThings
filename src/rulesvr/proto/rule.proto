syntax = "proto3";


package rule;
option go_package="./pb/rule";

message Response {
}
message PageInfo{
  int64 page = 1;
  int64 size = 2;
}
message DateRange{
  string start = 1;
  string end = 2;
}

service RuleEngine {
  rpc flowInfoCreate(FlowInfo) returns(Response);
  rpc flowInfoUpdate(FlowInfo) returns(Response);
  rpc flowInfoDelete(FlowInfoDeleteReq) returns(Response);
  rpc flowInfoIndex(FlowInfoIndexReq) returns(FlowInfoIndexResp);
  rpc flowInfoRead(FlowInfoReadReq) returns(FlowInfo);
}

//场景联动
service SceneLinkage{
  rpc sceneInfoCreate(SceneInfo) returns(Response);
  rpc sceneInfoUpdate(SceneInfo) returns(Response);
  rpc sceneInfoDelete(SceneInfoDeleteReq) returns(Response);
  rpc sceneInfoIndex(SceneInfoIndexReq) returns(SceneInfoIndexResp);
  rpc sceneInfoRead(SceneInfoReadReq) returns(SceneInfo);
}

//告警中心
service alarmCenter{
  rpc alarmInfoCreate(AlarmInfo)returns(Response);
  rpc alarmInfoUpdate(AlarmInfo)returns(Response);
  rpc alarmInfoDelete(AlarmInfoDeleteReq)returns(Response);
  rpc alarmInfoIndex(AlarmInfoIndexReq)returns(AlarmInfoIndexResp);

  //告警关联场景联动
  rpc alarmSceneCreateMulti(alarmSceneCreateMultiReq)returns(Response);//绑定场景联动
  rpc alarmSceneDelete(alarmSceneDeleteReq)returns(Response);//解绑场景联动
  rpc alarmSceneIndex(alarmSceneIndexReq)returns(alarmSceneIndexResp);//获取告警绑定的场景联动列表


  //告警日志
  rpc alarmLogIndex(AlarmLogIndexReq)returns(AlarmLogIndexResp);

  //告警处理记录
  rpc alarmDealRecordCreate(alarmDealRecordCreateReq)returns(Response);//处理告警
  rpc alarmDealRecordIndex(AlarmDealRecordIndexReq)returns(AlarmDealRecordIndexResp);

}

message alarmSceneIndexReq{
  int64 alarmID = 1;//告警配置ID
  PageInfo page       = 2;  // 分页信息 获取全部不填
}

message alarmSceneIndexResp{
  repeated SceneInfo list =1;
  int64  total = 2;//总数(只有分页的时候会返回)
}

message  alarmSceneDeleteReq{
  int64 alarmID = 1;//告警配置ID
  int64 sceneID = 2;//场景id
}

message  alarmSceneCreateMultiReq{
  int64 alarmID = 1;//告警配置ID
  repeated int64 sceneID = 2;//场景id
}

message alarmDealRecordCreateReq{
  int64 alarmID = 1;//告警配置ID
  string result = 2;//告警处理结果
}

message AlarmDeal{
  int64 id = 1;//编号
  int64 alarmID = 2;//告警配置ID
  string result = 3;//告警处理结果
  int64 type = 4;//告警处理类型（1人工 2其它）
  int64 alarmTime = 5;//告警时间
  int64 createdTime = 6;//告警处理时间
}

message AlarmDealRecordIndexReq{

}
message AlarmDealRecordIndexResp{

}

message AlarmLogInfo{
  int64 id = 1;//编号
  int64 alarmID = 2;//告警记录ID
  string serial = 3;//告警流水
  string sceneName = 4;//场景名称
  int64 sceneID = 5;//场景ID
  string desc = 6;//告警说明
  string createdTime = 7;//告警时间
}

message AlarmLogIndexReq{
  PageInfo page       = 1;  // 分页信息 只获取一个则不填
  DateRange date = 4;       // 时间范围
}

message AlarmLogIndexResp{
  repeated AlarmLogInfo list = 1;//告警日志
  int64  total = 2;//总数(只有分页的时候会返回)
}

message AlarmInfo{
  int64 id = 1;//编号
  string name = 2;//告警配置名称
  string desc = 3;//告警配置说明
  int64 level = 5;//告警配置级别（1提醒 2一般 3严重 4紧急 5超紧急）
  int64 state = 6;//告警配置状态（1启用 2禁用）
  int64 dealState = 7;//告警记录状态（1无告警 2告警中 3已处理）
  int64 lastAlarm = 8;//最新告警时间
  int64 createdTime = 9;//创建时间
}
message AlarmInfoDeleteReq{
  int64 id = 1;//告警id
}

message AlarmInfoIndexReq{
  PageInfo page       = 1;  // 分页信息 只获取一个则不填
  string name = 2;//告警配置名称 模糊查询
}

message AlarmInfoIndexResp{
  repeated AlarmInfo list = 1;//告警信息
  int64  total = 2;//总数(只有分页的时候会返回)
}

message SceneInfoReadReq{
  int64 id = 1;//场景id
}

message SceneInfoIndexReq{
  PageInfo page = 1;//分页信息 只获取一个则不填
  string name =2;//场景名 模糊查询
  int64 state = 3;//状态: 1启用 2禁用
  string triggerType = 4;//触发类型 device: 设备触发 timer: 定时触发 manual:手动触发
}

message SceneInfoIndexResp{
  repeated SceneInfo list = 1;//设备信息
  int64  total = 2;//总数(只有分页的时候会返回)
}

message SceneInfoDeleteReq{
  int64 id = 1;
}

message SceneInfo{
  int64 id = 1;//场景id
  string name =2;//场景名
  int64 state = 3;//状态: 1启用 2禁用
  string desc = 4;//描述
  int64 createdTime = 5;//创建时间 秒级时间戳 只读
  string triggerType = 6;//触发类型 device: 设备触发 timer: 定时触发 manual:手动触发
  string trigger = 7;//触发器
  string when = 8;//触发条件
  string then = 9;//满足条件时执行的动作
}


















message FlowInfoReadReq{
  int64 id = 1;
}

message FlowInfoIndexReq{
  PageInfo page = 1;//分页信息 只获取一个则不填
}

message FlowInfoIndexResp{
  repeated FlowInfo list = 1;//设备信息
  int64  total = 2;//总数(只有分页的时候会返回)
}

message FlowInfoDeleteReq{
  int64 id = 1;
}

message FlowInfo{
  int64 id = 1;
  string name =2;//流的名称
  int64 isDisabled = 3;//是否禁用 1:是 2:否
  string desc = 4;//描述
  int64 createdTime = 5;//创建时间 秒级时间戳 只读

}