// Code generated by goctl. DO NOT EDIT.
// Source: rule.proto

package alarmcenter

import (
	"context"

	"github.com/i-Things/things/src/rulesvr/internal/svc"
	"github.com/i-Things/things/src/rulesvr/pb/rule"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AlarmDeal                = rule.AlarmDeal
	AlarmDealRecordCreateReq = rule.AlarmDealRecordCreateReq
	AlarmDealRecordIndexReq  = rule.AlarmDealRecordIndexReq
	AlarmDealRecordIndexResp = rule.AlarmDealRecordIndexResp
	AlarmInfo                = rule.AlarmInfo
	AlarmInfoIndexReq        = rule.AlarmInfoIndexReq
	AlarmInfoIndexResp       = rule.AlarmInfoIndexResp
	AlarmLog                 = rule.AlarmLog
	AlarmLogIndexReq         = rule.AlarmLogIndexReq
	AlarmLogIndexResp        = rule.AlarmLogIndexResp
	AlarmRecord              = rule.AlarmRecord
	AlarmRecordIndexReq      = rule.AlarmRecordIndexReq
	AlarmRecordIndexResp     = rule.AlarmRecordIndexResp
	AlarmRelieveReq          = rule.AlarmRelieveReq
	AlarmSceneDeleteReq      = rule.AlarmSceneDeleteReq
	AlarmSceneIndexReq       = rule.AlarmSceneIndexReq
	AlarmSceneIndexResp      = rule.AlarmSceneIndexResp
	AlarmSceneMultiUpdateReq = rule.AlarmSceneMultiUpdateReq
	AlarmTriggerReq          = rule.AlarmTriggerReq
	Empty                    = rule.Empty
	FlowInfo                 = rule.FlowInfo
	FlowInfoIndexReq         = rule.FlowInfoIndexReq
	FlowInfoIndexResp        = rule.FlowInfoIndexResp
	PageInfo                 = rule.PageInfo
	SceneInfo                = rule.SceneInfo
	SceneInfoIndexReq        = rule.SceneInfoIndexReq
	SceneInfoIndexResp       = rule.SceneInfoIndexResp
	TimeRange                = rule.TimeRange
	WithID                   = rule.WithID

	AlarmCenter interface {
		AlarmInfoCreate(ctx context.Context, in *AlarmInfo, opts ...grpc.CallOption) (*WithID, error)
		AlarmInfoUpdate(ctx context.Context, in *AlarmInfo, opts ...grpc.CallOption) (*Empty, error)
		AlarmInfoDelete(ctx context.Context, in *WithID, opts ...grpc.CallOption) (*Empty, error)
		AlarmInfoIndex(ctx context.Context, in *AlarmInfoIndexReq, opts ...grpc.CallOption) (*AlarmInfoIndexResp, error)
		AlarmInfoRead(ctx context.Context, in *WithID, opts ...grpc.CallOption) (*AlarmInfo, error)
		// 告警关联场景联动
		AlarmSceneMultiUpdate(ctx context.Context, in *AlarmSceneMultiUpdateReq, opts ...grpc.CallOption) (*Empty, error)
		AlarmSceneDelete(ctx context.Context, in *AlarmSceneDeleteReq, opts ...grpc.CallOption) (*Empty, error)
		// 告警记录
		AlarmRecordIndex(ctx context.Context, in *AlarmRecordIndexReq, opts ...grpc.CallOption) (*AlarmRecordIndexResp, error)
		// 告警触发
		AlarmTrigger(ctx context.Context, in *AlarmTriggerReq, opts ...grpc.CallOption) (*WithID, error)
		// 告警解除
		AlarmRelieve(ctx context.Context, in *AlarmRelieveReq, opts ...grpc.CallOption) (*WithID, error)
		// 告警流水日志
		AlarmLogIndex(ctx context.Context, in *AlarmLogIndexReq, opts ...grpc.CallOption) (*AlarmLogIndexResp, error)
		// 告警处理记录
		AlarmDealRecordCreate(ctx context.Context, in *AlarmDealRecordCreateReq, opts ...grpc.CallOption) (*WithID, error)
		AlarmDealRecordIndex(ctx context.Context, in *AlarmDealRecordIndexReq, opts ...grpc.CallOption) (*AlarmDealRecordIndexResp, error)
	}

	defaultAlarmCenter struct {
		cli zrpc.Client
	}

	directAlarmCenter struct {
		svcCtx *svc.ServiceContext
		svr    rule.AlarmCenterServer
	}
)

func NewAlarmCenter(cli zrpc.Client) AlarmCenter {
	return &defaultAlarmCenter{
		cli: cli,
	}
}

func NewDirectAlarmCenter(svcCtx *svc.ServiceContext, svr rule.AlarmCenterServer) AlarmCenter {
	return &directAlarmCenter{
		svr:    svr,
		svcCtx: svcCtx,
	}
}

func (m *defaultAlarmCenter) AlarmInfoCreate(ctx context.Context, in *AlarmInfo, opts ...grpc.CallOption) (*WithID, error) {
	client := rule.NewAlarmCenterClient(m.cli.Conn())
	return client.AlarmInfoCreate(ctx, in, opts...)
}

func (d *directAlarmCenter) AlarmInfoCreate(ctx context.Context, in *AlarmInfo, opts ...grpc.CallOption) (*WithID, error) {
	return d.svr.AlarmInfoCreate(ctx, in)
}

func (m *defaultAlarmCenter) AlarmInfoUpdate(ctx context.Context, in *AlarmInfo, opts ...grpc.CallOption) (*Empty, error) {
	client := rule.NewAlarmCenterClient(m.cli.Conn())
	return client.AlarmInfoUpdate(ctx, in, opts...)
}

func (d *directAlarmCenter) AlarmInfoUpdate(ctx context.Context, in *AlarmInfo, opts ...grpc.CallOption) (*Empty, error) {
	return d.svr.AlarmInfoUpdate(ctx, in)
}

func (m *defaultAlarmCenter) AlarmInfoDelete(ctx context.Context, in *WithID, opts ...grpc.CallOption) (*Empty, error) {
	client := rule.NewAlarmCenterClient(m.cli.Conn())
	return client.AlarmInfoDelete(ctx, in, opts...)
}

func (d *directAlarmCenter) AlarmInfoDelete(ctx context.Context, in *WithID, opts ...grpc.CallOption) (*Empty, error) {
	return d.svr.AlarmInfoDelete(ctx, in)
}

func (m *defaultAlarmCenter) AlarmInfoIndex(ctx context.Context, in *AlarmInfoIndexReq, opts ...grpc.CallOption) (*AlarmInfoIndexResp, error) {
	client := rule.NewAlarmCenterClient(m.cli.Conn())
	return client.AlarmInfoIndex(ctx, in, opts...)
}

func (d *directAlarmCenter) AlarmInfoIndex(ctx context.Context, in *AlarmInfoIndexReq, opts ...grpc.CallOption) (*AlarmInfoIndexResp, error) {
	return d.svr.AlarmInfoIndex(ctx, in)
}

func (m *defaultAlarmCenter) AlarmInfoRead(ctx context.Context, in *WithID, opts ...grpc.CallOption) (*AlarmInfo, error) {
	client := rule.NewAlarmCenterClient(m.cli.Conn())
	return client.AlarmInfoRead(ctx, in, opts...)
}

func (d *directAlarmCenter) AlarmInfoRead(ctx context.Context, in *WithID, opts ...grpc.CallOption) (*AlarmInfo, error) {
	return d.svr.AlarmInfoRead(ctx, in)
}

// 告警关联场景联动
func (m *defaultAlarmCenter) AlarmSceneMultiUpdate(ctx context.Context, in *AlarmSceneMultiUpdateReq, opts ...grpc.CallOption) (*Empty, error) {
	client := rule.NewAlarmCenterClient(m.cli.Conn())
	return client.AlarmSceneMultiUpdate(ctx, in, opts...)
}

// 告警关联场景联动
func (d *directAlarmCenter) AlarmSceneMultiUpdate(ctx context.Context, in *AlarmSceneMultiUpdateReq, opts ...grpc.CallOption) (*Empty, error) {
	return d.svr.AlarmSceneMultiUpdate(ctx, in)
}

func (m *defaultAlarmCenter) AlarmSceneDelete(ctx context.Context, in *AlarmSceneDeleteReq, opts ...grpc.CallOption) (*Empty, error) {
	client := rule.NewAlarmCenterClient(m.cli.Conn())
	return client.AlarmSceneDelete(ctx, in, opts...)
}

func (d *directAlarmCenter) AlarmSceneDelete(ctx context.Context, in *AlarmSceneDeleteReq, opts ...grpc.CallOption) (*Empty, error) {
	return d.svr.AlarmSceneDelete(ctx, in)
}

// 告警记录
func (m *defaultAlarmCenter) AlarmRecordIndex(ctx context.Context, in *AlarmRecordIndexReq, opts ...grpc.CallOption) (*AlarmRecordIndexResp, error) {
	client := rule.NewAlarmCenterClient(m.cli.Conn())
	return client.AlarmRecordIndex(ctx, in, opts...)
}

// 告警记录
func (d *directAlarmCenter) AlarmRecordIndex(ctx context.Context, in *AlarmRecordIndexReq, opts ...grpc.CallOption) (*AlarmRecordIndexResp, error) {
	return d.svr.AlarmRecordIndex(ctx, in)
}

// 告警触发
func (m *defaultAlarmCenter) AlarmTrigger(ctx context.Context, in *AlarmTriggerReq, opts ...grpc.CallOption) (*WithID, error) {
	client := rule.NewAlarmCenterClient(m.cli.Conn())
	return client.AlarmTrigger(ctx, in, opts...)
}

// 告警触发
func (d *directAlarmCenter) AlarmTrigger(ctx context.Context, in *AlarmTriggerReq, opts ...grpc.CallOption) (*WithID, error) {
	return d.svr.AlarmTrigger(ctx, in)
}

// 告警解除
func (m *defaultAlarmCenter) AlarmRelieve(ctx context.Context, in *AlarmRelieveReq, opts ...grpc.CallOption) (*WithID, error) {
	client := rule.NewAlarmCenterClient(m.cli.Conn())
	return client.AlarmRelieve(ctx, in, opts...)
}

// 告警解除
func (d *directAlarmCenter) AlarmRelieve(ctx context.Context, in *AlarmRelieveReq, opts ...grpc.CallOption) (*WithID, error) {
	return d.svr.AlarmRelieve(ctx, in)
}

// 告警流水日志
func (m *defaultAlarmCenter) AlarmLogIndex(ctx context.Context, in *AlarmLogIndexReq, opts ...grpc.CallOption) (*AlarmLogIndexResp, error) {
	client := rule.NewAlarmCenterClient(m.cli.Conn())
	return client.AlarmLogIndex(ctx, in, opts...)
}

// 告警流水日志
func (d *directAlarmCenter) AlarmLogIndex(ctx context.Context, in *AlarmLogIndexReq, opts ...grpc.CallOption) (*AlarmLogIndexResp, error) {
	return d.svr.AlarmLogIndex(ctx, in)
}

// 告警处理记录
func (m *defaultAlarmCenter) AlarmDealRecordCreate(ctx context.Context, in *AlarmDealRecordCreateReq, opts ...grpc.CallOption) (*WithID, error) {
	client := rule.NewAlarmCenterClient(m.cli.Conn())
	return client.AlarmDealRecordCreate(ctx, in, opts...)
}

// 告警处理记录
func (d *directAlarmCenter) AlarmDealRecordCreate(ctx context.Context, in *AlarmDealRecordCreateReq, opts ...grpc.CallOption) (*WithID, error) {
	return d.svr.AlarmDealRecordCreate(ctx, in)
}

func (m *defaultAlarmCenter) AlarmDealRecordIndex(ctx context.Context, in *AlarmDealRecordIndexReq, opts ...grpc.CallOption) (*AlarmDealRecordIndexResp, error) {
	client := rule.NewAlarmCenterClient(m.cli.Conn())
	return client.AlarmDealRecordIndex(ctx, in, opts...)
}

func (d *directAlarmCenter) AlarmDealRecordIndex(ctx context.Context, in *AlarmDealRecordIndexReq, opts ...grpc.CallOption) (*AlarmDealRecordIndexResp, error) {
	return d.svr.AlarmDealRecordIndex(ctx, in)
}
