// Code generated by goctl. DO NOT EDIT.
// Source: rule.proto

package client

import (
	"context"

	"github.com/i-Things/things/src/rulesvr/internal/svc"
	"github.com/i-Things/things/src/rulesvr/pb/rule"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AlarmDeal                = rule.AlarmDeal
	AlarmDealRecordCreateReq = rule.AlarmDealRecordCreateReq
	AlarmDealRecordIndexReq  = rule.AlarmDealRecordIndexReq
	AlarmDealRecordIndexResp = rule.AlarmDealRecordIndexResp
	AlarmInfo                = rule.AlarmInfo
	AlarmInfoDeleteReq       = rule.AlarmInfoDeleteReq
	AlarmInfoIndexReq        = rule.AlarmInfoIndexReq
	AlarmInfoIndexResp       = rule.AlarmInfoIndexResp
	AlarmLogIndexReq         = rule.AlarmLogIndexReq
	AlarmLogIndexResp        = rule.AlarmLogIndexResp
	AlarmLogInfo             = rule.AlarmLogInfo
	AlarmSceneCreateMultiReq = rule.AlarmSceneCreateMultiReq
	AlarmSceneDeleteReq      = rule.AlarmSceneDeleteReq
	AlarmSceneIndexReq       = rule.AlarmSceneIndexReq
	AlarmSceneIndexResp      = rule.AlarmSceneIndexResp
	DateRange                = rule.DateRange
	FlowInfo                 = rule.FlowInfo
	FlowInfoDeleteReq        = rule.FlowInfoDeleteReq
	FlowInfoIndexReq         = rule.FlowInfoIndexReq
	FlowInfoIndexResp        = rule.FlowInfoIndexResp
	FlowInfoReadReq          = rule.FlowInfoReadReq
	PageInfo                 = rule.PageInfo
	Response                 = rule.Response
	SceneInfo                = rule.SceneInfo
	SceneInfoDeleteReq       = rule.SceneInfoDeleteReq
	SceneInfoIndexReq        = rule.SceneInfoIndexReq
	SceneInfoIndexResp       = rule.SceneInfoIndexResp
	SceneInfoReadReq         = rule.SceneInfoReadReq

	AlarmCenter interface {
		AlarmInfoCreate(ctx context.Context, in *AlarmInfo, opts ...grpc.CallOption) (*Response, error)
		AlarmInfoUpdate(ctx context.Context, in *AlarmInfo, opts ...grpc.CallOption) (*Response, error)
		AlarmInfoDelete(ctx context.Context, in *AlarmInfoDeleteReq, opts ...grpc.CallOption) (*Response, error)
		AlarmInfoIndex(ctx context.Context, in *AlarmInfoIndexReq, opts ...grpc.CallOption) (*Response, error)
		// 告警关联场景联动
		AlarmSceneCreateMulti(ctx context.Context, in *AlarmSceneCreateMultiReq, opts ...grpc.CallOption) (*Response, error)
		AlarmSceneDelete(ctx context.Context, in *AlarmSceneDeleteReq, opts ...grpc.CallOption) (*Response, error)
		AlarmSceneIndex(ctx context.Context, in *AlarmSceneIndexReq, opts ...grpc.CallOption) (*AlarmSceneIndexResp, error)
		// 告警日志
		AlarmLogIndex(ctx context.Context, in *AlarmLogIndexReq, opts ...grpc.CallOption) (*AlarmLogIndexResp, error)
		// 告警处理记录
		AlarmDealRecordCreate(ctx context.Context, in *AlarmDealRecordCreateReq, opts ...grpc.CallOption) (*Response, error)
		AlarmDealRecordIndex(ctx context.Context, in *AlarmDealRecordIndexReq, opts ...grpc.CallOption) (*AlarmDealRecordIndexResp, error)
	}

	defaultAlarmCenter struct {
		cli zrpc.Client
	}

	directAlarmCenter struct {
		svcCtx *svc.ServiceContext
		svr    rule.AlarmCenterServer
	}
)

func NewAlarmCenter(cli zrpc.Client) AlarmCenter {
	return &defaultAlarmCenter{
		cli: cli,
	}
}

func NewDirectAlarmCenter(svcCtx *svc.ServiceContext, svr rule.AlarmCenterServer) AlarmCenter {
	return &directAlarmCenter{
		svr:    svr,
		svcCtx: svcCtx,
	}
}

func (m *defaultAlarmCenter) AlarmInfoCreate(ctx context.Context, in *AlarmInfo, opts ...grpc.CallOption) (*Response, error) {
	client := rule.NewAlarmCenterClient(m.cli.Conn())
	return client.AlarmInfoCreate(ctx, in, opts...)
}

func (d *directAlarmCenter) AlarmInfoCreate(ctx context.Context, in *AlarmInfo, opts ...grpc.CallOption) (*Response, error) {
	return d.svr.AlarmInfoCreate(ctx, in)
}

func (m *defaultAlarmCenter) AlarmInfoUpdate(ctx context.Context, in *AlarmInfo, opts ...grpc.CallOption) (*Response, error) {
	client := rule.NewAlarmCenterClient(m.cli.Conn())
	return client.AlarmInfoUpdate(ctx, in, opts...)
}

func (d *directAlarmCenter) AlarmInfoUpdate(ctx context.Context, in *AlarmInfo, opts ...grpc.CallOption) (*Response, error) {
	return d.svr.AlarmInfoUpdate(ctx, in)
}

func (m *defaultAlarmCenter) AlarmInfoDelete(ctx context.Context, in *AlarmInfoDeleteReq, opts ...grpc.CallOption) (*Response, error) {
	client := rule.NewAlarmCenterClient(m.cli.Conn())
	return client.AlarmInfoDelete(ctx, in, opts...)
}

func (d *directAlarmCenter) AlarmInfoDelete(ctx context.Context, in *AlarmInfoDeleteReq, opts ...grpc.CallOption) (*Response, error) {
	return d.svr.AlarmInfoDelete(ctx, in)
}

func (m *defaultAlarmCenter) AlarmInfoIndex(ctx context.Context, in *AlarmInfoIndexReq, opts ...grpc.CallOption) (*Response, error) {
	client := rule.NewAlarmCenterClient(m.cli.Conn())
	return client.AlarmInfoIndex(ctx, in, opts...)
}

func (d *directAlarmCenter) AlarmInfoIndex(ctx context.Context, in *AlarmInfoIndexReq, opts ...grpc.CallOption) (*Response, error) {
	return d.svr.AlarmInfoIndex(ctx, in)
}

// 告警关联场景联动
func (m *defaultAlarmCenter) AlarmSceneCreateMulti(ctx context.Context, in *AlarmSceneCreateMultiReq, opts ...grpc.CallOption) (*Response, error) {
	client := rule.NewAlarmCenterClient(m.cli.Conn())
	return client.AlarmSceneCreateMulti(ctx, in, opts...)
}

// 告警关联场景联动
func (d *directAlarmCenter) AlarmSceneCreateMulti(ctx context.Context, in *AlarmSceneCreateMultiReq, opts ...grpc.CallOption) (*Response, error) {
	return d.svr.AlarmSceneCreateMulti(ctx, in)
}

func (m *defaultAlarmCenter) AlarmSceneDelete(ctx context.Context, in *AlarmSceneDeleteReq, opts ...grpc.CallOption) (*Response, error) {
	client := rule.NewAlarmCenterClient(m.cli.Conn())
	return client.AlarmSceneDelete(ctx, in, opts...)
}

func (d *directAlarmCenter) AlarmSceneDelete(ctx context.Context, in *AlarmSceneDeleteReq, opts ...grpc.CallOption) (*Response, error) {
	return d.svr.AlarmSceneDelete(ctx, in)
}

func (m *defaultAlarmCenter) AlarmSceneIndex(ctx context.Context, in *AlarmSceneIndexReq, opts ...grpc.CallOption) (*AlarmSceneIndexResp, error) {
	client := rule.NewAlarmCenterClient(m.cli.Conn())
	return client.AlarmSceneIndex(ctx, in, opts...)
}

func (d *directAlarmCenter) AlarmSceneIndex(ctx context.Context, in *AlarmSceneIndexReq, opts ...grpc.CallOption) (*AlarmSceneIndexResp, error) {
	return d.svr.AlarmSceneIndex(ctx, in)
}

// 告警日志
func (m *defaultAlarmCenter) AlarmLogIndex(ctx context.Context, in *AlarmLogIndexReq, opts ...grpc.CallOption) (*AlarmLogIndexResp, error) {
	client := rule.NewAlarmCenterClient(m.cli.Conn())
	return client.AlarmLogIndex(ctx, in, opts...)
}

// 告警日志
func (d *directAlarmCenter) AlarmLogIndex(ctx context.Context, in *AlarmLogIndexReq, opts ...grpc.CallOption) (*AlarmLogIndexResp, error) {
	return d.svr.AlarmLogIndex(ctx, in)
}

// 告警处理记录
func (m *defaultAlarmCenter) AlarmDealRecordCreate(ctx context.Context, in *AlarmDealRecordCreateReq, opts ...grpc.CallOption) (*Response, error) {
	client := rule.NewAlarmCenterClient(m.cli.Conn())
	return client.AlarmDealRecordCreate(ctx, in, opts...)
}

// 告警处理记录
func (d *directAlarmCenter) AlarmDealRecordCreate(ctx context.Context, in *AlarmDealRecordCreateReq, opts ...grpc.CallOption) (*Response, error) {
	return d.svr.AlarmDealRecordCreate(ctx, in)
}

func (m *defaultAlarmCenter) AlarmDealRecordIndex(ctx context.Context, in *AlarmDealRecordIndexReq, opts ...grpc.CallOption) (*AlarmDealRecordIndexResp, error) {
	client := rule.NewAlarmCenterClient(m.cli.Conn())
	return client.AlarmDealRecordIndex(ctx, in, opts...)
}

func (d *directAlarmCenter) AlarmDealRecordIndex(ctx context.Context, in *AlarmDealRecordIndexReq, opts ...grpc.CallOption) (*AlarmDealRecordIndexResp, error) {
	return d.svr.AlarmDealRecordIndex(ctx, in)
}
