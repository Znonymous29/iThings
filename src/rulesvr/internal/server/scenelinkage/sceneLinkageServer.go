// Code generated by goctl. DO NOT EDIT.
// Source: rule.proto

package server

import (
	"context"

	"github.com/i-Things/things/src/rulesvr/internal/logic/scenelinkage"
	"github.com/i-Things/things/src/rulesvr/internal/svc"
	"github.com/i-Things/things/src/rulesvr/pb/rule"
)

type SceneLinkageServer struct {
	svcCtx *svc.ServiceContext
	rule.UnimplementedSceneLinkageServer
}

func NewSceneLinkageServer(svcCtx *svc.ServiceContext) *SceneLinkageServer {
	return &SceneLinkageServer{
		svcCtx: svcCtx,
	}
}

func (s *SceneLinkageServer) SceneInfoCreate(ctx context.Context, in *rule.SceneInfo) (*rule.WithID, error) {
	l := scenelinkagelogic.NewSceneInfoCreateLogic(ctx, s.svcCtx)
	return l.SceneInfoCreate(in)
}

func (s *SceneLinkageServer) SceneInfoUpdate(ctx context.Context, in *rule.SceneInfo) (*rule.Empty, error) {
	l := scenelinkagelogic.NewSceneInfoUpdateLogic(ctx, s.svcCtx)
	return l.SceneInfoUpdate(in)
}

func (s *SceneLinkageServer) SceneInfoDelete(ctx context.Context, in *rule.WithID) (*rule.Empty, error) {
	l := scenelinkagelogic.NewSceneInfoDeleteLogic(ctx, s.svcCtx)
	return l.SceneInfoDelete(in)
}

func (s *SceneLinkageServer) SceneInfoIndex(ctx context.Context, in *rule.SceneInfoIndexReq) (*rule.SceneInfoIndexResp, error) {
	l := scenelinkagelogic.NewSceneInfoIndexLogic(ctx, s.svcCtx)
	return l.SceneInfoIndex(in)
}

func (s *SceneLinkageServer) SceneInfoRead(ctx context.Context, in *rule.WithID) (*rule.SceneInfo, error) {
	l := scenelinkagelogic.NewSceneInfoReadLogic(ctx, s.svcCtx)
	return l.SceneInfoRead(in)
}

func (s *SceneLinkageServer) SceneManuallyTrigger(ctx context.Context, in *rule.WithID) (*rule.Empty, error) {
	l := scenelinkagelogic.NewSceneManuallyTriggerLogic(ctx, s.svcCtx)
	return l.SceneManuallyTrigger(in)
}
