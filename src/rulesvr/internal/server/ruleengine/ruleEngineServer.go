// Code generated by goctl. DO NOT EDIT.
// Source: rule.proto

package server

import (
	"context"

	"github.com/i-Things/things/src/rulesvr/internal/logic/ruleengine"
	"github.com/i-Things/things/src/rulesvr/internal/svc"
	"github.com/i-Things/things/src/rulesvr/pb/rule"
)

type RuleEngineServer struct {
	svcCtx *svc.ServiceContext
	rule.UnimplementedRuleEngineServer
}

func NewRuleEngineServer(svcCtx *svc.ServiceContext) *RuleEngineServer {
	return &RuleEngineServer{
		svcCtx: svcCtx,
	}
}

func (s *RuleEngineServer) FlowInfoCreate(ctx context.Context, in *rule.FlowInfo) (*rule.Response, error) {
	l := ruleenginelogic.NewFlowInfoCreateLogic(ctx, s.svcCtx)
	return l.FlowInfoCreate(in)
}

func (s *RuleEngineServer) FlowInfoUpdate(ctx context.Context, in *rule.FlowInfo) (*rule.Response, error) {
	l := ruleenginelogic.NewFlowInfoUpdateLogic(ctx, s.svcCtx)
	return l.FlowInfoUpdate(in)
}

func (s *RuleEngineServer) FlowInfoDelete(ctx context.Context, in *rule.FlowInfoDeleteReq) (*rule.Response, error) {
	l := ruleenginelogic.NewFlowInfoDeleteLogic(ctx, s.svcCtx)
	return l.FlowInfoDelete(in)
}

func (s *RuleEngineServer) FlowInfoIndex(ctx context.Context, in *rule.FlowInfoIndexReq) (*rule.FlowInfoIndexResp, error) {
	l := ruleenginelogic.NewFlowInfoIndexLogic(ctx, s.svcCtx)
	return l.FlowInfoIndex(in)
}

func (s *RuleEngineServer) FlowInfoRead(ctx context.Context, in *rule.FlowInfoReadReq) (*rule.FlowInfo, error) {
	l := ruleenginelogic.NewFlowInfoReadLogic(ctx, s.svcCtx)
	return l.FlowInfoRead(in)
}
