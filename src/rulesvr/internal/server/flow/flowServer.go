// Code generated by goctl. DO NOT EDIT!
// Source: rule.proto

package server

import (
	"context"

	"github.com/i-Things/things/src/rulesvr/internal/logic/flow"
	"github.com/i-Things/things/src/rulesvr/internal/svc"
	"github.com/i-Things/things/src/rulesvr/pb/rule"
)

type FlowServer struct {
	svcCtx *svc.ServiceContext
	rule.UnimplementedFlowServer
}

func NewFlowServer(svcCtx *svc.ServiceContext) *FlowServer {
	return &FlowServer{
		svcCtx: svcCtx,
	}
}

func (s *FlowServer) FlowInfoCreate(ctx context.Context, in *rule.FlowInfo) (*rule.Response, error) {
	l := flowlogic.NewFlowInfoCreateLogic(ctx, s.svcCtx)
	return l.FlowInfoCreate(in)
}

func (s *FlowServer) FlowInfoUpdate(ctx context.Context, in *rule.FlowInfo) (*rule.Response, error) {
	l := flowlogic.NewFlowInfoUpdateLogic(ctx, s.svcCtx)
	return l.FlowInfoUpdate(in)
}

func (s *FlowServer) FlowInfoDelete(ctx context.Context, in *rule.FlowInfoDeleteReq) (*rule.Response, error) {
	l := flowlogic.NewFlowInfoDeleteLogic(ctx, s.svcCtx)
	return l.FlowInfoDelete(in)
}

func (s *FlowServer) FlowInfoIndex(ctx context.Context, in *rule.FlowInfoIndexReq) (*rule.FlowInfoIndexResp, error) {
	l := flowlogic.NewFlowInfoIndexLogic(ctx, s.svcCtx)
	return l.FlowInfoIndex(in)
}

func (s *FlowServer) FlowInfoRead(ctx context.Context, in *rule.FlowInfoReadReq) (*rule.FlowInfo, error) {
	l := flowlogic.NewFlowInfoReadLogic(ctx, s.svcCtx)
	return l.FlowInfoRead(in)
}
