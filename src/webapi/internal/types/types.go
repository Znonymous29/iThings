// Code generated by goctl. DO NOT EDIT.
package types

type GetCaptchaReq struct {
	Data string `json:"data,optional"`              //短信验证时填写手机号
	Type string `json:"type,options=sms|image"`     //验证方式:短信验证,图片验证码
	Use  string `json:"use,options=login|register"` //用途
}

type GetCaptchaResp struct {
	CodeID string `json:"codeID"`       //验证码编号
	Url    string `json:"url,optional"` //图片验证码url
	Expire int64  `json:"expire"`       //过期时间
}

type JwtToken struct {
	AccessToken  string `json:"accessToken,omitempty"`
	AccessExpire int64  `json:"accessExpire,omitempty"`
	RefreshAfter int64  `json:"refreshAfter,omitempty"`
}

type UserInfo struct {
	Uid        int64  `json:"uid,string"`                           // 用户id
	UserName   string `json:"userName,optional,omitempty"`          //用户名(唯一)
	NickName   string `json:"nickName,optional,omitempty"`          // 用户的昵称
	InviterUid int64  `json:"inviterUid,string,optional,omitempty"` // 邀请人用户id
	InviterId  string `json:"inviterId,optional,omitempty"`         // 邀请码
	Sex        int64  `json:"sex,optional,omitempty"`               // 用户的性别，值为1时是男性，值为2时是女性，值为0时是未知
	City       string `json:"city,optional,omitempty"`              // 用户所在城市
	Country    string `json:"country,optional,omitempty"`           // 用户所在国家
	Province   string `json:"province,optional,omitempty"`          // 用户所在省份
	Language   string `json:"language,optional,omitempty"`          // 用户的语言，简体中文为zh_CN
	HeadImgUrl string `json:"headImgUrl,optional,omitempty"`        // 用户头像
	CreateTime int64  `json:"createTime,string,optional,omitempty"`
}

type LoginReq struct {
	UserID    string `json:"userID,optional"`                               //登录账号(支持用户名,手机号登录) 账号密码登录时需要填写
	PwdType   int32  `json:"pwdtype,optional"`                              //账号密码登录时需要填写.0,无密码 1，明文 2，md5加密
	Password  string `json:"password,optional"`                             //密码，建议md5转换 密码登录时需要填写
	LoginType string `json:"loginType,options=sms|img|wxopen|wxin|wxminip"` //验证类型 sms 短信验证码 img 图形验证码加账号密码登录 wxopen 微信开放平台登录 wxin 微信内登录 wxminip 微信小程序
	Code      string `json:"code,optional"`                                 //验证码    微信登录填code
	CodeID    string `json:"codeID,optional"`                               //验证码编号 微信登录填state
}

type LoginResp struct {
	Info  UserInfo `json:"info"`  //用户信息
	Token JwtToken `json:"token"` //用户token
}

type RegisterCoreReq struct {
	ReqType string `json:"reqType,options=phone|wxopen|wxin|wxminip"` //注册方式:	phone手机号注册 wxopen 微信开放平台登录 wxin 微信内登录 wxminip 微信小程序
	Note    string `json:"note,optional"`                             //手机号注册时填写手机号
	Code    string `json:"code"`                                      //验证码    微信登录填code
	CodeID  string `json:"codeID,optional"`                           //验证码编号 微信登录填state
}

type RegisterCoreResp struct {
	Uid int64 `json:"uid,string"` //用户id
	JwtToken
}

type Register2Req struct {
	Token    string `json:"token"`             //注册第一步的token
	Password string `json:"password,optional"` //明文密码
	UserInfo
}

type ModifyStu struct {
	Type  string `json:"type"`  //修改类型
	Value string `json:"value"` //修改的值
}

type ModifyUserInfoReq struct {
	Info map[string]string `json:"info"` //修改参数key value数组
}

type PageInfo struct {
	Page     int64 `json:"page"`
	PageSize int64 `json:"pageSize"`
}

type LoginAuthReq struct {
	Username    string `json:"username"`              //用户名
	Password    string `json:"password"`              //密码
	ClientID    string `json:"clientID"`              //clientID
	Ip          string `json:"ip"`                    //访问的ip地址
	Certificate string `json:"certificate,omitempty"` //客户端证书 base64后传过来
}

type ProductInfo struct {
	CreatedTime  int64  `json:"createdTime,string,omitempty"` //创建时间 只读
	ProductID    string `json:"productID,omitempty"`          //产品id 只读
	ProductName  string `json:"productName,omitempty"`        //产品名称
	AuthMode     int64  `json:"authMode,omitempty"`           //认证方式:0:账密认证,1:秘钥认证
	DeviceType   int64  `json:"deviceType,omitempty"`         //设备类型:0:设备,1:网关,2:子设备
	CategoryID   int64  `json:"categoryID,omitempty"`         //产品品类
	NetType      int64  `json:"netType,omitempty"`            //通讯方式:0:其他,1:wi-fi,2:2G/3G/4G,3:5G,4:BLE,5:LoRaWAN
	DataProto    int64  `json:"dataProto,omitempty"`          //数据协议:0:自定义,1:数据模板
	AutoRegister int64  `json:"autoRegister,omitempty"`       //动态注册:0:关闭,1:打开,2:打开并自动创建设备
	Secret       string `json:"secret,omitempty"`             //动态注册产品秘钥 只读
	Template     string `json:"template,omitempty"`           //数据模板
	Description  string `json:"description,omitempty"`        //描述
	DevStatus    string `json:"devStatus,omitempty"`          // 产品状态
}

type ManageProductReq struct {
	Opt  int64        `protobuf:"varint,1,opt,name=opt,proto3" json:"opt,omitempty"`  //操作 0:新增 1:修改 2:删除
	Info *ProductInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"` //产品信息
}

type GetProductInfoReq struct {
	ProductID string    `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"` //产品id  如果为空返回所有产品的信息
	Page      *PageInfo `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`           //分页信息,只获取一个则不填
}

type GetProductInfoResp struct {
	Info  []*ProductInfo `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`    //产品信息
	Total int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //拥有的总数(只有分页的时候会返回)
	Num   int64          `json:"num,omitempty"`                                             //返回的数量
}

type DeviceInfo struct {
	ProductID   string `json:"productID,omitempty"`          //产品id 只读
	DeviceName  string `json:"deviceName,omitempty"`         //设备名称 读写
	CreatedTime int64  `json:"createdTime,string,omitempty"` //创建时间 只读
	Secret      string `json:"secret,omitempty"`             //设备秘钥 只读
	FirstLogin  int64  `json:"firstLogin,string,omitempty"`  //激活时间 只读
	LastLogin   int64  `json:"lastLogin,string,omitempty"`   //最后上线时间 只读
	Version     string `json:"version,omitempty"`            // 固件版本  读写
	LogLevel    int64  `json:"logLevel,omitempty"`           // 日志级别:1)关闭 2)错误 3)告警 4)信息 5)调试  读写
	Cert        string `json:"cert,omitempty"`               // 设备证书  只读
}

type ManageDeviceReq struct {
	Opt  int64       `protobuf:"varint,1,opt,name=opt,proto3" json:"opt,omitempty"`  //操作 0:新增 1:修改 2:删除
	Info *DeviceInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"` //设备信息
}

type GetDeviceInfoReq struct {
	DeviceName string    `protobuf:"bytes,1,opt,name=deviceName,proto3" json:"deviceName,optional"` //设备名 为空时获取产品id下的所有设备信息
	ProductID  string    `protobuf:"bytes,2,opt,name=productID,proto3" json:"productID,omitempty"`  //产品id
	Page       *PageInfo `protobuf:"bytes,3,opt,name=page,proto3" json:"page,optional"`             //分页信息 只获取一个则不填
}

type GetDeviceInfoResp struct {
	Info  []*DeviceInfo `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`    //设备信息
	Total int64         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总数(只有分页的时候会返回)
	Num   int64         `json:"num,omitempty"`                                             //返回的数量
}
