// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package userclient

import (
	"context"

	"gitee.com/godLei6/things/src/usersvr/user"

	"github.com/tal-tech/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CheckTokenReq       = user.CheckTokenReq
	CheckTokenResp      = user.CheckTokenResp
	GetUserCoreListReq  = user.GetUserCoreListReq
	GetUserCoreListResp = user.GetUserCoreListResp
	GetUserCoreReq      = user.GetUserCoreReq
	GetUserCoreResp     = user.GetUserCoreResp
	GetUserInfoReq      = user.GetUserInfoReq
	GetUserInfoResp     = user.GetUserInfoResp
	JwtToken            = user.JwtToken
	LoginReq            = user.LoginReq
	LoginResp           = user.LoginResp
	ModifyUserInfoReq   = user.ModifyUserInfoReq
	NilResp             = user.NilResp
	PageInfo            = user.PageInfo
	Register2Req        = user.Register2Req
	Register2Resp       = user.Register2Resp
	RegisterCoreReq     = user.RegisterCoreReq
	RegisterCoreResp    = user.RegisterCoreResp
	UserCore            = user.UserCore
	UserInfo            = user.UserInfo

	User interface {
		Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error)
		RegisterCore(ctx context.Context, in *RegisterCoreReq, opts ...grpc.CallOption) (*RegisterCoreResp, error)
		Register2(ctx context.Context, in *Register2Req, opts ...grpc.CallOption) (*Register2Resp, error)
		GetUserInfo(ctx context.Context, in *GetUserInfoReq, opts ...grpc.CallOption) (*GetUserInfoResp, error)
		GetUserCore(ctx context.Context, in *GetUserCoreReq, opts ...grpc.CallOption) (*GetUserCoreResp, error)
		CheckToken(ctx context.Context, in *CheckTokenReq, opts ...grpc.CallOption) (*CheckTokenResp, error)
		ModifyUserInfo(ctx context.Context, in *ModifyUserInfoReq, opts ...grpc.CallOption) (*NilResp, error)
		GetUserCoreList(ctx context.Context, in *GetUserCoreListReq, opts ...grpc.CallOption) (*GetUserCoreListResp, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

func (m *defaultUser) RegisterCore(ctx context.Context, in *RegisterCoreReq, opts ...grpc.CallOption) (*RegisterCoreResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.RegisterCore(ctx, in, opts...)
}

func (m *defaultUser) Register2(ctx context.Context, in *Register2Req, opts ...grpc.CallOption) (*Register2Resp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.Register2(ctx, in, opts...)
}

func (m *defaultUser) GetUserInfo(ctx context.Context, in *GetUserInfoReq, opts ...grpc.CallOption) (*GetUserInfoResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUserInfo(ctx, in, opts...)
}

func (m *defaultUser) GetUserCore(ctx context.Context, in *GetUserCoreReq, opts ...grpc.CallOption) (*GetUserCoreResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUserCore(ctx, in, opts...)
}

func (m *defaultUser) CheckToken(ctx context.Context, in *CheckTokenReq, opts ...grpc.CallOption) (*CheckTokenResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.CheckToken(ctx, in, opts...)
}

func (m *defaultUser) ModifyUserInfo(ctx context.Context, in *ModifyUserInfoReq, opts ...grpc.CallOption) (*NilResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.ModifyUserInfo(ctx, in, opts...)
}

func (m *defaultUser) GetUserCoreList(ctx context.Context, in *GetUserCoreListReq, opts ...grpc.CallOption) (*GetUserCoreListResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUserCoreList(ctx, in, opts...)
}
