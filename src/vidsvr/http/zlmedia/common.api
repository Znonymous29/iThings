syntax = "v1"

info(
    title: "ZLMediakit"
    desc: "ZLMediakit commont struct"
    author: "airgens"
    email: "wfjdemmye@163.com"
    version: "v1"
)
type (
    SvcZlmedia struct {
        IP     string `json:"ip"`
        Port   int64  `json:"port"`
        Secret string `json:"Secret"`
    }

    ThreadLoad struct {
        Delay int64 `json:"delay"`
        Load int64 `json:"load"`
    }

    MediaPlayer struct {
        OriginSock
        Typeid  string  `json:"typeid"`
    }

    OriginSock struct {
        Identifier string   `json:"identifier"`
        LocalIp string `json:"local_ip"`
        LocalPort int64 `json:"local_port""`
        PeerIp string `json:"peer_ip"`
        PeerPort int64 `json:"peer_port"`
    }
    StreamTrack struct {
        Channels int64  `json:"channels"`
        CodecId int64  `json:"codec_id"`
        CodecIdName string    `json:"codec_id_name"`
        CodecType   int64    `json:"codec_type"`
        Ready bool      `json:"ready"`
        SampleBit int64    `json:"sample_bit"`
        SampleRate int64       `json:"sample_rate"`
        Fps int64      `json:"fps"`
        Height  int64 `json:"height"`
        Width   int64 `json:"width"`
    }
    Statistic struct {
        Buffer  int `json:"Buffer"`
        BufferLikeString int `json:"BufferLikeString"`
        BufferList int  `json:"BufferList"`
        BufferRaw int   `json:"BufferRaw"`
        Frame int   `json:"Frame"`
        FrameImp int    `json:"FrameImp"`
        MediaSource int `json:"MediaSource"`
        MultiMediaSourceMuxer int   `json:"MultiMediaSourceMuxer"`
        RtmpPacket  int `json:"RtmpPacket"`
        RtpPacket   int `json:"RtpPacket"`
        Socket int  `json:"Socket"`
        TcpClient int   `json:"TcpClient"`
        TcpServer int   `json:"TcpServer"`
        TcpSession int  `json:"TcpSession"`
        UdpServer int   `json:"UdpServer"`
        UdpSession  int    `json:"UdpSession"`
    }
    AllSession struct {
        Id string `json:"id"`
        LocalIp string `json:"local_ip"`
        LocalPort int64 `json:"local_port""`
        PeerIp string `json:"peer_ip"`
        PeerPort int64 `json:"peer_port"`
        Typeid string `json:"typeid"`
    }
    MediaList struct {
        App string  `json:"app"`
        ReaderCount int64   `json:"readerCount"`
        TotalReaderCount int64  `json:"totalReaderCount"`
        Schema string       `json:"schema"`
        Stream string       `json:"stream"`
        OriginSock OriginSock  `json:"originSock"`
        OriginType int64    `json:"originType"`
        OriginTypeStr string    `json:"originTypeStr"`
        OriginUrl string    `json:"originUrl"`
        CreateStamp string  `json:"createStamp"`
        AliveSecond string      `json:"aliveSecond"`
        BytesSpeed int64    `json:"bytesSpeed"`
        Tracks []StreamTrack    `json:"tracks"`
        Vhost   string  `json:"vhost"`
    }
    Version struct {
        branchName string `json:"branchName"`
        buildTime string  `json:"buildTime"`
        commitHash string `json:"commitHash"`
    }
    ServerConfig struct{
        ApiDebug                       string `json:"api.apiDebug,omitempty"`
        ApiDefaultSnap                 string `json:"api.defaultSnap,omitempty"`
        ApiSecret                      string `json:"api.secret,omitempty"`
        ApiSnapRoot                    string `json:"api.snapRoot,omitempty"`
        ClusterOriginUrl               string `json:"cluster.origin_url,omitempty"`
        ClusterRetryCount              string `json:"cluster.retry_count,omitempty"`
        ClusterTimeoutSec              string `json:"cluster.timeout_sec,omitempty"`
        FfmpegBin                      string `json:"ffmpeg.bin,omitempty"`
        FfmpegCmd                      string `json:"ffmpeg.cmd,omitempty"`
        FfmpegLog                      string `json:"ffmpeg.log,omitempty"`
        FfmpegRestartSec               string `json:"ffmpeg.restart_sec,omitempty"`
        FfmpegSnap                     string `json:"ffmpeg.snap,omitempty"`
        GeneralCheckNvidiaDev          string `json:"general.check_nvidia_dev,omitempty"`
        GeneralEnableVhost             string `json:"general.enableVhost,omitempty"`
        GeneralEnableFfmpegLog         string `json:"general.enable_ffmpeg_log,omitempty"`
        GeneralFlowThreshold           string `json:"general.flowThreshold,omitempty"`
        GeneralMaxStreamWaitMS         string `json:"general.maxStreamWaitMS,omitempty"`
        GeneralMediaServerId           string `json:"general.mediaServerId,omitempty"`
        GeneralMergeWriteMS            string `json:"general.mergeWriteMS,omitempty"`
        GeneralResetWhenRePlay         string `json:"general.resetWhenRePlay,omitempty"`
        GeneralStreamNoneReaderDelayMS string `json:"general.streamNoneReaderDelayMS,omitempty"`
        GeneralUnreadyFrameCache       string `json:"general.unready_frame_cache,omitempty"`
        GeneralWaitAddTrackMs          string `json:"general.wait_add_track_ms,omitempty"`
        GeneralWaitTrackReadyMs        string `json:"general.wait_track_ready_ms,omitempty"`
        HlsBroadcastRecordTs           string `json:"hls.broadcastRecordTs,omitempty"`
        HlsDeleteDelaySec              string `json:"hls.deleteDelaySec,omitempty"`
        HlsFileBufSize                 string `json:"hls.fileBufSize,omitempty"`
        HlsSegDur                      string `json:"hls.segDur,omitempty"`
        HlsSegKeep                     string `json:"hls.segKeep,omitempty"`
        HlsSegNum                      string `json:"hls.segNum,omitempty"`
        HlsSegRetain                   string `json:"hls.segRetain,omitempty"`
        HookAliveInterval              string `json:"hook.alive_interval,omitempty"`
        HookEnable                     string `json:"hook.enable,omitempty"`
        HookOnFlowReport               string `json:"hook.on_flow_report,omitempty"`
        HookOnHttpAccess               string `json:"hook.on_http_access,omitempty"`
        HookOnPlay                     string `json:"hook.on_play,omitempty"`
        HookOnPublish                  string `json:"hook.on_publish,omitempty"`
        HookOnRecordMp4                string `json:"hook.on_record_mp4,omitempty"`
        HookOnRecordTs                 string `json:"hook.on_record_ts,omitempty"`
        HookOnRtpServerTimeout         string `json:"hook.on_rtp_server_timeout,omitempty"`
        HookOnRtspAuth                 string `json:"hook.on_rtsp_auth,omitempty"`
        HookOnRtspRealm                string `json:"hook.on_rtsp_realm,omitempty"`
        HookOnSendRtpStopped           string `json:"hook.on_send_rtp_stopped,omitempty"`
        HookOnServerExited             string `json:"hook.on_server_exited,omitempty"`
        HookOnServerKeepalive          string `json:"hook.on_server_keepalive,omitempty"`
        HookOnServerStarted            string `json:"hook.on_server_started,omitempty"`
        HookOnShellLogin               string `json:"hook.on_shell_login,omitempty"`
        HookOnStreamChanged            string `json:"hook.on_stream_changed,omitempty"`
        HookOnStreamNoneReader         string `json:"hook.on_stream_none_reader,omitempty"`
        HookOnStreamNotFound           string `json:"hook.on_stream_not_found,omitempty"`
        HookRetry                      string `json:"hook.retry,omitempty"`
        HookRetryDelay                 string `json:"hook.retry_delay,omitempty"`
        HookStreamChangedSchemas       string `json:"hook.stream_changed_schemas,omitempty"`
        HookTimeoutSec                 string `json:"hook.timeoutSec,omitempty"`
        HttpAllowCrossDomains          string `json:"http.allow_cross_domains,omitempty"`
        HttpAllowIpRange               string `json:"http.allow_ip_range,omitempty"`
        HttpCharSet                    string `json:"http.charSet,omitempty"`
        HttpDirMenu                    string `json:"http.dirMenu,omitempty"`
        HttpForbidCacheSuffix          string `json:"http.forbidCacheSuffix,omitempty"`
        HttpForwardedIpHeader          string `json:"http.forwarded_ip_header,omitempty"`
        HttpKeepAliveSecond            string `json:"http.keepAliveSecond,omitempty"`
        HttpMaxReqSize                 string `json:"http.maxReqSize,omitempty"`
        HttpNotFound                   string `json:"http.notFound,omitempty"`
        HttpPort                       string `json:"http.port,omitempty"`
        HttpRootPath                   string `json:"http.rootPath,omitempty"`
        HttpSendBufSize                string `json:"http.sendBufSize,omitempty"`
        HttpSslport                    string `json:"http.sslport,omitempty"`
        HttpVirtualPath                string `json:"http.virtualPath,omitempty"`
        MulticastAddrMax               string `json:"multicast.addrMax,omitempty"`
        MulticastAddrMin               string `json:"multicast.addrMin,omitempty"`
        MulticastUdpTTL                string `json:"multicast.udpTTL,omitempty"`
        ProtocolAddMuteAudio           string `json:"protocol.add_mute_audio,omitempty"`
        ProtocolAutoClose              string `json:"protocol.auto_close,omitempty"`
        ProtocolContinuePushMs         string `json:"protocol.continue_push_ms,omitempty"`
        ProtocolEnableAudio            string `json:"protocol.enable_audio,omitempty"`
        ProtocolEnableFmp4             string `json:"protocol.enable_fmp4,omitempty"`
        ProtocolEnableHls              string `json:"protocol.enable_hls,omitempty"`
        ProtocolEnableHlsFmp4          string `json:"protocol.enable_hls_fmp4,omitempty"`
        ProtocolEnableMp4              string `json:"protocol.enable_mp4,omitempty"`
        ProtocolEnableRtmp             string `json:"protocol.enable_rtmp,omitempty"`
        ProtocolEnableRtsp             string `json:"protocol.enable_rtsp,omitempty"`
        ProtocolEnableTs               string `json:"protocol.enable_ts,omitempty"`
        ProtocolFmp4Demand             string `json:"protocol.fmp4_demand,omitempty"`
        ProtocolHlsDemand              string `json:"protocol.hls_demand,omitempty"`
        ProtocolHlsSavePath            string `json:"protocol.hls_save_path,omitempty"`
        ProtocolModifyStamp            string `json:"protocol.modify_stamp,omitempty"`
        ProtocolMp4AsPlayer            string `json:"protocol.mp4_as_player,omitempty"`
        ProtocolMp4MaxSecond           string `json:"protocol.mp4_max_second,omitempty"`
        ProtocolMp4SavePath            string `json:"protocol.mp4_save_path,omitempty"`
        ProtocolRtmpDemand             string `json:"protocol.rtmp_demand,omitempty"`
        ProtocolRtspDemand             string `json:"protocol.rtsp_demand,omitempty"`
        ProtocolTsDemand               string `json:"protocol.ts_demand,omitempty"`
        RecordAppName                  string `json:"record.appName,omitempty"`
        RecordFastStart                string `json:"record.fastStart,omitempty"`
        RecordFileBufSize              string `json:"record.fileBufSize,omitempty"`
        RecordFileRepeat               string `json:"record.fileRepeat,omitempty"`
        RecordSampleMS                 string `json:"record.sampleMS,omitempty"`
        RtcExternIP                    string `json:"rtc.externIP,omitempty"`
        RtcPort                        string `json:"rtc.port,omitempty"`
        RtcPreferredCodecA             string `json:"rtc.preferredCodecA,omitempty"`
        RtcPreferredCodecV             string `json:"rtc.preferredCodecV,omitempty"`
        RtcRembBitRate                 string `json:"rtc.rembBitRate,omitempty"`
        RtcTcpPort                     string `json:"rtc.tcpPort,omitempty"`
        RtcTimeoutSec                  string `json:"rtc.timeoutSec,omitempty"`
        RtmpHandshakeSecond            string `json:"rtmp.handshakeSecond,omitempty"`
        RtmpKeepAliveSecond            string `json:"rtmp.keepAliveSecond,omitempty"`
        RtmpPort                       string `json:"rtmp.port,omitempty"`
        RtmpSslport                    string `json:"rtmp.sslport,omitempty"`
        RtpAudioMtuSize                string `json:"rtp.audioMtuSize,omitempty"`
        RtpH264StapA                   string `json:"rtp.h264_stap_a,omitempty"`
        RtpLowLatency                  string `json:"rtp.lowLatency,omitempty"`
        RtpRtpMaxSize                  string `json:"rtp.rtpMaxSize,omitempty"`
        RtpVideoMtuSize                string `json:"rtp.videoMtuSize,omitempty"`
        RtpProxyDumpDir                string `json:"rtp_proxy.dumpDir,omitempty"`
        RtpProxyGopCache               string `json:"rtp_proxy.gop_cache,omitempty"`
        RtpProxyH264Pt                 string `json:"rtp_proxy.h264_pt,omitempty"`
        RtpProxyH265Pt                 string `json:"rtp_proxy.h265_pt,omitempty"`
        RtpProxyOpusPt                 string `json:"rtp_proxy.opus_pt,omitempty"`
        RtpProxyPort                   string `json:"rtp_proxy.port,omitempty"`
        RtpProxyPortRange              string `json:"rtp_proxy.port_range,omitempty"`
        RtpProxyPsPt                   string `json:"rtp_proxy.ps_pt,omitempty"`
        RtpProxyTimeoutSec             string `json:"rtp_proxy.timeoutSec,omitempty"`
        RtspAuthBasic                  string `json:"rtsp.authBasic,omitempty"`
        RtspDirectProxy                string `json:"rtsp.directProxy,omitempty"`
        RtspHandshakeSecond            string `json:"rtsp.handshakeSecond,omitempty"`
        RtspKeepAliveSecond            string `json:"rtsp.keepAliveSecond,omitempty"`
        RtspLowLatency                 string `json:"rtsp.lowLatency,omitempty"`
        RtspPort                       string `json:"rtsp.port,omitempty"`
        RtspRtpTransportType           string `json:"rtsp.rtpTransportType,omitempty"`
        RtspSslport                    string `json:"rtsp.sslport,omitempty"`
        ShellMaxReqSize                string `json:"shell.maxReqSize,omitempty"`
        ShellPort                      string `json:"shell.port,omitempty"`
        SrtLatencyMul                  string `json:"srt.latencyMul,omitempty"`
        SrtPktBufSize                  string `json:"srt.pktBufSize,omitempty"`
        SrtPort                        string `json:"srt.port,omitempty"`
        SrtTimeoutSec                  string `json:"srt.timeoutSec,omitempty"`
    }
)
type (
    //Respond   0/index/api/getApiList
    //Resquest  默认请求
    IndexApiListResp struct {
        Code int64    `json:"code"`
        Data []string `json:"data"`
    }
        //Respond   1/index/api/getThreadsLoad
        //Resquest  默认请求
    IndexApiThreadLoadResp struct {
        Code int64                          `json:"code"`
        Data []ThreadLoad           `json:"data"`
    }
        //Respond   2/index/api/getWorkThreadsLoad
        //Resquest 默认请求
    IndexApiWorkThreadLoadResp struct {
        Code int64                          `json:"code"`
        Data []ThreadLoad           `json:"data"`
    }


        //Respond   3/index/api/getServerConfig
    IndexApiServerConfigResp struct {
        Code int64                              `json:"code"`
        Data []ServerConfig             `json:"data"`
    }
        //Respond   4/index/api/setServerConfig
    IndexApiSetServerConfigResp struct {
        Changed int64          `json:"changed"`
        Code int64             `json:"code"`
    }
        //Request

        //Respond   5/index/api/restartServer
        //Resquest 默认请求
    IndexApiRestartServerResp struct {
        Code int64              `json:"code"`
        Msg  int64               `json:"msg"`
    }

        //Respond   6/index/api/getMediaList
    IndexApiMediaListResp struct {
        Code int64                              `json:"code"`
        Data []MediaList                `json:"data"`
    }

        //Respond   7/index/api/close_stream(已过期，请使用close_streams接口替换)
    IndexApiCloseStreamResp struct {
        Code int64                              `json:"code"`
        Result  int64 `json:"result"`
        Msg string  `json:"msg"`
    }

        //Respond   8/index/api/close_streams
    IndexApiCloseStreamsResp struct {
        Code        int64       `json:"code"`
        CountHit    int64       `json:"count_hit"`
        CountClosed int64       `json:"count_closed"`
    }

    IndexApiAllSession struct {
        Id string `json:"id"`
        LocalIp string `json:"local_ip"`
        LocalPort int64 `json:"local_port""`
        PeerIp string `json:"peer_ip"`
        PeerPort int64 `json:"peer_port"`
        Typeid string `json:"typeid"`
    }
        //Respond   9/index/api/getAllSession
    IndexApiAllSessionResp struct {
        Code int64                      `json:"code"`
        Data []IndexApiAllSession `json:"data"`
    }

        //Resond    10/index/api/kick_session
    IndexApiKickSessionResp struct {
        Code int64          `json:"code"`
        Msg  string         `json:"msg"`
    }

        //Respond    11/index/api/kick_sessions
    IndexApiKickSessionsResp struct {
        Code int64          `json:"code"`
        CountHit    int64   `json:"count_hit"`
        Msg  string         `json:"msg"`
    }

    IndexApiAddStreamKey struct{
        Key string  `json:"key"`
    }
        //Respond   12/index/api/addStreamProxy
    IndexApiAddStreamProxyResp struct {
        Code    int64 `json:"code"`
        Data    IndexApiAddStreamKey `json:"data"`
    }

        //Respond   13/index/api/delStreamProxy(流注册成功后，也可以使用close_streams接口替代)
    IndexApiAddStreamFlag struct{
        Flag bool  `json:"flag"`
    }
    IndexApiDelStreamProxyResp struct {
        Code    int64 `json:"code"`
        Data    IndexApiAddStreamFlag `json:"data"`
    }

        //Respond   14/index/api/addFFmpegSource 通过fork FFmpeg进程的方式拉流代理，支持任意协议
    IndexApiAddFFmpegSourceResp struct {
        Code    int64 `json:"code"`
        Data    IndexApiAddStreamKey `json:"data"`
    }
        //Respond   15/index/api/delFFmpegSource(流注册成功后，也可以使用close_streams接口替代)
    IndexApiDelFFmpegSourceResp struct {
        Code    int64 `json:"code"`
        Data    IndexApiAddStreamFlag `json:"data"`
    }

        //Respond   16/index/api/isMediaOnline(已过期，请使用getMediaList接口替代)
    IndexApiIsMediaOnlineResp struct {
        Code    int64 `json:"code"`
        Online bool   `json:"online"`
    }

        //Respond   17/index/api/getMediaInfo(已过期，请使用getMediaList接口替代)
    IndexApiMediaInfoResp struct {
        Code    int64 `json:"code"`
        Online bool   `json:"online"`
        ReaderCount int64 `json:"readerCount"`
        TotalReaderCount    int64 `json:"totalReaderCount"`
        Tracks  []StreamTrack `json:"tracks"`
    }
        //Respond   18/index/api/getRtpInfo
    IndexApiRtpInfoResp struct {
        Code    int64 `json:"code"`
        Exist   bool    `json:"exist"`
        PeerIp string `json:"peer_ip"`
        PeerPort int64 `json:"peer_port"`
        LocalIp string `json:"local_ip"`
        LocalPort int64 `json:"local_port"`
    }

        //Respond   19/index/api/getMp4RecordFile
    IndexApiRecord struct {
        Paths       []string    `json:"paths"`
        RootPath    string  `json:"rootPath"`
    }
    IndexApiMp4RecordFileResp struct {
        Code    int64 `json:"code"`
        Data    IndexApiRecord  `json:"data"`
    }

        //Respond   20/index/api/startRecord
    IndexApiStartRecordResp struct {
        Code int64 `json:"code"`
        Result  bool    `json:"result"`
    }

        //Respond   21/index/api/stopRecord
    IndexApiStopRecordResp struct {
        Code int64 `json:"code"`
        Result  bool    `json:"result"`
    }

        //Respond   22/index/api/isRecording
    IndexApiIsRecordingResp struct {
        Code int64 `json:"code"`
        Status  bool    `json:"status"`
    }

        //Respond   23/index/api/getSnap
    IndexApiSnapResp struct {
        Data []byte `json:"Data"`
    }

        //Respond   24/index/api/openRtpServer
    IndexApiOpenRtpServerResp struct {
        Code int64 `json:"code"`
        Port    int64 `json:"port"`
    }

        //Respond   25/index/api/closeRtpServer
    IndexApiCloseRtpServerResp struct {
        Code int64 `json:"code"`
        Hit    int64 `json:"hit"`
    }

    IndexApiRtp struct {
        Port    int64 `json:"port"`
        StreamId    string  `json:"stream_id"`
    }
        //Respond   26/index/api/listRtpServer
    IndexApiListRtpServerResp struct {
        Code    int64 `json:"code"`
        Data    []IndexApiRtp  `json:"data"`
    }

        //Respond   27/index/api/startSendRtp
    IndexApiStartSendRtpResp struct {
        Code    int64 `json:"code"`
        LocalProt    int64  `json:"local_port"`
    }

        //Respond   27.1/index/api/startSendRtpPassive
    IndexApiStartSendRtpPassiveResp struct {
        Code    int64 `json:"code"`
        LocalProt    int64  `json:"local_port"`
    }

        //Respond   28/index/api/stopSendRtp
    IndexApiStopSendRtpResp struct {
        Code    int64 `json:"code"`
    }

        //Respond   29/index/api/getStatistic
    IndexApiStatisticResp struct {
        Code    int64 `json:"code"`
        Data    Statistic   `json:"data"`
    }

        //Respond   30/index/api/addStreamPusherProxy
    IndexApiAddStreamPusherProxyResp struct {
        Code    int64 `json:"code"`
        Data    IndexApiAddStreamKey   `json:"data"`
    }

        //Respond   31/index/api/delStreamPusherProxy(可以使用close_streams接口关闭源直播流也可以停止推流)
    IndexDelStreamPusherProxyResp struct {
        Code    int64 `json:"code"`
        Data    IndexApiAddStreamFlag   `json:"data"`
    }

        //Respond   32/index/api/version(获取版本信息)
    IndexApiVersion struct {
        branchName string `json:"branchName"`
        buildTime string  `json:"buildTime"`
        commitHash string `json:"commitHash"`
    }
    IndexApiVersionResp struct {
        Code int64                     `json:"code"`
        Data IndexApiVersion           `json:"data"`
    }
        //Respond   33/index/api/getMediaPlayerList
    IndexApiMediaPlayerListResp struct {
        Code int64                     `json:"code"`
        Data MediaPlayer           `json:"data"`
    }
)
